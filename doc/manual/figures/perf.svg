<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="800" height="918" onload="init(evt)" viewBox="0 0 800 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="800.0" height="918.0" fill="url(#background)"  />
<text id="title" x="400.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="690.00" y="24" >Search</text>
<text id="ignorecase" x="774.00" y="24" >ic</text>
<text id="matched" x="690.00" y="901" > </text>
<g id="frames">
<g >
<title>std::map&lt;unsigned short, ns3::pfsFlowPerf_t, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::find (198,041 samples, 0.02%)</title><rect x="104.3" y="469" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="107.29" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_M_begin (165,062 samples, 0.02%)</title><rect x="55.1" y="453" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="58.06" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_M_mbegin (190,024 samples, 0.02%)</title><rect x="186.4" y="437" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="189.45" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_valptr (198,501 samples, 0.02%)</title><rect x="675.2" y="453" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="678.20" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (550,220 samples, 0.06%)</title><rect x="483.2" y="325" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="486.21" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (5,659,329 samples, 0.58%)</title><rect x="370.7" y="533" width="4.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="373.73" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (128,671 samples, 0.01%)</title><rect x="78.6" y="341" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="81.56" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Ptr (155,467 samples, 0.02%)</title><rect x="361.5" y="501" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="364.46" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (206,217 samples, 0.02%)</title><rect x="577.5" y="453" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="580.52" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_Vector_base (487,446 samples, 0.05%)</title><rect x="125.6" y="357" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="128.59" y="367.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (5,134,622 samples, 0.53%)</title><rect x="660.7" y="469" width="4.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="663.67" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::operator (356,060 samples, 0.04%)</title><rect x="75.0" y="517" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="78.03" y="527.5" ></text>
</g>
<g >
<title>decltype  (247,590 samples, 0.03%)</title><rect x="564.2" y="117" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="567.20" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (188,646 samples, 0.02%)</title><rect x="122.1" y="533" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="125.12" y="543.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (529,781 samples, 0.05%)</title><rect x="598.3" y="261" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="601.34" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::deallocate (124,394 samples, 0.01%)</title><rect x="776.2" y="293" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="779.16" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteFlowId_t, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::find (150,793 samples, 0.02%)</title><rect x="18.3" y="293" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="21.31" y="303.5" ></text>
</g>
<g >
<title>pow (195,678 samples, 0.02%)</title><rect x="603.6" y="309" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="606.59" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::~_Vector_base (162,749 samples, 0.02%)</title><rect x="133.3" y="485" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="136.29" y="495.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::Packet&gt;::Delete (900,924 samples, 0.09%)</title><rect x="76.0" y="261" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="78.98" y="271.5" ></text>
</g>
<g >
<title>ns3::LteNetDevice::GetNode (287,608 samples, 0.03%)</title><rect x="66.7" y="517" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="69.74" y="527.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (421,730 samples, 0.04%)</title><rect x="281.3" y="501" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="284.26" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; &gt; (183,538 samples, 0.02%)</title><rect x="18.0" y="245" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="21.01" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::at (475,937 samples, 0.05%)</title><rect x="224.9" y="485" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="227.85" y="495.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (304,289 samples, 0.03%)</title><rect x="15.5" y="389" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="18.45" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::_M_valptr (126,936 samples, 0.01%)</title><rect x="565.3" y="197" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="568.26" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_S_relocate (236,704 samples, 0.02%)</title><rect x="219.7" y="437" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="222.66" y="447.5" ></text>
</g>
<g >
<title>void ns3::Simulator::ScheduleWithContext&lt;void  (11,324,289 samples, 1.17%)</title><rect x="333.3" y="501" width="9.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="336.30" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~_Vector_base (279,523 samples, 0.03%)</title><rect x="379.9" y="293" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="382.94" y="303.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::HigherLayerSelected_s*&gt; (151,525 samples, 0.02%)</title><rect x="255.6" y="325" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="258.57" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned short&gt;::allocate (378,466 samples, 0.04%)</title><rect x="218.8" y="389" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="221.77" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::operator+ (275,310 samples, 0.03%)</title><rect x="622.7" y="501" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="625.74" y="511.5" ></text>
</g>
<g >
<title>ns3::MobilityModel::GetPosition (488,812 samples, 0.05%)</title><rect x="738.2" y="549" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="741.18" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (350,404 samples, 0.04%)</title><rect x="223.4" y="453" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="226.42" y="463.5" ></text>
</g>
<g >
<title>double std::reduce&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double&gt; (204,657 samples, 0.02%)</title><rect x="725.9" y="325" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="728.92" y="335.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (314,249 samples, 0.03%)</title><rect x="11.2" y="517" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.17" y="527.5" ></text>
</g>
<g >
<title>unsigned int* std::__fill_n_a&lt;unsigned int*, unsigned long, unsigned int&gt; (643,609 samples, 0.07%)</title><rect x="695.9" y="405" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="698.92" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::_M_lower_bound (1,092,232 samples, 0.11%)</title><rect x="223.9" y="453" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="226.94" y="463.5" ></text>
</g>
<g >
<title>ns3::IsotropicAntennaModel::GetGainDb (146,639 samples, 0.02%)</title><rect x="66.5" y="517" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="69.53" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s&gt; (416,767 samples, 0.04%)</title><rect x="106.8" y="405" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="109.77" y="415.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::~MacCeListElement_s (204,134 samples, 0.02%)</title><rect x="457.7" y="261" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="460.69" y="271.5" ></text>
</g>
<g >
<title>ns3::EventId::EventId (124,898 samples, 0.01%)</title><rect x="706.2" y="469" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="709.19" y="479.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::ReadU32 (411,294 samples, 0.04%)</title><rect x="426.8" y="181" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="429.81" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_ptr (532,897 samples, 0.05%)</title><rect x="348.1" y="501" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="351.13" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_valptr (427,542 samples, 0.04%)</title><rect x="158.3" y="341" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="161.27" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (148,894 samples, 0.02%)</title><rect x="303.0" y="501" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="305.97" y="511.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (583,431 samples, 0.06%)</title><rect x="324.9" y="453" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="327.85" y="463.5" ></text>
</g>
<g >
<title>double* std::fill_n&lt;double*, unsigned long, double&gt; (461,600 samples, 0.05%)</title><rect x="301.4" y="373" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="304.40" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (4,598,067 samples, 0.47%)</title><rect x="545.4" y="181" width="3.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="548.41" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (394,803 samples, 0.04%)</title><rect x="468.0" y="453" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="471.00" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::~LteSpectrumSignalParametersDataFrame (2,421,676 samples, 0.25%)</title><rect x="652.5" y="453" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="655.49" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (208,316 samples, 0.02%)</title><rect x="91.4" y="533" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="94.37" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::operator* (332,309 samples, 0.03%)</title><rect x="428.9" y="277" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="431.92" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MatrixArray&lt;std::complex&lt;double&gt; &gt; const&gt;::Acquire (149,159 samples, 0.02%)</title><rect x="645.4" y="437" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="648.40" y="447.5" ></text>
</g>
<g >
<title>unsigned short* std::uninitialized_fill_n&lt;unsigned short*, unsigned long, unsigned short&gt; (858,492 samples, 0.09%)</title><rect x="252.1" y="437" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="255.05" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Copy&lt;ns3::SpectrumValue&gt; (148,581 samples, 0.02%)</title><rect x="114.8" y="485" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="117.85" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel const&gt;::operator (353,481 samples, 0.04%)</title><rect x="740.4" y="501" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="743.37" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (487,893 samples, 0.05%)</title><rect x="407.7" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="410.68" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::find (146,964 samples, 0.02%)</title><rect x="99.3" y="469" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="102.32" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_lower_bound (310,068 samples, 0.03%)</title><rect x="437.2" y="261" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="440.20" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_impl::_Vector_impl (201,403 samples, 0.02%)</title><rect x="445.1" y="293" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="448.11" y="303.5" ></text>
</g>
<g >
<title>decltype  (197,496 samples, 0.02%)</title><rect x="342.1" y="325" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="345.10" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::operator[] (232,400 samples, 0.02%)</title><rect x="694.6" y="485" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="697.64" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::push_back (329,003 samples, 0.03%)</title><rect x="101.5" y="469" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="104.53" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::UlInfoListElement_s*, ns3::UlInfoListElement_s&gt; (271,620 samples, 0.03%)</title><rect x="265.5" y="485" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="268.48" y="495.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (207,577 samples, 0.02%)</title><rect x="78.9" y="485" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="81.90" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::find (1,864,747 samples, 0.19%)</title><rect x="169.5" y="453" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="172.46" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::size (319,528 samples, 0.03%)</title><rect x="250.4" y="437" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="253.39" y="447.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::operator (29,097,935 samples, 3.00%)</title><rect x="441.0" y="549" width="23.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="444.04" y="559.5" >n..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::allocate (267,808 samples, 0.03%)</title><rect x="499.4" y="453" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="502.42" y="463.5" ></text>
</g>
<g >
<title>[unknown] (29,966,440 samples, 3.09%)</title><rect x="11.2" y="837" width="24.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.15" y="847.5" >[..</text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="741" width="18.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="20.17" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::_S_key (509,708 samples, 0.05%)</title><rect x="224.1" y="437" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="227.07" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::operator= (231,116 samples, 0.02%)</title><rect x="148.1" y="421" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="151.10" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~vector (296,190 samples, 0.03%)</title><rect x="131.2" y="501" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="134.25" y="511.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlRlcBufferReq (2,595,942 samples, 0.27%)</title><rect x="25.4" y="341" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="28.36" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;::_M_valptr (197,171 samples, 0.02%)</title><rect x="58.1" y="437" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="61.09" y="447.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;&amp;&gt;::type&amp;&amp; std::move&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;&amp;&gt; (190,575 samples, 0.02%)</title><rect x="381.4" y="421" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="384.41" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::end (236,767 samples, 0.02%)</title><rect x="690.6" y="485" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="693.59" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_deallocate (378,541 samples, 0.04%)</title><rect x="256.4" y="357" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="259.39" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;::base (239,920 samples, 0.02%)</title><rect x="257.1" y="485" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="260.13" y="495.5" ></text>
</g>
<g >
<title>__pow_finite@plt (150,295 samples, 0.02%)</title><rect x="678.9" y="485" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="681.89" y="495.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::UpdateSinrPerceived (1,031,003 samples, 0.11%)</title><rect x="482.2" y="341" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="485.23" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (168,940 samples, 0.02%)</title><rect x="78.5" y="453" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="81.52" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_begin (366,917 samples, 0.04%)</title><rect x="507.3" y="517" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="510.28" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_valptr (244,479 samples, 0.03%)</title><rect x="507.8" y="485" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="510.80" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; (155,906 samples, 0.02%)</title><rect x="258.3" y="421" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="261.33" y="431.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetParent (124,384 samples, 0.01%)</title><rect x="542.4" y="245" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="545.42" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::deallocate (199,701 samples, 0.02%)</title><rect x="716.8" y="357" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="719.83" y="367.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::CreateTxPowerSpectralDensity (6,920,606 samples, 0.71%)</title><rect x="674.3" y="533" width="5.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="677.32" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;* std::__copy_move_a2&lt;true, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*&gt; (145,758 samples, 0.02%)</title><rect x="110.6" y="437" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="113.56" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy (400,356 samples, 0.04%)</title><rect x="232.5" y="437" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="235.50" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (163,185 samples, 0.02%)</title><rect x="56.8" y="453" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="59.81" y="463.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (186,142 samples, 0.02%)</title><rect x="648.9" y="373" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="651.88" y="383.5" ></text>
</g>
<g >
<title>void ns3::Simulator::ScheduleWithContext&lt;void  (10,844,170 samples, 1.12%)</title><rect x="660.2" y="517" width="8.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="663.24" y="527.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::PhyTransmissionStatParameters&gt;::operator (148,768 samples, 0.02%)</title><rect x="391.4" y="549" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="394.40" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDataFrame&gt;::~Ptr (192,141 samples, 0.02%)</title><rect x="670.6" y="533" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="673.59" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_valptr (167,523 samples, 0.02%)</title><rect x="429.8" y="213" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="432.77" y="223.5" ></text>
</g>
<g >
<title>ns3::SpectrumModel::GetNumBands (198,424 samples, 0.02%)</title><rect x="402.9" y="485" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="405.95" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::pair&lt;unsigned short const&amp;&gt; (614,403 samples, 0.06%)</title><rect x="191.3" y="373" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="194.33" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::_M_begin (344,173 samples, 0.04%)</title><rect x="690.9" y="469" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="693.94" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (304,552 samples, 0.03%)</title><rect x="687.1" y="437" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="690.08" y="447.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s::operator= (193,644 samples, 0.02%)</title><rect x="134.9" y="373" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="137.86" y="383.5" ></text>
</g>
<g >
<title>ns3::operator&lt; (470,743 samples, 0.05%)</title><rect x="275.1" y="405" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="278.07" y="415.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::BuildRarListElement_s*&gt; (157,406 samples, 0.02%)</title><rect x="146.4" y="421" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="149.43" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Acquire (405,134 samples, 0.04%)</title><rect x="499.8" y="421" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="502.80" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (4,416,635 samples, 0.46%)</title><rect x="773.7" y="517" width="3.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="776.67" y="527.5" ></text>
</g>
<g >
<title>unsigned char* std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (339,561 samples, 0.04%)</title><rect x="216.0" y="405" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="219.00" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (190,302 samples, 0.02%)</title><rect x="387.9" y="533" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="390.94" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_get_node (388,525 samples, 0.04%)</title><rect x="499.3" y="469" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="502.33" y="479.5" ></text>
</g>
<g >
<title>malloc (205,465 samples, 0.02%)</title><rect x="558.0" y="165" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="561.03" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~_Vector_base (293,725 samples, 0.03%)</title><rect x="550.0" y="197" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="552.96" y="207.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::LteSpectrumSignalParametersDlCtrlFrame (6,566,512 samples, 0.68%)</title><rect x="314.1" y="469" width="5.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="317.09" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;::operator* (187,135 samples, 0.02%)</title><rect x="234.7" y="485" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="237.73" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::at (420,921 samples, 0.04%)</title><rect x="375.5" y="533" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="378.53" y="543.5" ></text>
</g>
<g >
<title>operator new (217,527 samples, 0.02%)</title><rect x="319.4" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="322.37" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_M_base (142,742 samples, 0.01%)</title><rect x="290.7" y="357" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="293.71" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (148,437 samples, 0.02%)</title><rect x="698.0" y="517" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="700.96" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_get_node (128,987 samples, 0.01%)</title><rect x="59.6" y="389" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="62.58" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::begin (1,458,842 samples, 0.15%)</title><rect x="760.2" y="709" width="1.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="763.21" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (285,804 samples, 0.03%)</title><rect x="773.3" y="421" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="776.26" y="431.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (200,168 samples, 0.02%)</title><rect x="715.5" y="485" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="718.50" y="495.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::operator= (234,084 samples, 0.02%)</title><rect x="419.3" y="341" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="422.30" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::~_Vector_base (271,191 samples, 0.03%)</title><rect x="445.7" y="293" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="448.72" y="303.5" ></text>
</g>
<g >
<title>std::operator== (126,322 samples, 0.01%)</title><rect x="74.2" y="469" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="77.15" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; &gt; (603,286 samples, 0.06%)</title><rect x="25.7" y="277" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="28.74" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (395,163 samples, 0.04%)</title><rect x="666.9" y="373" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="669.95" y="383.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::MacCeValue_u (1,932,297 samples, 0.20%)</title><rect x="686.7" y="485" width="1.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="689.69" y="495.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_valptr (161,864 samples, 0.02%)</title><rect x="70.2" y="437" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="73.24" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::empty (704,819 samples, 0.07%)</title><rect x="254.2" y="517" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="257.18" y="527.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator-= (2,676,966 samples, 0.28%)</title><rect x="415.0" y="549" width="2.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="418.02" y="559.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (358,959 samples, 0.04%)</title><rect x="745.7" y="517" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="748.72" y="527.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoUlInfoListElementHarqFeedback (373,450 samples, 0.04%)</title><rect x="440.4" y="341" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="443.41" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (518,709 samples, 0.05%)</title><rect x="60.7" y="421" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="63.68" y="431.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (147,743 samples, 0.02%)</title><rect x="107.3" y="293" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="110.33" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt;::operator (240,645 samples, 0.02%)</title><rect x="160.2" y="453" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="163.15" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::size (208,545 samples, 0.02%)</title><rect x="520.8" y="325" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="523.79" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_begin (234,091 samples, 0.02%)</title><rect x="336.8" y="389" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="339.76" y="399.5" ></text>
</g>
<g >
<title>__log10_finite (150,649 samples, 0.02%)</title><rect x="582.3" y="309" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="585.25" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::clear (1,509,367 samples, 0.16%)</title><rect x="255.7" y="517" width="1.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="258.72" y="527.5" ></text>
</g>
<g >
<title>ns3::Time::From (518,604 samples, 0.05%)</title><rect x="389.5" y="517" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="392.50" y="527.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (242,130 samples, 0.02%)</title><rect x="409.8" y="517" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="412.84" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (390,089 samples, 0.04%)</title><rect x="483.8" y="501" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="486.78" y="511.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; (266,588 samples, 0.03%)</title><rect x="193.3" y="389" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="196.34" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_ptr (153,808 samples, 0.02%)</title><rect x="336.4" y="389" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="339.39" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (178,285 samples, 0.02%)</title><rect x="103.0" y="453" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="106.02" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModelUid (275,599 samples, 0.03%)</title><rect x="327.8" y="501" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="330.77" y="511.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (147,743 samples, 0.02%)</title><rect x="107.3" y="309" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="110.33" y="319.5" ></text>
</g>
<g >
<title>ns3::LteUePowerControl::GetPucchTxPower (379,341 samples, 0.04%)</title><rect x="680.8" y="549" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="683.81" y="559.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedUlMacCtrlInfoReq (867,311 samples, 0.09%)</title><rect x="225.5" y="501" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="228.49" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_get_Tp_allocator (158,214 samples, 0.02%)</title><rect x="302.0" y="421" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="304.96" y="431.5" ></text>
</g>
<g >
<title>double std::reduce&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double, std::plus&lt;void&gt; &gt; (335,268 samples, 0.03%)</title><rect x="582.4" y="293" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="585.38" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (156,128 samples, 0.02%)</title><rect x="667.1" y="229" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="670.07" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_erase (821,493 samples, 0.08%)</title><rect x="776.6" y="405" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="779.56" y="415.5" ></text>
</g>
<g >
<title>int* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (831,586 samples, 0.09%)</title><rect x="573.6" y="325" width="0.7" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="576.65" y="335.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (158,753 samples, 0.02%)</title><rect x="17.0" y="357" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="19.99" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::max_size (243,139 samples, 0.03%)</title><rect x="511.9" y="501" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="514.89" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (297,286 samples, 0.03%)</title><rect x="615.5" y="437" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="618.51" y="447.5" ></text>
</g>
<g >
<title>ns3::DlDciLteControlMessage::~DlDciLteControlMessage (361,458 samples, 0.04%)</title><rect x="609.9" y="437" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="612.94" y="447.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmRrcSapUser&lt;ns3::LteEnbRrc&gt;::GetUeManager (297,730 samples, 0.03%)</title><rect x="18.4" y="357" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="21.43" y="367.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (3,010,892 samples, 0.31%)</title><rect x="616.6" y="533" width="2.5" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="619.64" y="543.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt; std::__make_move_if_noexcept_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::move_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt; &gt; (147,819 samples, 0.02%)</title><rect x="511.6" y="501" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="514.61" y="511.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (1,304,199 samples, 0.13%)</title><rect x="148.8" y="373" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="151.79" y="383.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy* ns3::PeekPointer&lt;ns3::LteSpectrumPhy&gt; (451,162 samples, 0.05%)</title><rect x="578.5" y="389" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="581.45" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::VendorSpecificListElement_s*&gt; (162,953 samples, 0.02%)</title><rect x="473.5" y="261" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="476.48" y="271.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::StartTx (774,582 samples, 0.08%)</title><rect x="613.7" y="533" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="616.73" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__strip_reference_wrapper&lt;std::decay&lt;ns3::Scheduler::EventKey const&amp;&gt;::type&gt;::__type, std::__strip_reference_wrapper&lt;std::decay&lt;ns3::EventImpl* const&amp;&gt;::type&gt;::__type&gt; std::make_pair&lt;ns3::Scheduler::EventKey const&amp;, ns3::EventImpl* const&amp;&gt; (831,665 samples, 0.09%)</title><rect x="276.9" y="485" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="279.91" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::Unref (3,444,708 samples, 0.36%)</title><rect x="75.3" y="501" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="78.31" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr (405,134 samples, 0.04%)</title><rect x="499.8" y="437" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="502.80" y="447.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__uninitialized_move_if_noexcept_a&lt;ns3::CqiListElement_s*, ns3::CqiListElement_s*, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; (437,706 samples, 0.05%)</title><rect x="127.4" y="485" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="130.36" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_impl_data::_Vector_impl_data (236,955 samples, 0.02%)</title><rect x="261.3" y="341" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="264.30" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt; &gt;::find (1,009,230 samples, 0.10%)</title><rect x="240.7" y="469" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="243.75" y="479.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (242,821 samples, 0.03%)</title><rect x="431.2" y="277" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="434.24" y="287.5" ></text>
</g>
<g >
<title>ns3::IidManager::LookupInformation (451,443 samples, 0.05%)</title><rect x="33.9" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="36.94" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; (201,303 samples, 0.02%)</title><rect x="83.3" y="325" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="86.35" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (143,971 samples, 0.01%)</title><rect x="391.8" y="533" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="394.79" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (152,827 samples, 0.02%)</title><rect x="667.8" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="670.83" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::operator* (213,471 samples, 0.02%)</title><rect x="569.1" y="325" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="572.05" y="335.5" ></text>
</g>
<g >
<title>ns3::Object::SetTypeId (468,464 samples, 0.05%)</title><rect x="374.6" y="501" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="377.57" y="511.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::FindAndEventuallyAddTxSpectrumModel (301,073 samples, 0.03%)</title><rect x="114.4" y="485" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="117.42" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_S_key (304,080 samples, 0.03%)</title><rect x="186.8" y="437" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="189.79" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::push_back (1,945,265 samples, 0.20%)</title><rect x="595.0" y="293" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="598.03" y="303.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::ByteTagList (163,282 samples, 0.02%)</title><rect x="557.2" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="560.24" y="239.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (605,810 samples, 0.06%)</title><rect x="109.5" y="517" width="0.5" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="112.51" y="527.5" ></text>
</g>
<g >
<title>ns3::LteUeRrc::DoRecvRrcConnectionReconfiguration (156,981 samples, 0.02%)</title><rect x="701.4" y="565" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="704.42" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::back (312,069 samples, 0.03%)</title><rect x="533.2" y="309" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="536.17" y="319.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (274,123 samples, 0.03%)</title><rect x="378.4" y="309" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="381.40" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; ns3::Create&lt;ns3::Packet, unsigned int&amp;&gt; (2,698,693 samples, 0.28%)</title><rect x="31.2" y="421" width="2.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="34.17" y="431.5" ></text>
</g>
<g >
<title> (237,842 samples, 0.02%)</title><rect x="741.1" y="501" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="744.05" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_ptr (151,024 samples, 0.02%)</title><rect x="177.0" y="389" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="180.04" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (318,396 samples, 0.03%)</title><rect x="463.7" y="373" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="466.68" y="383.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (566,805 samples, 0.06%)</title><rect x="109.5" y="501" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="112.54" y="511.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::StartTx (34,755,711 samples, 3.58%)</title><rect x="641.0" y="533" width="28.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="644.00" y="543.5" >n..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; &gt; (231,948 samples, 0.02%)</title><rect x="134.8" y="453" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="137.83" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_check (157,629 samples, 0.02%)</title><rect x="594.1" y="277" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="597.14" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::map (2,417,353 samples, 0.25%)</title><rect x="58.6" y="517" width="1.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="61.58" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (1,948,514 samples, 0.20%)</title><rect x="270.0" y="437" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="272.98" y="447.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlCqiInfoReq (1,099,949 samples, 0.11%)</title><rect x="93.6" y="501" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="96.64" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::Create&lt;ns3::PacketBurst&gt; (619,901 samples, 0.06%)</title><rect x="69.6" y="453" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="72.64" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (246,841 samples, 0.03%)</title><rect x="522.2" y="325" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="525.21" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_range_check (423,259 samples, 0.04%)</title><rect x="195.4" y="469" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="198.36" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (650,228 samples, 0.07%)</title><rect x="502.4" y="405" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="505.40" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::splice (569,667 samples, 0.06%)</title><rect x="673.2" y="485" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="676.17" y="495.5" ></text>
</g>
<g >
<title>std::_Identity&lt;unsigned short&gt;::operator (157,285 samples, 0.02%)</title><rect x="395.4" y="485" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="398.43" y="495.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (2,693,187 samples, 0.28%)</title><rect x="309.7" y="485" width="2.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="312.69" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::_Vector_base (164,622 samples, 0.02%)</title><rect x="133.7" y="485" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="136.71" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_begin (168,913 samples, 0.02%)</title><rect x="565.7" y="197" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="568.65" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (313,960 samples, 0.03%)</title><rect x="194.6" y="485" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="197.65" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (181,678 samples, 0.02%)</title><rect x="636.4" y="501" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="639.43" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Ref (125,424 samples, 0.01%)</title><rect x="516.6" y="405" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="519.65" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::operator= (648,075 samples, 0.07%)</title><rect x="727.3" y="501" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="730.33" y="511.5" ></text>
</g>
<g >
<title>ns3::Buffer::Create (159,596 samples, 0.02%)</title><rect x="19.0" y="341" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="21.95" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::RxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::end (198,183 samples, 0.02%)</title><rect x="330.0" y="501" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="333.00" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (259,221 samples, 0.03%)</title><rect x="592.8" y="213" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="595.83" y="223.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s&gt; (1,227,211 samples, 0.13%)</title><rect x="256.0" y="437" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="258.95" y="447.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (405,218 samples, 0.04%)</title><rect x="64.6" y="453" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="67.60" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_List_impl::_List_impl (197,757 samples, 0.02%)</title><rect x="162.1" y="389" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="165.08" y="399.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::pair&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; &gt;::type&amp;&amp; std::get&lt;1ul, unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (152,590 samples, 0.02%)</title><rect x="660.1" y="501" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="663.11" y="511.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (189,290 samples, 0.02%)</title><rect x="112.2" y="437" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="115.24" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (225,934 samples, 0.02%)</title><rect x="648.8" y="389" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="651.85" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_lower_bound (639,648 samples, 0.07%)</title><rect x="57.8" y="469" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="60.83" y="479.5" ></text>
</g>
<g >
<title>ns3::PhichListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::PhichListElement_s const*, std::vector&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt; &gt;, ns3::PhichListElement_s*&gt; (202,017 samples, 0.02%)</title><rect x="227.5" y="405" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="230.50" y="415.5" ></text>
</g>
<g >
<title>unsigned short* std::__relocate_a&lt;unsigned short*, unsigned short*, std::allocator&lt;unsigned short&gt; &gt; (305,556 samples, 0.03%)</title><rect x="481.1" y="245" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="484.12" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_base (159,454 samples, 0.02%)</title><rect x="24.6" y="309" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="27.63" y="319.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (409,200 samples, 0.04%)</title><rect x="118.0" y="485" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="121.05" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (16,491,026 samples, 1.70%)</title><rect x="470.5" y="405" width="13.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="473.52" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (747,048 samples, 0.08%)</title><rect x="654.9" y="453" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="657.92" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (745,343 samples, 0.08%)</title><rect x="606.5" y="485" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="609.49" y="495.5" ></text>
</g>
<g >
<title>ns3::Object::Object (146,079 samples, 0.02%)</title><rect x="96.7" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="99.74" y="415.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (3,817,837 samples, 0.39%)</title><rect x="304.9" y="517" width="3.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="307.85" y="527.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (1,799,993 samples, 0.19%)</title><rect x="362.5" y="469" width="1.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="365.52" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (162,616 samples, 0.02%)</title><rect x="457.7" y="213" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="460.72" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (578,209 samples, 0.06%)</title><rect x="341.9" y="405" width="0.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="344.85" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;short, std::allocator&lt;short&gt; &gt;::operator[] (262,863 samples, 0.03%)</title><rect x="681.9" y="517" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="684.86" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (426,273 samples, 0.04%)</title><rect x="700.6" y="549" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="703.60" y="559.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; &gt; (300,135 samples, 0.03%)</title><rect x="207.5" y="453" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="210.54" y="463.5" ></text>
</g>
<g >
<title>ns3::Simulator::ScheduleWithContext (5,518,602 samples, 0.57%)</title><rect x="82.8" y="501" width="4.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="85.79" y="511.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (2,862,534 samples, 0.30%)</title><rect x="666.0" y="501" width="2.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="669.02" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt;::vector (318,568 samples, 0.03%)</title><rect x="173.9" y="469" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="176.91" y="479.5" ></text>
</g>
<g >
<title>operator new (275,672 samples, 0.03%)</title><rect x="284.5" y="517" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="287.54" y="527.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e const* std::__niter_base&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt; (201,685 samples, 0.02%)</title><rect x="444.2" y="229" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="447.18" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,400,209 samples, 0.25%)</title><rect x="190.7" y="469" width="1.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="193.70" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (266,358 samples, 0.03%)</title><rect x="112.2" y="485" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="115.18" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_M_head (235,982 samples, 0.02%)</title><rect x="757.2" y="565" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="760.21" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::size (236,264 samples, 0.02%)</title><rect x="261.7" y="373" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="264.74" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const*, std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt;, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*&gt; (338,383 samples, 0.03%)</title><rect x="204.9" y="373" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="207.86" y="383.5" ></text>
</g>
<g >
<title>ns3::LteHelper::InstallSingleUeDevice (533,991 samples, 0.06%)</title><rect x="36.1" y="757" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="39.12" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1,201,262 samples, 0.12%)</title><rect x="699.3" y="533" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="702.30" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (508,044 samples, 0.05%)</title><rect x="716.6" y="485" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="719.58" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteInterference&gt;::operator (201,121 samples, 0.02%)</title><rect x="492.3" y="549" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="495.30" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (1,070,364 samples, 0.11%)</title><rect x="647.2" y="389" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="650.25" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::deallocate (197,176 samples, 0.02%)</title><rect x="693.2" y="405" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="696.23" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;&amp;&amp; std::forward&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; (194,342 samples, 0.02%)</title><rect x="275.8" y="469" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="278.84" y="479.5" ></text>
</g>
<g >
<title>ns3::Tag::Tag (159,113 samples, 0.02%)</title><rect x="155.3" y="373" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="158.25" y="383.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (945,769 samples, 0.10%)</title><rect x="283.7" y="469" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="286.74" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; (979,889 samples, 0.10%)</title><rect x="526.8" y="213" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="529.82" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::allocate (366,512 samples, 0.04%)</title><rect x="563.9" y="85" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="566.90" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (546,034 samples, 0.06%)</title><rect x="147.4" y="437" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="150.41" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteInterference&gt;::operator (124,598 samples, 0.01%)</title><rect x="608.6" y="549" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="611.56" y="559.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (2,983,151 samples, 0.31%)</title><rect x="17.2" y="501" width="2.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="20.17" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (160,265 samples, 0.02%)</title><rect x="668.1" y="469" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="671.13" y="479.5" ></text>
</g>
<g >
<title>unsigned short* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (545,960 samples, 0.06%)</title><rect x="217.5" y="405" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="220.47" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (195,505 samples, 0.02%)</title><rect x="409.4" y="517" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="412.36" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_ptr (160,795 samples, 0.02%)</title><rect x="184.2" y="453" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="187.16" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (152,357 samples, 0.02%)</title><rect x="327.7" y="485" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="330.65" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (169,831 samples, 0.02%)</title><rect x="64.8" y="373" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="67.79" y="383.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (522,269 samples, 0.05%)</title><rect x="307.5" y="421" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="310.50" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::~pair (514,929 samples, 0.05%)</title><rect x="233.2" y="341" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="236.21" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (1,296,666 samples, 0.13%)</title><rect x="652.6" y="341" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="655.64" y="351.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (213,295 samples, 0.02%)</title><rect x="583.7" y="229" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="586.69" y="239.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (6,454,365 samples, 0.67%)</title><rect x="151.2" y="405" width="5.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="154.19" y="415.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Copy (4,171,628 samples, 0.43%)</title><rect x="315.1" y="437" width="3.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="318.07" y="447.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="613" width="18.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="20.17" y="623.5" ></text>
</g>
<g >
<title>std::function&lt;void  (411,411 samples, 0.04%)</title><rect x="87.6" y="469" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="90.62" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (433,714 samples, 0.04%)</title><rect x="465.7" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="468.74" y="479.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a1&lt;false, ns3::HarqProcessInfoElement_t const*, ns3::HarqProcessInfoElement_t*&gt; (363,923 samples, 0.04%)</title><rect x="353.4" y="389" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="356.45" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (234,034 samples, 0.02%)</title><rect x="474.0" y="213" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="476.98" y="223.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (746,893 samples, 0.08%)</title><rect x="640.3" y="469" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="643.34" y="479.5" ></text>
</g>
<g >
<title>double* std::__fill_n_a&lt;double*, unsigned long, double&gt; (387,157 samples, 0.04%)</title><rect x="403.7" y="389" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="406.74" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_ptr (152,886 samples, 0.02%)</title><rect x="136.2" y="405" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="139.22" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::key_comp (161,213 samples, 0.02%)</title><rect x="157.3" y="405" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="160.31" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp;&gt; (1,570,376 samples, 0.16%)</title><rect x="729.1" y="485" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="732.08" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::size (333,221 samples, 0.03%)</title><rect x="420.5" y="341" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="423.46" y="351.5" ></text>
</g>
<g >
<title>ns3::SimpleUeCcmMacSapProvider::TransmitPdu (7,708,007 samples, 0.79%)</title><rect x="560.6" y="261" width="6.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="563.62" y="271.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a2&lt;false, int const*, int*&gt; (197,211 samples, 0.02%)</title><rect x="399.2" y="437" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="402.21" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (576,429 samples, 0.06%)</title><rect x="187.3" y="453" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="190.29" y="463.5" ></text>
</g>
<g >
<title>ns3::LteMiErrorModel::GetTbDecodificationStats (2,544,923 samples, 0.26%)</title><rect x="587.5" y="277" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="590.50" y="287.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Ref (587,755 samples, 0.06%)</title><rect x="768.9" y="693" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="771.85" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node&gt; (167,564 samples, 0.02%)</title><rect x="60.2" y="389" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="63.25" y="399.5" ></text>
</g>
<g >
<title>ns3::operator- (4,813,626 samples, 0.50%)</title><rect x="410.0" y="533" width="3.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="413.04" y="543.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::UlDciLteControlMessage&gt;::operator* (302,866 samples, 0.03%)</title><rect x="288.5" y="501" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="291.52" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (359,626 samples, 0.04%)</title><rect x="382.0" y="501" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="385.02" y="511.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (279,495 samples, 0.03%)</title><rect x="629.2" y="469" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="632.22" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (483,084 samples, 0.05%)</title><rect x="728.2" y="485" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="731.17" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::operator++ (206,864 samples, 0.02%)</title><rect x="477.4" y="309" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="480.40" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (4,497,480 samples, 0.46%)</title><rect x="236.8" y="437" width="3.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="239.79" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::_M_range_check (199,808 samples, 0.02%)</title><rect x="225.8" y="469" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="228.83" y="479.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::Mul (321,020 samples, 0.03%)</title><rect x="389.7" y="485" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="392.66" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::at (161,842 samples, 0.02%)</title><rect x="226.1" y="485" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="229.05" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::_M_begin (226,804 samples, 0.02%)</title><rect x="181.5" y="437" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="184.54" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::~vector (1,027,011 samples, 0.11%)</title><rect x="145.4" y="453" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="148.45" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; (6,281,286 samples, 0.65%)</title><rect x="376.7" y="485" width="5.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="379.66" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; (2,950,423 samples, 0.30%)</title><rect x="349.6" y="485" width="2.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="352.62" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::reserve (275,928 samples, 0.03%)</title><rect x="347.3" y="533" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="350.31" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::~vector (359,781 samples, 0.04%)</title><rect x="146.3" y="453" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="149.27" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUePhy&gt;::Ptr (241,564 samples, 0.02%)</title><rect x="470.2" y="405" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="473.19" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (143,971 samples, 0.01%)</title><rect x="391.8" y="549" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="394.79" y="559.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::StartTx (41,833,100 samples, 4.31%)</title><rect x="308.8" y="517" width="33.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="311.76" y="527.5" >ns..</text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModelUid (187,543 samples, 0.02%)</title><rect x="656.4" y="517" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="659.37" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::push_back (2,043,826 samples, 0.21%)</title><rect x="562.9" y="181" width="1.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="565.86" y="191.5" ></text>
</g>
<g >
<title>std::operator== (317,205 samples, 0.03%)</title><rect x="275.5" y="469" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="278.45" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoReceivePhyPdu (13,857,739 samples, 1.43%)</title><rect x="423.7" y="341" width="11.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="426.67" y="351.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoReportBufferStatus (3,928,142 samples, 0.41%)</title><rect x="24.3" y="357" width="3.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="27.28" y="367.5" ></text>
</g>
<g >
<title>ns3::UeManager::GetComponentCarrierId (352,536 samples, 0.04%)</title><rect x="12.8" y="357" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="15.81" y="367.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; (279,570 samples, 0.03%)</title><rect x="257.1" y="501" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="260.10" y="511.5" ></text>
</g>
<g >
<title>ns3::Scheduler::EventKey const&amp; std::forward&lt;ns3::Scheduler::EventKey const&amp;&gt; (206,377 samples, 0.02%)</title><rect x="277.1" y="469" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="280.13" y="479.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (129,958 samples, 0.01%)</title><rect x="536.2" y="325" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="539.22" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node::operator (500,996 samples, 0.05%)</title><rect x="341.9" y="389" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="344.88" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;, false&gt;::_M_head (220,389 samples, 0.02%)</title><rect x="757.8" y="549" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="760.82" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt;::~Ptr (273,890 samples, 0.03%)</title><rect x="344.2" y="517" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="347.20" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::empty (335,401 samples, 0.03%)</title><rect x="106.4" y="501" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="109.44" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_insert (362,836 samples, 0.04%)</title><rect x="83.5" y="405" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="86.54" y="415.5" ></text>
</g>
<g >
<title>double std::reduce&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double&gt; (335,268 samples, 0.03%)</title><rect x="582.4" y="309" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="585.38" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::~vector (126,894 samples, 0.01%)</title><rect x="585.2" y="261" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="588.18" y="271.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::Unref (269,841 samples, 0.03%)</title><rect x="497.4" y="469" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="500.37" y="479.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (407,753 samples, 0.04%)</title><rect x="584.8" y="245" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="587.79" y="255.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (2,097,386 samples, 0.22%)</title><rect x="258.9" y="357" width="1.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="261.92" y="367.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::NoOpComponentCarrierManager&gt;::TransmitPdu (5,821,892 samples, 0.60%)</title><rect x="19.6" y="421" width="4.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="22.60" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Add (355,914 samples, 0.04%)</title><rect x="409.6" y="517" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="412.56" y="527.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (2,295,946 samples, 0.24%)</title><rect x="638.2" y="501" width="1.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="641.15" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BandInfo, std::allocator&lt;ns3::BandInfo&gt; &gt;::size (125,001 samples, 0.01%)</title><rect x="403.0" y="469" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="406.01" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_M_lower_bound (860,518 samples, 0.09%)</title><rect x="55.3" y="453" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="58.26" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move_a2&lt;true, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (802,162 samples, 0.08%)</title><rect x="357.1" y="453" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="360.13" y="463.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::GetInstanceTypeId (294,229 samples, 0.03%)</title><rect x="561.8" y="165" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="564.82" y="175.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::tbInfo_t (180,616 samples, 0.02%)</title><rect x="387.3" y="517" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="390.27" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const*, std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt;, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; (379,647 samples, 0.04%)</title><rect x="204.8" y="389" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="207.83" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::lower_bound (305,767 samples, 0.03%)</title><rect x="156.5" y="389" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="159.53" y="399.5" ></text>
</g>
<g >
<title>ns3::Buffer::~Buffer (935,423 samples, 0.10%)</title><rect x="451.8" y="101" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="454.80" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_begin (195,833 samples, 0.02%)</title><rect x="386.6" y="501" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="389.65" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (158,373 samples, 0.02%)</title><rect x="203.4" y="373" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="206.35" y="383.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetMobility (675,169 samples, 0.07%)</title><rect x="704.3" y="549" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="707.27" y="559.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a1&lt;false, double const*, double*&gt; (148,743 samples, 0.02%)</title><rect x="317.4" y="357" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="320.42" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_valptr (272,221 samples, 0.03%)</title><rect x="274.3" y="405" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="277.28" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel const&gt;::Ptr&lt;ns3::MobilityModel&gt; (371,286 samples, 0.04%)</title><rect x="740.7" y="517" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="743.66" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::size (156,363 samples, 0.02%)</title><rect x="514.8" y="533" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="517.78" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void  (358,805 samples, 0.04%)</title><rect x="727.0" y="469" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="729.97" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (1,386,008 samples, 0.14%)</title><rect x="334.2" y="389" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="337.18" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (267,173 samples, 0.03%)</title><rect x="19.4" y="453" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="22.36" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (272,555 samples, 0.03%)</title><rect x="454.4" y="197" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="457.39" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt;::allocate (160,414 samples, 0.02%)</title><rect x="445.0" y="229" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="447.98" y="239.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoUlCqiReport (763,690 samples, 0.08%)</title><rect x="473.6" y="309" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="476.61" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::erase[abi:cxx11] (940,554 samples, 0.10%)</title><rect x="222.3" y="469" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="225.32" y="479.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::NoOpComponentCarrierManager&gt;::ReportBufferStatus (6,485,597 samples, 0.67%)</title><rect x="24.3" y="405" width="5.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="27.28" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::~_Vector_base (496,198 samples, 0.05%)</title><rect x="256.3" y="373" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="259.29" y="383.5" ></text>
</g>
<g >
<title>unsigned char&amp; std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::emplace_back&lt;unsigned char&gt; (1,247,040 samples, 0.13%)</title><rect x="214.7" y="469" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="217.73" y="479.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters::~SchedDlCqiInfoReqParameters (153,009 samples, 0.02%)</title><rect x="93.4" y="501" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="96.42" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_valptr (512,316 samples, 0.05%)</title><rect x="85.2" y="373" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="88.17" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_relocate (191,891 samples, 0.02%)</title><rect x="459.9" y="245" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="462.88" y="255.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (1,453,727 samples, 0.15%)</title><rect x="352.8" y="421" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="355.82" y="431.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_List_iterator (173,879 samples, 0.02%)</title><rect x="563.0" y="149" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="566.00" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (277,788 samples, 0.03%)</title><rect x="198.9" y="405" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="201.86" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;unsigned short&gt;::__value, void&gt;::__type std::__fill_a1&lt;unsigned short*, unsigned short&gt; (151,573 samples, 0.02%)</title><rect x="252.6" y="357" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="255.62" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::operator (451,603 samples, 0.05%)</title><rect x="328.8" y="501" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="331.75" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (1,845,503 samples, 0.19%)</title><rect x="168.0" y="453" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="170.97" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (724,578 samples, 0.07%)</title><rect x="318.8" y="405" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="321.75" y="415.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedDlConfigIndParameters::SchedDlConfigIndParameters (703,718 samples, 0.07%)</title><rect x="94.9" y="453" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="97.86" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_S_key (335,546 samples, 0.03%)</title><rect x="385.5" y="469" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="388.53" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (343,413 samples, 0.04%)</title><rect x="654.2" y="405" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="657.16" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (1,211,299 samples, 0.12%)</title><rect x="523.4" y="309" width="1.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="526.38" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::pfsFlowPerf_t, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::find (767,082 samples, 0.08%)</title><rect x="186.4" y="485" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="189.42" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::find (873,028 samples, 0.09%)</title><rect x="185.4" y="469" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="188.39" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (275,818 samples, 0.03%)</title><rect x="413.1" y="469" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="416.14" y="479.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; &gt;::type&amp; std::get&lt;0ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; (694,870 samples, 0.07%)</title><rect x="752.6" y="597" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="755.64" y="607.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (151,182 samples, 0.02%)</title><rect x="92.3" y="309" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="95.31" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::size (251,934 samples, 0.03%)</title><rect x="413.7" y="485" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="416.68" y="495.5" ></text>
</g>
<g >
<title>ns3::Packet::FindFirstMatchingByteTag (1,329,273 samples, 0.14%)</title><rect x="435.8" y="261" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="438.80" y="271.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (444,360 samples, 0.05%)</title><rect x="64.6" y="469" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="67.57" y="479.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s::BuildDataListElement_s (2,525,517 samples, 0.26%)</title><rect x="203.3" y="421" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="206.25" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::~Ptr (159,762 samples, 0.02%)</title><rect x="62.6" y="485" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="65.63" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;::__normal_iterator (193,090 samples, 0.02%)</title><rect x="257.4" y="485" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="260.45" y="495.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (209,811 samples, 0.02%)</title><rect x="77.5" y="293" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="80.53" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::push_back (1,837,360 samples, 0.19%)</title><rect x="596.6" y="293" width="1.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="599.59" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::operator= (1,128,226 samples, 0.12%)</title><rect x="640.0" y="517" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="643.03" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (474,207 samples, 0.05%)</title><rect x="730.6" y="453" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="733.60" y="463.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (2,715,978 samples, 0.28%)</title><rect x="17.2" y="469" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="20.17" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (166,752 samples, 0.02%)</title><rect x="77.9" y="421" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="80.95" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::end (274,095 samples, 0.03%)</title><rect x="29.8" y="357" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="32.78" y="367.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (155,299 samples, 0.02%)</title><rect x="35.5" y="741" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="38.54" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_Auto_node::_M_insert (220,367 samples, 0.02%)</title><rect x="504.0" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="507.02" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::_S_key (545,949 samples, 0.06%)</title><rect x="691.3" y="453" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="694.31" y="463.5" ></text>
</g>
<g >
<title>ns3::UeMemberLteUePhySapProvider::SendMacPdu (702,652 samples, 0.07%)</title><rect x="564.6" y="197" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="567.63" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (525,076 samples, 0.05%)</title><rect x="718.5" y="437" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="721.50" y="447.5" ></text>
</g>
<g >
<title> (151,109 samples, 0.02%)</title><rect x="388.8" y="533" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="391.82" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Ptr (340,915 samples, 0.04%)</title><rect x="313.4" y="485" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="316.44" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::clear (375,571 samples, 0.04%)</title><rect x="549.4" y="213" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="552.40" y="223.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (255,646 samples, 0.03%)</title><rect x="305.3" y="453" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="308.29" y="463.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a2&lt;false, ns3::DlInfoListElement_s::HarqStatus_e const*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (670,916 samples, 0.07%)</title><rect x="260.0" y="277" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="262.98" y="287.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::ReceiveDlCqiLteControlMessage (923,023 samples, 0.10%)</title><rect x="461.0" y="325" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="464.00" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (5,294,156 samples, 0.55%)</title><rect x="377.1" y="421" width="4.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="380.15" y="431.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::Write (162,161 samples, 0.02%)</title><rect x="555.1" y="229" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="558.07" y="239.5" ></text>
</g>
<g >
<title>erff32x (379,457 samples, 0.04%)</title><rect x="588.3" y="245" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="591.32" y="255.5" ></text>
</g>
<g >
<title>ns3::Scheduler::EventKey&amp;&amp; std::forward&lt;ns3::Scheduler::EventKey&gt; (155,928 samples, 0.02%)</title><rect x="335.2" y="293" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="338.17" y="303.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (1,777,558 samples, 0.18%)</title><rect x="652.6" y="389" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="655.59" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (196,324 samples, 0.02%)</title><rect x="714.5" y="453" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="717.49" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_ptr (324,216 samples, 0.03%)</title><rect x="184.9" y="453" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="187.92" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (73,736,893 samples, 7.60%)</title><rect x="517.3" y="437" width="59.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="520.29" y="447.5" >std::f..</text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt;::operator (308,568 samples, 0.03%)</title><rect x="672.6" y="533" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="675.60" y="543.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Create (1,337,353 samples, 0.14%)</title><rect x="557.6" y="213" width="1.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="560.64" y="223.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MatrixArray&lt;std::complex&lt;double&gt; &gt; const&gt;::operator= (192,272 samples, 0.02%)</title><rect x="314.6" y="437" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="317.64" y="447.5" ></text>
</g>
<g >
<title>acosf32x (225,910 samples, 0.02%)</title><rect x="310.0" y="469" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="313.01" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt; &gt;::find (184,813 samples, 0.02%)</title><rect x="99.1" y="453" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="102.05" y="463.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt; (882,128 samples, 0.09%)</title><rect x="503.3" y="469" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="506.31" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_impl::_Vector_impl (165,262 samples, 0.02%)</title><rect x="439.7" y="389" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="442.70" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (125,937 samples, 0.01%)</title><rect x="463.4" y="309" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="466.38" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="709" width="18.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="20.17" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (167,625 samples, 0.02%)</title><rect x="575.8" y="341" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="578.76" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (313,424 samples, 0.03%)</title><rect x="656.0" y="517" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="658.96" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::deallocate (194,524 samples, 0.02%)</title><rect x="216.5" y="437" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="219.49" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (127,798 samples, 0.01%)</title><rect x="72.7" y="405" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="75.68" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (477,626 samples, 0.05%)</title><rect x="60.7" y="405" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="63.71" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::push_back (373,450 samples, 0.04%)</title><rect x="440.4" y="325" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="443.41" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_get_node (235,059 samples, 0.02%)</title><rect x="331.6" y="421" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="334.60" y="431.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::GenerateCtrlCqiReport (284,425 samples, 0.03%)</title><rect x="612.0" y="341" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="614.97" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; ns3::Create&lt;ns3::Packet, unsigned int&amp;&gt; (2,446,167 samples, 0.25%)</title><rect x="152.8" y="389" width="1.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="155.76" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::vector (158,991 samples, 0.02%)</title><rect x="627.3" y="469" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="630.31" y="479.5" ></text>
</g>
<g >
<title>ns3-dev-lena-fr (969,771,633 samples, 100.00%)</title><rect x="10.0" y="853" width="780.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >ns3-dev-lena-fr</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, ns3::LteSpectrumPhy*, false&gt;::_Head_base&lt;ns3::LteSpectrumPhy*&amp;&gt; (197,669 samples, 0.02%)</title><rect x="638.8" y="421" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="641.83" y="431.5" ></text>
</g>
<g >
<title>decltype  (762,055 samples, 0.08%)</title><rect x="242.8" y="389" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="245.80" y="399.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (409,656 samples, 0.04%)</title><rect x="69.7" y="437" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="72.68" y="447.5" ></text>
</g>
<g >
<title>std::operator+ (509,535 samples, 0.05%)</title><rect x="247.4" y="437" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="250.38" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (202,066 samples, 0.02%)</title><rect x="414.4" y="501" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="417.41" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::deallocate (276,642 samples, 0.03%)</title><rect x="233.3" y="261" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="236.27" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="597" width="1.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="18.45" y="607.5" ></text>
</g>
<g >
<title>malloc (191,680 samples, 0.02%)</title><rect x="649.1" y="469" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="652.13" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::cbegin (165,764 samples, 0.02%)</title><rect x="532.7" y="325" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="535.70" y="335.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetAttributeN (430,734 samples, 0.04%)</title><rect x="449.1" y="229" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="452.10" y="239.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (237,306 samples, 0.02%)</title><rect x="710.8" y="453" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="713.75" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::vector (659,463 samples, 0.07%)</title><rect x="161.5" y="405" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="164.48" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::_M_begin (151,422 samples, 0.02%)</title><rect x="28.3" y="309" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="31.26" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel&gt;&amp;&gt; (1,879,121 samples, 0.19%)</title><rect x="676.6" y="501" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="679.61" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::back (265,587 samples, 0.03%)</title><rect x="286.7" y="485" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="289.72" y="495.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedUlTriggerReq (3,881,896 samples, 0.40%)</title><rect x="103.3" y="485" width="3.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="106.25" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator (126,110 samples, 0.01%)</title><rect x="402.8" y="485" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="405.85" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,277,007 samples, 0.13%)</title><rect x="455.5" y="293" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="458.50" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::operator (303,690 samples, 0.03%)</title><rect x="689.8" y="501" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="692.82" y="511.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_List_iterator (153,672 samples, 0.02%)</title><rect x="355.5" y="469" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="358.45" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (148,291 samples, 0.02%)</title><rect x="318.6" y="453" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="321.57" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::_M_erase_at_end (312,181 samples, 0.03%)</title><rect x="265.4" y="501" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="268.44" y="511.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;double&gt; (155,953 samples, 0.02%)</title><rect x="677.8" y="389" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="680.84" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_allocate (152,912 samples, 0.02%)</title><rect x="144.5" y="405" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="147.54" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_M_begin (159,151 samples, 0.02%)</title><rect x="675.6" y="453" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="678.61" y="463.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::DoSendLteControlMessage (416,875 samples, 0.04%)</title><rect x="689.3" y="485" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="692.30" y="495.5" ></text>
</g>
<g >
<title>ns3::Packet::~Packet (4,222,593 samples, 0.44%)</title><rect x="545.7" y="133" width="3.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="548.67" y="143.5" ></text>
</g>
<g >
<title>ns3::EventId::EventId (335,084 samples, 0.03%)</title><rect x="637.4" y="485" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="640.39" y="495.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_Bvector_impl::_M_end_addr (154,284 samples, 0.02%)</title><rect x="200.2" y="421" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="203.22" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate (271,783 samples, 0.03%)</title><rect x="198.0" y="421" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="201.04" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (224,387 samples, 0.02%)</title><rect x="430.1" y="229" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="433.07" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_range_check (265,329 samples, 0.03%)</title><rect x="701.2" y="533" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="704.15" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::resize (3,219,505 samples, 0.33%)</title><rect x="251.3" y="485" width="2.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="254.28" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (126,483 samples, 0.01%)</title><rect x="606.9" y="421" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="609.92" y="431.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (413,599 samples, 0.04%)</title><rect x="230.2" y="373" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="233.19" y="383.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_assign_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (411,083 samples, 0.04%)</title><rect x="648.7" y="453" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="651.73" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_Vector_base (199,135 samples, 0.02%)</title><rect x="443.1" y="293" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="446.10" y="303.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteChunkProcessor&gt; &gt;::operator++ (161,286 samples, 0.02%)</title><rect x="719.9" y="501" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="722.91" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::push_back (202,678 samples, 0.02%)</title><rect x="292.3" y="533" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="295.27" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::size (188,805 samples, 0.02%)</title><rect x="210.3" y="453" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="213.29" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (821,681 samples, 0.08%)</title><rect x="719.1" y="469" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="722.05" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (148,982 samples, 0.02%)</title><rect x="371.9" y="437" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="374.85" y="447.5" ></text>
</g>
<g >
<title>operator new (487,893 samples, 0.05%)</title><rect x="407.7" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="410.68" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (198,551 samples, 0.02%)</title><rect x="233.0" y="405" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="235.95" y="415.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ObjectBase (412,873 samples, 0.04%)</title><rect x="537.8" y="261" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="540.84" y="271.5" ></text>
</g>
<g >
<title>double* std::fill_n&lt;double*, unsigned long, double&gt; (248,267 samples, 0.03%)</title><rect x="718.6" y="373" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="721.60" y="383.5" ></text>
</g>
<g >
<title>ns3::IidManager::LookupInformation (308,302 samples, 0.03%)</title><rect x="631.3" y="437" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="634.34" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (156,472 samples, 0.02%)</title><rect x="413.2" y="437" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="416.23" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::end (714,185 samples, 0.07%)</title><rect x="761.7" y="693" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="764.69" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_get_node (272,817 samples, 0.03%)</title><rect x="23.0" y="293" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="26.03" y="303.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::BuildDataListElement_s, ns3::BuildDataListElement_s const&amp;&gt; (154,123 samples, 0.02%)</title><rect x="142.2" y="373" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="145.21" y="383.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::SimpleRefCount (194,468 samples, 0.02%)</title><rect x="154.1" y="357" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="157.10" y="367.5" ></text>
</g>
<g >
<title>__fixunsxfti (459,077 samples, 0.05%)</title><rect x="390.3" y="485" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="393.33" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (196,912 samples, 0.02%)</title><rect x="726.8" y="453" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="729.82" y="463.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (1,351,343 samples, 0.14%)</title><rect x="403.4" y="437" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="406.43" y="447.5" ></text>
</g>
<g >
<title>void ns3::Simulator::ScheduleWithContext&lt;void  (696,602 samples, 0.07%)</title><rect x="115.9" y="485" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="118.94" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::at (274,992 samples, 0.03%)</title><rect x="225.2" y="485" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="228.24" y="495.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator* (197,417 samples, 0.02%)</title><rect x="610.9" y="485" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="613.89" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (193,356 samples, 0.02%)</title><rect x="19.9" y="309" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="22.95" y="319.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s::HigherLayerSelected_s (333,368 samples, 0.03%)</title><rect x="125.3" y="277" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="128.29" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator* (234,968 samples, 0.02%)</title><rect x="167.7" y="453" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="170.72" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::find (1,823,746 samples, 0.19%)</title><rect x="169.5" y="437" width="1.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="172.49" y="447.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::~ByteTagList (239,815 samples, 0.02%)</title><rect x="774.3" y="181" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="777.31" y="191.5" ></text>
</g>
<g >
<title>ns3::Time::To (417,636 samples, 0.04%)</title><rect x="484.1" y="485" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="487.13" y="495.5" ></text>
</g>
<g >
<title>ns3::Packet::PeekPacketTag (2,187,603 samples, 0.23%)</title><rect x="489.5" y="549" width="1.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="492.51" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Acquire (235,730 samples, 0.02%)</title><rect x="676.6" y="469" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="679.64" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (1,809,407 samples, 0.19%)</title><rect x="565.4" y="229" width="1.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="568.37" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_create_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (420,658 samples, 0.04%)</title><rect x="81.8" y="453" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="84.81" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartTxDataFrame (35,782,100 samples, 3.69%)</title><rect x="62.0" y="549" width="28.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="65.00" y="559.5" >ns..</text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (153,177 samples, 0.02%)</title><rect x="305.2" y="453" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="308.17" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::CreateTxPowerSpectralDensity (7,568,442 samples, 0.78%)</title><rect x="296.9" y="501" width="6.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="299.89" y="511.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::ReportBufferStatus (1,019,985 samples, 0.11%)</title><rect x="17.9" y="405" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="20.88" y="415.5" ></text>
</g>
<g >
<title>ns3::EnbMemberLteEnbPhySapProvider::SendLteControlMessage (197,391 samples, 0.02%)</title><rect x="103.7" y="437" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="106.68" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; &gt; (264,157 samples, 0.03%)</title><rect x="117.8" y="485" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="120.75" y="495.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::MacCeListElement_s (1,017,736 samples, 0.10%)</title><rect x="441.8" y="341" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="444.78" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_get_node (491,620 samples, 0.05%)</title><rect x="363.2" y="453" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="366.25" y="463.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Deallocate (244,736 samples, 0.03%)</title><rect x="76.3" y="213" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="79.28" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_S_relocate (1,209,596 samples, 0.12%)</title><rect x="595.3" y="261" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="598.25" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::_M_begin (261,904 samples, 0.03%)</title><rect x="395.0" y="517" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="397.97" y="527.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s::HigherLayerSelected_s (418,936 samples, 0.04%)</title><rect x="595.7" y="165" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="598.73" y="175.5" ></text>
</g>
<g >
<title>ns3::MobilityModel::GetDistanceFrom (1,223,688 samples, 0.13%)</title><rect x="739.7" y="517" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="742.67" y="527.5" ></text>
</g>
<g >
<title>ns3::BuildBroadcastListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildBroadcastListElement_s const*, std::vector&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt; &gt;, ns3::BuildBroadcastListElement_s*, ns3::BuildBroadcastListElement_s&gt; (150,405 samples, 0.02%)</title><rect x="140.9" y="437" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="143.86" y="447.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (379,721 samples, 0.04%)</title><rect x="112.7" y="485" width="0.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="115.67" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="709" width="4.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="14.17" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_M_get_Tp_allocator (160,864 samples, 0.02%)</title><rect x="262.2" y="485" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="265.23" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned short*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;unsigned short*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; (158,533 samples, 0.02%)</title><rect x="218.5" y="437" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="221.50" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (178,285 samples, 0.02%)</title><rect x="103.0" y="469" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="106.02" y="479.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (592,631 samples, 0.06%)</title><rect x="126.9" y="341" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="129.85" y="351.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::UlInfoListElement_s*&gt; (228,697 samples, 0.02%)</title><rect x="265.5" y="469" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="268.51" y="479.5" ></text>
</g>
<g >
<title>operator new (629,966 samples, 0.06%)</title><rect x="655.0" y="373" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="658.02" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::tuple (495,402 samples, 0.05%)</title><rect x="340.8" y="389" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="343.78" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (445,109 samples, 0.05%)</title><rect x="255.0" y="341" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="258.04" y="351.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::__uninitialized_copy_a&lt;std::move_iterator&lt;ns3::MacCeListElement_s*&gt;, ns3::MacCeListElement_s*, ns3::MacCeListElement_s&gt; (462,292 samples, 0.05%)</title><rect x="129.5" y="469" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="132.52" y="479.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Iterator::Next (984,877 samples, 0.10%)</title><rect x="425.3" y="229" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="428.32" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~_Vector_base (152,155 samples, 0.02%)</title><rect x="165.2" y="325" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="168.17" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::begin (303,510 samples, 0.03%)</title><rect x="348.8" y="517" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="351.77" y="527.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::Buffer::Data* const*, std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt; &gt; (150,431 samples, 0.02%)</title><rect x="31.9" y="325" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="34.92" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_impl_data::_Vector_impl_data (146,682 samples, 0.02%)</title><rect x="144.7" y="405" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="147.73" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::begin (155,092 samples, 0.02%)</title><rect x="375.9" y="533" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="378.87" y="543.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (1,306,729 samples, 0.13%)</title><rect x="300.9" y="421" width="1.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="303.91" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (1,521,016 samples, 0.16%)</title><rect x="56.4" y="485" width="1.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="59.38" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (211,914 samples, 0.02%)</title><rect x="90.6" y="533" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="93.61" y="543.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (154,612 samples, 0.02%)</title><rect x="773.9" y="309" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="776.90" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_move_nodes (377,447 samples, 0.04%)</title><rect x="290.5" y="389" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="293.52" y="399.5" ></text>
</g>
<g >
<title>ns3::Time::FromDouble (1,884,228 samples, 0.19%)</title><rect x="389.5" y="533" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="392.50" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (1,373,897 samples, 0.14%)</title><rect x="179.8" y="469" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="182.83" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::tuple (1,080,236 samples, 0.11%)</title><rect x="711.7" y="405" width="0.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="714.68" y="415.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlMacCtrlInfoReqParameters::SchedUlMacCtrlInfoReqParameters (182,245 samples, 0.02%)</title><rect x="133.1" y="517" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="136.15" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_allocate (264,699 samples, 0.03%)</title><rect x="261.0" y="341" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="263.95" y="351.5" ></text>
</g>
<g >
<title>ns3::LteMiErrorModel::MappingMiBler (872,634 samples, 0.09%)</title><rect x="588.0" y="261" width="0.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="590.95" y="271.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::ReportBufferStatus (747,299 samples, 0.08%)</title><rect x="12.5" y="405" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="15.49" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (189,712 samples, 0.02%)</title><rect x="102.0" y="469" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="104.98" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void  (937,122 samples, 0.10%)</title><rect x="63.6" y="485" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="66.59" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::RarLteControlMessage::Rar, std::allocator&lt;ns3::RarLteControlMessage::Rar&gt; &gt;::~_List_base (234,533 samples, 0.02%)</title><rect x="167.3" y="357" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="170.28" y="367.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::tbInfo_t (126,859 samples, 0.01%)</title><rect x="530.1" y="325" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="533.10" y="335.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (358,332 samples, 0.04%)</title><rect x="16.7" y="373" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="19.70" y="383.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (1,650,854 samples, 0.17%)</title><rect x="15.8" y="533" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="18.79" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (189,290 samples, 0.02%)</title><rect x="112.2" y="421" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="115.24" y="431.5" ></text>
</g>
<g >
<title>std::modf (284,529 samples, 0.03%)</title><rect x="390.8" y="485" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="393.79" y="495.5" ></text>
</g>
<g >
<title> (124,598 samples, 0.01%)</title><rect x="608.6" y="533" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="611.56" y="543.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (178,646,468 samples, 18.42%)</title><rect x="123.4" y="549" width="143.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="126.36" y="559.5" >ns3::EnbMacMemberL..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; (148,381 samples, 0.02%)</title><rect x="117.1" y="469" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="120.11" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (1,132,243 samples, 0.12%)</title><rect x="773.9" y="325" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="776.90" y="335.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::CqiListElement_s*&gt; (143,980 samples, 0.01%)</title><rect x="128.2" y="453" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="131.17" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, std::_Bind&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="661" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.45" y="671.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::TrimAtEnd (161,048 samples, 0.02%)</title><rect x="425.9" y="213" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="428.92" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::end (128,201 samples, 0.01%)</title><rect x="80.9" y="501" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="83.93" y="511.5" ></text>
</g>
<g >
<title>ns3::Vector3D::Vector3D (192,806 samples, 0.02%)</title><rect x="642.6" y="485" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="645.63" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (224,512 samples, 0.02%)</title><rect x="634.7" y="341" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="637.70" y="351.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::~DlInfoListElement_s (1,109,198 samples, 0.11%)</title><rect x="256.0" y="405" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="259.05" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (1,862,892 samples, 0.19%)</title><rect x="290.0" y="501" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="292.99" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (150,187 samples, 0.02%)</title><rect x="718.4" y="389" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="721.35" y="399.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::GetRbgSize (153,442 samples, 0.02%)</title><rect x="176.4" y="485" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="179.44" y="495.5" ></text>
</g>
<g >
<title>unsigned short* std::fill_n&lt;unsigned short*, unsigned long, unsigned short&gt; (700,494 samples, 0.07%)</title><rect x="252.2" y="405" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="255.18" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::IidManager::IidInformation, std::allocator&lt;ns3::IidManager::IidInformation&gt; &gt;::size (188,549 samples, 0.02%)</title><rect x="34.2" y="373" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="37.15" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_base (459,736 samples, 0.05%)</title><rect x="516.9" y="421" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="519.92" y="431.5" ></text>
</g>
<g >
<title>ns3::TypeId::operator= (127,390 samples, 0.01%)</title><rect x="562.7" y="165" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="565.69" y="175.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteFlowId_t, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::find (1,508,586 samples, 0.16%)</title><rect x="181.3" y="469" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="184.29" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (1,664,663 samples, 0.17%)</title><rect x="619.6" y="533" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="622.60" y="543.5" ></text>
</g>
<g >
<title>operator new (158,241 samples, 0.02%)</title><rect x="480.1" y="197" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="483.12" y="207.5" ></text>
</g>
<g >
<title>operator new (429,586 samples, 0.04%)</title><rect x="325.4" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="328.42" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy const&gt;::Ptr&lt;ns3::SpectrumPhy&gt; (154,425 samples, 0.02%)</title><rect x="744.1" y="549" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="747.15" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Node&gt;::Ptr (417,289 samples, 0.04%)</title><rect x="312.7" y="485" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="315.67" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::operator= (153,511 samples, 0.02%)</title><rect x="108.1" y="501" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="111.13" y="511.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::GetDownlinkSubChannels (240,017 samples, 0.02%)</title><rect x="54.0" y="517" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="56.97" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::~Ptr (2,493,989 samples, 0.26%)</title><rect x="652.4" y="517" width="2.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="655.43" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_S_check_init_len (126,790 samples, 0.01%)</title><rect x="678.0" y="453" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="680.99" y="463.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (2,983,151 samples, 0.31%)</title><rect x="17.2" y="533" width="2.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="20.17" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (160,870 samples, 0.02%)</title><rect x="482.6" y="277" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="485.63" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (138,078 samples, 0.01%)</title><rect x="385.2" y="325" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="388.21" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::~Ptr (160,100 samples, 0.02%)</title><rect x="743.1" y="549" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="746.13" y="559.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (158,753 samples, 0.02%)</title><rect x="17.0" y="421" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="19.99" y="431.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::PhyReceptionStatParameters&gt;::operator (278,616 samples, 0.03%)</title><rect x="493.9" y="549" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="496.90" y="559.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (1,644,033 samples, 0.17%)</title><rect x="706.4" y="453" width="1.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="709.38" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider::ReportBufferStatusParameters, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::begin (422,977 samples, 0.04%)</title><rect x="569.3" y="325" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="572.32" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_valptr (242,288 samples, 0.02%)</title><rect x="179.1" y="453" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="182.14" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator* (163,458 samples, 0.02%)</title><rect x="744.6" y="549" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="747.62" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (192,396 samples, 0.02%)</title><rect x="474.0" y="197" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="477.01" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt; &gt; &gt;::begin (281,211 samples, 0.03%)</title><rect x="156.1" y="373" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="159.09" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::at (263,150 samples, 0.03%)</title><rect x="329.1" y="501" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="332.11" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_Tuple_impl (360,730 samples, 0.04%)</title><rect x="284.1" y="405" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="287.12" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_Rb_tree_iterator (202,210 samples, 0.02%)</title><rect x="762.1" y="677" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="765.11" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; (536,978 samples, 0.06%)</title><rect x="119.7" y="485" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="122.74" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (232,843 samples, 0.02%)</title><rect x="171.7" y="389" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="174.71" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (1,560,416 samples, 0.16%)</title><rect x="732.8" y="469" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="735.79" y="479.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::StartRx (60,346,707 samples, 6.22%)</title><rect x="701.7" y="565" width="48.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="704.73" y="575.5" >ns3:..</text>
</g>
<g >
<title>std::_Bit_iterator_base::_M_incr (153,737 samples, 0.02%)</title><rect x="198.6" y="405" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="201.61" y="415.5" ></text>
</g>
<g >
<title>unsigned int&amp; std::__get_helper&lt;1ul, unsigned int, unsigned int&gt; (270,195 samples, 0.03%)</title><rect x="754.8" y="581" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="757.84" y="591.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::SbMeasResult_s (1,067,175 samples, 0.11%)</title><rect x="442.6" y="325" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="445.63" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_range_check (195,616 samples, 0.02%)</title><rect x="208.2" y="469" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="211.16" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::operator= (190,707 samples, 0.02%)</title><rect x="93.9" y="453" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="96.88" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartTxUlSrsFrame (887,136 samples, 0.09%)</title><rect x="613.7" y="549" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="616.70" y="559.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (1,650,854 samples, 0.17%)</title><rect x="15.8" y="501" width="1.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="18.79" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::COWTraverse (191,197 samples, 0.02%)</title><rect x="435.4" y="293" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="438.38" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (204,384 samples, 0.02%)</title><rect x="521.5" y="325" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="524.49" y="335.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteEnbPhy*&gt;::tuple&lt;ns3::LteEnbPhy*&amp;, true, true&gt; (191,013 samples, 0.02%)</title><rect x="53.4" y="469" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="56.38" y="479.5" ></text>
</g>
<g >
<title>ns3::Time::ToInteger (236,828 samples, 0.02%)</title><rect x="16.5" y="341" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="19.51" y="351.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (381,561 samples, 0.04%)</title><rect x="370.7" y="517" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="373.73" y="527.5" ></text>
</g>
<g >
<title>double* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (1,019,777 samples, 0.11%)</title><rect x="412.1" y="469" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="415.13" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::vector (366,390 samples, 0.04%)</title><rect x="133.5" y="501" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="136.54" y="511.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (282,374 samples, 0.03%)</title><rect x="468.4" y="437" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="471.39" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::allocate (380,371 samples, 0.04%)</title><rect x="363.3" y="421" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="366.34" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (125,103 samples, 0.01%)</title><rect x="585.5" y="197" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="588.46" y="207.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::RxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::end (128,149 samples, 0.01%)</title><rect x="657.9" y="517" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="660.95" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;void  (823,342 samples, 0.08%)</title><rect x="580.2" y="373" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="583.16" y="383.5" ></text>
</g>
<g >
<title>pow (356,086 samples, 0.04%)</title><rect x="486.2" y="517" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="489.19" y="527.5" ></text>
</g>
<g >
<title>decltype  (688,656 samples, 0.07%)</title><rect x="503.4" y="437" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="506.44" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::push_back (445,330 samples, 0.05%)</title><rect x="623.6" y="533" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="626.58" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (787,839 samples, 0.08%)</title><rect x="268.5" y="485" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="271.53" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; (159,664 samples, 0.02%)</title><rect x="488.9" y="517" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="491.92" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (816,432 samples, 0.08%)</title><rect x="171.4" y="421" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="174.43" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (533,840 samples, 0.06%)</title><rect x="159.1" y="405" width="0.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="162.14" y="415.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;double&amp;&gt;::type&amp;&amp; std::move&lt;double&amp;&gt; (160,528 samples, 0.02%)</title><rect x="602.8" y="309" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="605.83" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::~_Vector_base (574,638 samples, 0.06%)</title><rect x="697.0" y="485" width="0.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="699.96" y="495.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (190,332 samples, 0.02%)</title><rect x="674.2" y="485" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="677.16" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (162,486 samples, 0.02%)</title><rect x="195.7" y="469" width="0.1" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="198.70" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetSize (1,573,815 samples, 0.16%)</title><rect x="627.7" y="533" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="630.67" y="543.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (803,124 samples, 0.08%)</title><rect x="242.8" y="421" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="245.77" y="431.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (1,391,465 samples, 0.14%)</title><rect x="403.4" y="453" width="1.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="406.39" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::deallocate (164,554 samples, 0.02%)</title><rect x="777.0" y="341" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="779.97" y="351.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy*&amp; std::forward&lt;ns3::LteEnbPhy*&amp;&gt; (184,660 samples, 0.02%)</title><rect x="49.0" y="581" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="52.01" y="591.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (682,798 samples, 0.07%)</title><rect x="53.3" y="517" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="56.32" y="527.5" ></text>
</g>
<g >
<title>void  (163,364 samples, 0.02%)</title><rect x="423.3" y="389" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="426.31" y="399.5" ></text>
</g>
<g >
<title>ns3::Object::Object (314,930 samples, 0.03%)</title><rect x="627.2" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="630.18" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_get_Node_allocator (152,998 samples, 0.02%)</title><rect x="193.2" y="405" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="196.21" y="415.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a1&lt;false, ns3::HarqProcessInfoElement_t const*, ns3::HarqProcessInfoElement_t*&gt; (437,467 samples, 0.05%)</title><rect x="513.1" y="453" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="516.12" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NetDevice&gt;::Ptr (273,026 samples, 0.03%)</title><rect x="313.1" y="485" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="316.10" y="495.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (1,143,303 samples, 0.12%)</title><rect x="652.8" y="309" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="655.77" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::splice (371,326 samples, 0.04%)</title><rect x="734.0" y="453" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="737.04" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::~vector (154,796 samples, 0.02%)</title><rect x="131.1" y="373" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="134.12" y="383.5" ></text>
</g>
<g >
<title>ns3::LteInterference::ConditionallyEvaluateChunk (447,530 samples, 0.05%)</title><rect x="607.3" y="533" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="610.25" y="543.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::~SimpleRefCount (225,570 samples, 0.02%)</title><rect x="454.0" y="197" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="457.05" y="207.5" ></text>
</g>
<g >
<title>ns3::RlcTag::GetTypeId (274,825 samples, 0.03%)</title><rect x="427.2" y="229" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="430.21" y="239.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::SimpleRefCount (199,860 samples, 0.02%)</title><rect x="411.9" y="501" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="414.89" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;* std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (1,347,530 samples, 0.14%)</title><rect x="334.2" y="373" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="337.21" y="383.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (151,182 samples, 0.02%)</title><rect x="92.3" y="293" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="95.31" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (912,598 samples, 0.09%)</title><rect x="355.3" y="501" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="358.27" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_lower_bound (188,402 samples, 0.02%)</title><rect x="114.5" y="437" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="117.51" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::at (666,536 samples, 0.07%)</title><rect x="195.3" y="485" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="198.29" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::BuildRarListElement_s const*, std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt; &gt; (158,059 samples, 0.02%)</title><rect x="143.2" y="373" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="146.16" y="383.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::HigherLayerSelected_s, ns3::HigherLayerSelected_s const&amp;&gt; (371,159 samples, 0.04%)</title><rect x="125.3" y="293" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="128.26" y="303.5" ></text>
</g>
<g >
<title>ns3::MemberLteFfrSapProvider&lt;ns3::LteFrNoOpAlgorithm&gt;::ReportUlCqiInfo (1,540,622 samples, 0.16%)</title><rect x="232.5" y="485" width="1.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="235.50" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::operator= (153,607 samples, 0.02%)</title><rect x="101.1" y="469" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="104.08" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_node (203,653 samples, 0.02%)</title><rect x="706.4" y="373" width="0.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="709.45" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (450,221 samples, 0.05%)</title><rect x="699.6" y="501" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="702.59" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::operator= (6,381,662 samples, 0.66%)</title><rect x="257.6" y="517" width="5.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="260.60" y="527.5" ></text>
</g>
<g >
<title>ns3::UeManager::DoInitialize (214,377 samples, 0.02%)</title><rect x="130.4" y="453" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="133.38" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;::operator* (303,780 samples, 0.03%)</title><rect x="183.2" y="485" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="186.21" y="495.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlTriggerReqParameters::SchedUlTriggerReqParameters (437,313 samples, 0.05%)</title><rect x="133.5" y="517" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="136.51" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_fill_insert (276,956 samples, 0.03%)</title><rect x="105.6" y="437" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="108.60" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_S_key (486,894 samples, 0.05%)</title><rect x="168.5" y="405" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="171.53" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_base (187,407 samples, 0.02%)</title><rect x="447.9" y="245" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="450.94" y="255.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (500,128 samples, 0.05%)</title><rect x="606.5" y="469" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="609.49" y="479.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::CreateTxPowerSpectralDensity (151,318 samples, 0.02%)</title><rect x="614.4" y="533" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="617.41" y="543.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::~LteSpectrumSignalParametersDlCtrlFrame (452,654 samples, 0.05%)</title><rect x="324.1" y="437" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="327.12" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (309,041 samples, 0.03%)</title><rect x="775.6" y="389" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="778.63" y="399.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (662,137 samples, 0.07%)</title><rect x="340.2" y="453" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="343.24" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (160,795 samples, 0.02%)</title><rect x="184.2" y="469" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="187.16" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::erase (3,046,130 samples, 0.31%)</title><rect x="621.1" y="533" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="624.13" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt;::~vector (308,027 samples, 0.03%)</title><rect x="229.3" y="453" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="232.30" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_base (164,136 samples, 0.02%)</title><rect x="343.7" y="469" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="346.73" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_impl::_List_impl (147,640 samples, 0.02%)</title><rect x="448.0" y="229" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="450.97" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;::allocate (474,197 samples, 0.05%)</title><rect x="237.5" y="341" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="240.55" y="351.5" ></text>
</g>
<g >
<title>ns3::AntennaModel* ns3::PeekPointer&lt;ns3::AntennaModel&gt; (215,390 samples, 0.02%)</title><rect x="703.9" y="517" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="706.87" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (166,957 samples, 0.02%)</title><rect x="385.2" y="357" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="388.18" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::allocate (267,808 samples, 0.03%)</title><rect x="499.4" y="437" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="502.42" y="447.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (210,243 samples, 0.02%)</title><rect x="576.4" y="309" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="579.43" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_begin (165,524 samples, 0.02%)</title><rect x="432.1" y="293" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="435.11" y="303.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; (682,837 samples, 0.07%)</title><rect x="763.6" y="613" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="766.56" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (306,796 samples, 0.03%)</title><rect x="677.3" y="453" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="680.28" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (143,941 samples, 0.01%)</title><rect x="265.3" y="357" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="268.33" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;void  (32,042,329 samples, 3.30%)</title><rect x="579.6" y="405" width="25.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="582.59" y="415.5" >s..</text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (495,402 samples, 0.05%)</title><rect x="340.8" y="421" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="343.78" y="431.5" ></text>
</g>
<g >
<title>ns3::Packet::Copy (449,334 samples, 0.05%)</title><rect x="118.0" y="501" width="0.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="121.05" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::operator= (194,342 samples, 0.02%)</title><rect x="275.8" y="485" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="278.84" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (334,381 samples, 0.03%)</title><rect x="516.0" y="485" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="518.95" y="495.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::UlDciLteControlMessage&gt;::_M_valptr (143,958 samples, 0.01%)</title><rect x="287.3" y="453" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="290.30" y="463.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (1,142,786 samples, 0.12%)</title><rect x="403.6" y="421" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="406.56" y="431.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::operator= (1,023,273 samples, 0.11%)</title><rect x="685.7" y="469" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="688.72" y="479.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (3,074,446 samples, 0.32%)</title><rect x="75.4" y="389" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="78.42" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (124,596 samples, 0.01%)</title><rect x="594.9" y="213" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="597.90" y="223.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::operator= (187,028 samples, 0.02%)</title><rect x="22.8" y="293" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="25.75" y="303.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::copy&lt;std::_Bit_const_iterator, std::_Bit_iterator&gt; (308,999 samples, 0.03%)</title><rect x="248.0" y="421" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="251.01" y="431.5" ></text>
</g>
<g >
<title>operator delete (159,299 samples, 0.02%)</title><rect x="454.9" y="229" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="457.92" y="239.5" ></text>
</g>
<g >
<title>ns3::EventImpl*&amp;&amp; std::forward&lt;ns3::EventImpl*&gt; (154,501 samples, 0.02%)</title><rect x="335.0" y="293" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="338.04" y="303.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::MacCeListElement_s (314,209 samples, 0.03%)</title><rect x="129.3" y="405" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="132.27" y="415.5" ></text>
</g>
<g >
<title>ns3::ByteTagIterator::Next (1,253,201 samples, 0.13%)</title><rect x="425.1" y="245" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="428.13" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::find (741,040 samples, 0.08%)</title><rect x="189.3" y="469" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="192.29" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (2,710,426 samples, 0.28%)</title><rect x="402.6" y="501" width="2.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="405.56" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (439,896 samples, 0.05%)</title><rect x="502.0" y="325" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="504.99" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (185,055 samples, 0.02%)</title><rect x="341.0" y="309" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="344.03" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::operator[] (127,693 samples, 0.01%)</title><rect x="575.9" y="341" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="578.89" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_Rb_tree_iterator (701,037 samples, 0.07%)</title><rect x="760.8" y="677" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="763.82" y="687.5" ></text>
</g>
<g >
<title>std::operator== (157,371 samples, 0.02%)</title><rect x="12.4" y="341" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="15.37" y="351.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_move_if_noexcept_a&lt;ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e*, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; (535,507 samples, 0.06%)</title><rect x="511.3" y="517" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="514.30" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (4,416,635 samples, 0.46%)</title><rect x="773.7" y="501" width="3.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="776.67" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; (682,837 samples, 0.07%)</title><rect x="763.6" y="629" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="766.56" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (193,911 samples, 0.02%)</title><rect x="104.0" y="405" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="106.96" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (155,888 samples, 0.02%)</title><rect x="506.7" y="517" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="509.69" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_begin (350,813 samples, 0.04%)</title><rect x="273.4" y="437" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="276.40" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteEnbPhy*&gt;::tuple&lt;ns3::LteEnbPhy*&amp;, true, true&gt; (308,535 samples, 0.03%)</title><rect x="282.8" y="469" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="285.75" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Acquire (125,666 samples, 0.01%)</title><rect x="560.0" y="245" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="563.02" y="255.5" ></text>
</g>
<g >
<title> (367,419 samples, 0.04%)</title><rect x="492.8" y="533" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="495.78" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (160,898 samples, 0.02%)</title><rect x="590.2" y="245" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="593.18" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::at (596,297 samples, 0.06%)</title><rect x="700.9" y="549" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="703.94" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (185,306 samples, 0.02%)</title><rect x="661.1" y="341" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="664.08" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;* std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (1,753,857 samples, 0.18%)</title><rect x="270.1" y="421" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="273.14" y="431.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (892,230,301 samples, 92.00%)</title><rect x="40.6" y="709" width="717.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="43.58" y="719.5" >ns3::MakeEvent&lt;void </text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (1,255,265 samples, 0.13%)</title><rect x="499.1" y="485" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="502.11" y="495.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (1,777,558 samples, 0.18%)</title><rect x="652.6" y="405" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="655.59" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_check_len (436,269 samples, 0.04%)</title><rect x="198.7" y="437" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="201.73" y="447.5" ></text>
</g>
<g >
<title>malloc (487,893 samples, 0.05%)</title><rect x="407.7" y="357" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="410.68" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_impl::_List_impl (336,148 samples, 0.03%)</title><rect x="517.0" y="405" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="520.02" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt; &gt; &gt; &gt;::end (242,528 samples, 0.03%)</title><rect x="552.8" y="213" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="555.82" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::find (767,082 samples, 0.08%)</title><rect x="186.4" y="469" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="189.42" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedUlConfigInd (308,659 samples, 0.03%)</title><rect x="103.6" y="453" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="106.62" y="463.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetSize (264,448 samples, 0.03%)</title><rect x="684.7" y="501" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="687.68" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::MobilityModel const&gt;, ns3::Ptr&lt;ns3::MobilityModel const&gt;, double, double, double, double&gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::MobilityModel const&gt;, ns3::Ptr&lt;ns3::MobilityModel const&gt;, double, double, double, double&gt; &gt; &gt;::begin (239,520 samples, 0.02%)</title><rect x="746.4" y="533" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="749.37" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::back (335,354 samples, 0.03%)</title><rect x="556.0" y="181" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="558.96" y="191.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::~Ptr (199,027 samples, 0.02%)</title><rect x="773.0" y="437" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="775.97" y="447.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (4,924,388 samples, 0.51%)</title><rect x="451.1" y="261" width="4.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="454.12" y="271.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy_a&lt;std::move_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt;, ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e&gt; (347,263 samples, 0.04%)</title><rect x="511.3" y="501" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="514.33" y="511.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (683,830 samples, 0.07%)</title><rect x="444.1" y="277" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="447.11" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Rb_tree (459,078 samples, 0.05%)</title><rect x="104.5" y="453" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="107.45" y="463.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (288,439 samples, 0.03%)</title><rect x="548.4" y="85" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="551.35" y="95.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt; ns3::DynamicCast&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame, ns3::SpectrumSignalParameters&gt; (649,747 samples, 0.07%)</title><rect x="735.6" y="533" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="738.65" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::resize (2,656,618 samples, 0.27%)</title><rect x="246.8" y="485" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="249.83" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (294,493 samples, 0.03%)</title><rect x="590.6" y="229" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="593.61" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (419,586 samples, 0.04%)</title><rect x="193.2" y="421" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="196.21" y="431.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (156,527 samples, 0.02%)</title><rect x="283.9" y="437" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="286.90" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_impl::_Vector_impl (221,723 samples, 0.02%)</title><rect x="239.8" y="261" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="242.80" y="271.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (324,739 samples, 0.03%)</title><rect x="593.3" y="229" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="596.31" y="239.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;ns3::HigherLayerSelected_s, ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; (878,397 samples, 0.09%)</title><rect x="595.5" y="213" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="598.52" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_impl::_List_impl (210,164 samples, 0.02%)</title><rect x="610.4" y="517" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="613.39" y="527.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_Bvector_impl_data::_M_reset (230,239 samples, 0.02%)</title><rect x="195.8" y="453" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="198.83" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_deallocate (276,642 samples, 0.03%)</title><rect x="233.3" y="293" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="236.27" y="303.5" ></text>
</g>
<g >
<title>ns3::LteInterference::StartRx (5,493,483 samples, 0.57%)</title><rect x="715.9" y="517" width="4.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="718.88" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (16,143,749 samples, 1.66%)</title><rect x="470.8" y="389" width="13.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="473.80" y="399.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (187,951 samples, 0.02%)</title><rect x="653.7" y="341" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="656.72" y="351.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedUlConfigInd (577,569 samples, 0.06%)</title><rect x="103.4" y="469" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="106.41" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::tuple (411,266 samples, 0.04%)</title><rect x="87.6" y="405" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="90.62" y="415.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::WriteU8 (158,006 samples, 0.02%)</title><rect x="554.7" y="213" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="557.69" y="223.5" ></text>
</g>
<g >
<title>ns3::RlcTag::RlcTag (398,815 samples, 0.04%)</title><rect x="427.6" y="261" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="430.59" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (476,320 samples, 0.05%)</title><rect x="483.3" y="309" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="486.27" y="319.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator[] (159,219 samples, 0.02%)</title><rect x="601.6" y="325" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="604.56" y="335.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a1&lt;true, ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (155,079 samples, 0.02%)</title><rect x="511.4" y="421" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="514.40" y="431.5" ></text>
</g>
<g >
<title>[libm.so.6] (156,224 samples, 0.02%)</title><rect x="681.5" y="501" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="684.55" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_impl::_List_impl (241,099 samples, 0.02%)</title><rect x="497.8" y="517" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="500.82" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; (536,978 samples, 0.06%)</title><rect x="119.7" y="469" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="122.74" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Unref (977,824 samples, 0.10%)</title><rect x="640.2" y="501" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="643.15" y="511.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetAttributeN (954,513 samples, 0.10%)</title><rect x="541.0" y="245" width="0.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="544.03" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (275,542 samples, 0.03%)</title><rect x="455.9" y="245" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="458.92" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move_a1&lt;true, ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (497,602 samples, 0.05%)</title><rect x="119.8" y="453" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="122.77" y="463.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::LteRadioBearerTag (284,170 samples, 0.03%)</title><rect x="561.0" y="197" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="564.01" y="207.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetTypeId (206,883 samples, 0.02%)</title><rect x="543.6" y="293" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="546.61" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::push_back (3,021,585 samples, 0.31%)</title><rect x="722.8" y="517" width="2.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="725.81" y="527.5" ></text>
</g>
<g >
<title>ns3::Time::ToInteger (261,832 samples, 0.03%)</title><rect x="493.7" y="533" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="496.69" y="543.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (1,206,985 samples, 0.12%)</title><rect x="729.4" y="469" width="0.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="732.37" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned short&gt;::allocate (337,690 samples, 0.03%)</title><rect x="520.2" y="245" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="523.16" y="255.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (142,224 samples, 0.01%)</title><rect x="634.7" y="293" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="637.73" y="303.5" ></text>
</g>
<g >
<title>ns3::Angles::CheckIfValid (194,633 samples, 0.02%)</title><rect x="311.0" y="453" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="314.04" y="463.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::RefreshUlCqiMaps (631,523 samples, 0.07%)</title><rect x="233.7" y="485" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="236.74" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_get_Tp_allocator (239,915 samples, 0.02%)</title><rect x="480.2" y="261" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="483.24" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_impl_data::_Vector_impl_data (204,699 samples, 0.02%)</title><rect x="478.0" y="229" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="481.02" y="239.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::operator (1,399,576 samples, 0.14%)</title><rect x="725.5" y="517" width="1.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="728.53" y="527.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (645,709 samples, 0.07%)</title><rect x="68.8" y="421" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="71.83" y="431.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (307,397 samples, 0.03%)</title><rect x="118.4" y="501" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="121.41" y="511.5" ></text>
</g>
<g >
<title>operator new[] (234,036 samples, 0.02%)</title><rect x="33.1" y="341" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="36.06" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; &gt; (337,592 samples, 0.03%)</title><rect x="585.7" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="588.68" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (151,215 samples, 0.02%)</title><rect x="640.8" y="373" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="643.82" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (865,226 samples, 0.09%)</title><rect x="730.5" y="469" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="733.54" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::_M_erase (330,114 samples, 0.03%)</title><rect x="110.5" y="501" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="113.47" y="511.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (355,888 samples, 0.04%)</title><rect x="57.0" y="421" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="60.04" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned char, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::find (1,128,415 samples, 0.12%)</title><rect x="135.9" y="485" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="138.87" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_get_node (153,956 samples, 0.02%)</title><rect x="658.6" y="437" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="661.57" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_allocate (160,120 samples, 0.02%)</title><rect x="443.1" y="261" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="446.10" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned char&gt;::operator (167,620 samples, 0.02%)</title><rect x="568.5" y="245" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="571.46" y="255.5" ></text>
</g>
<g >
<title> (199,807 samples, 0.02%)</title><rect x="322.9" y="485" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="325.91" y="495.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (811,600 samples, 0.08%)</title><rect x="279.7" y="501" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="282.72" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::~PacketTagList (284,832 samples, 0.03%)</title><rect x="548.8" y="117" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="551.84" y="127.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1,517,738 samples, 0.16%)</title><rect x="281.8" y="485" width="1.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="284.78" y="495.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartTxDataFrame (46,273,897 samples, 4.77%)</title><rect x="636.6" y="549" width="37.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="639.57" y="559.5" >ns3..</text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartRxDlCtrl (11,425,137 samples, 1.18%)</title><rect x="725.2" y="533" width="9.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="728.24" y="543.5" ></text>
</g>
<g >
<title>ns3::MemberLteFfrSapProvider&lt;ns3::LteFrNoOpAlgorithm&gt;::GetAvailableDlRbg (918,216 samples, 0.09%)</title><rect x="175.5" y="485" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="178.48" y="495.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::MacCeListElement_s (1,971,723 samples, 0.20%)</title><rect x="686.7" y="501" width="1.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="689.66" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_base (195,602 samples, 0.02%)</title><rect x="721.4" y="485" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="724.37" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::max_size (266,439 samples, 0.03%)</title><rect x="127.9" y="469" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="130.86" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; const&amp; std::forward&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; const&amp;&gt; (158,064 samples, 0.02%)</title><rect x="354.3" y="501" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="357.30" y="511.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (194,631 samples, 0.02%)</title><rect x="120.0" y="309" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="123.02" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;signed char const*, std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;signed char const*, std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt; &gt; (153,078 samples, 0.02%)</title><rect x="532.3" y="325" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="535.28" y="335.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::GeneratePowerAllocationMap (4,944,219 samples, 0.51%)</title><rect x="292.4" y="549" width="4.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="295.43" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::push_back (875,814 samples, 0.09%)</title><rect x="382.7" y="533" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="385.68" y="543.5" ></text>
</g>
<g >
<title>std::__fill_a1 (312,132 samples, 0.03%)</title><rect x="200.7" y="405" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="203.66" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::cbegin (159,970 samples, 0.02%)</title><rect x="200.9" y="453" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="203.91" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int const, double&gt;, std::pair&lt;int const, double&gt; const&amp;&gt; (164,321 samples, 0.02%)</title><rect x="59.7" y="373" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="62.71" y="383.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy*&amp; std::forward&lt;ns3::LteSpectrumPhy*&amp;&gt; (158,008 samples, 0.02%)</title><rect x="306.5" y="405" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="309.51" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (414,587 samples, 0.04%)</title><rect x="576.3" y="341" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="579.26" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (158,177 samples, 0.02%)</title><rect x="460.7" y="133" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="463.72" y="143.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetAttributeN (771,224 samples, 0.08%)</title><rect x="373.1" y="453" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="376.09" y="463.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (151,076 samples, 0.02%)</title><rect x="109.9" y="453" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="112.87" y="463.5" ></text>
</g>
<g >
<title>ns3::LteUePhy*&amp; std::__get_helper&lt;0ul, ns3::LteUePhy*, unsigned int, unsigned int&gt; (184,584 samples, 0.02%)</title><rect x="753.8" y="581" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="756.82" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,505,468 samples, 0.16%)</title><rect x="190.8" y="437" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="193.82" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::at (320,661 samples, 0.03%)</title><rect x="589.2" y="245" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="592.16" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::clear (202,759 samples, 0.02%)</title><rect x="77.3" y="325" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="80.27" y="335.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (611,395 samples, 0.06%)</title><rect x="635.0" y="325" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="638.01" y="335.5" ></text>
</g>
<g >
<title>[libm.so.6] (230,207 samples, 0.02%)</title><rect x="702.7" y="501" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="705.73" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (158,175 samples, 0.02%)</title><rect x="648.1" y="405" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="651.14" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (153,618 samples, 0.02%)</title><rect x="689.5" y="405" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="692.48" y="415.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::~SimpleRefCount (245,743 samples, 0.03%)</title><rect x="77.0" y="325" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="80.04" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_allocate (201,689 samples, 0.02%)</title><rect x="584.0" y="213" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="586.96" y="223.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::at (497,296 samples, 0.05%)</title><rect x="156.4" y="421" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="159.38" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (149,250 samples, 0.02%)</title><rect x="114.3" y="437" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="117.30" y="447.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::ReceivePhyPdu (14,054,177 samples, 1.45%)</title><rect x="423.6" y="357" width="11.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="426.61" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_addr (270,625 samples, 0.03%)</title><rect x="369.4" y="469" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="372.41" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (323,152 samples, 0.03%)</title><rect x="414.3" y="517" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="417.31" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_impl::_List_impl (461,286 samples, 0.05%)</title><rect x="371.6" y="453" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="374.60" y="463.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (151,076 samples, 0.02%)</title><rect x="109.9" y="437" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="112.87" y="447.5" ></text>
</g>
<g >
<title>std::operator+ (162,486 samples, 0.02%)</title><rect x="195.7" y="437" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="198.70" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (158,119 samples, 0.02%)</title><rect x="340.6" y="277" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="343.65" y="287.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (1,087,646 samples, 0.11%)</title><rect x="629.0" y="517" width="0.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="632.00" y="527.5" ></text>
</g>
<g >
<title>ns3::operator&lt; (412,114 samples, 0.04%)</title><rect x="664.0" y="373" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="667.01" y="383.5" ></text>
</g>
<g >
<title>unsigned int* std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;unsigned int*, unsigned long, unsigned int&gt; (908,274 samples, 0.09%)</title><rect x="695.7" y="437" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="698.71" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst const&gt;::Ptr&lt;ns3::PacketBurst&gt; (233,298 samples, 0.02%)</title><rect x="670.7" y="533" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="673.74" y="543.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt;, ns3::MacCeListElement_s*&gt; (921,768 samples, 0.10%)</title><rect x="128.8" y="453" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="131.78" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (485,304 samples, 0.05%)</title><rect x="439.4" y="421" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="442.45" y="431.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (266,478 samples, 0.03%)</title><rect x="53.3" y="501" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="56.32" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_S_key (686,320 samples, 0.07%)</title><rect x="188.3" y="437" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="191.26" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;int&gt;::allocate (152,677 samples, 0.02%)</title><rect x="397.5" y="469" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="400.46" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (155,456 samples, 0.02%)</title><rect x="341.2" y="421" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="344.24" y="431.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_valptr (361,692 samples, 0.04%)</title><rect x="496.0" y="533" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="498.99" y="543.5" ></text>
</g>
<g >
<title>decltype  (194,571 samples, 0.02%)</title><rect x="461.6" y="277" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="464.55" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::find (1,135,998 samples, 0.12%)</title><rect x="437.6" y="309" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="440.60" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_mbegin (309,940 samples, 0.03%)</title><rect x="523.0" y="293" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="526.00" y="303.5" ></text>
</g>
<g >
<title>ns3::Singleton&lt;ns3::IidManager&gt;::Get (195,646 samples, 0.02%)</title><rect x="541.8" y="245" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="544.83" y="255.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::CqiListElement_s&gt; (933,761 samples, 0.10%)</title><rect x="255.0" y="405" width="0.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="257.97" y="415.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_fill_n_a&lt;unsigned char*, unsigned long, unsigned char, unsigned char&gt; (492,278 samples, 0.05%)</title><rect x="215.9" y="453" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="218.88" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;::_M_valptr (433,705 samples, 0.04%)</title><rect x="183.6" y="469" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="186.57" y="479.5" ></text>
</g>
<g >
<title>ns3::Object::SetTypeId (871,023 samples, 0.09%)</title><rect x="542.9" y="293" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="545.91" y="303.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::~PacketMetadata (1,016,942 samples, 0.10%)</title><rect x="548.0" y="117" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="551.02" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::_M_addr (218,793 samples, 0.02%)</title><rect x="137.3" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="140.30" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (283,533 samples, 0.03%)</title><rect x="550.2" y="181" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="553.19" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (198,702 samples, 0.02%)</title><rect x="413.2" y="453" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="416.20" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::~_List_base (241,713 samples, 0.02%)</title><rect x="550.8" y="213" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="553.75" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::max_size (163,785 samples, 0.02%)</title><rect x="130.1" y="469" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="133.12" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (194,496 samples, 0.02%)</title><rect x="238.5" y="213" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="241.50" y="223.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt;::Ptr (189,795 samples, 0.02%)</title><rect x="343.9" y="501" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="346.86" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::operator= (148,381 samples, 0.02%)</title><rect x="117.1" y="405" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="120.11" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (151,184 samples, 0.02%)</title><rect x="105.1" y="437" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="108.07" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,235,121 samples, 0.13%)</title><rect x="725.6" y="469" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="728.60" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (613,231 samples, 0.06%)</title><rect x="708.3" y="469" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="711.30" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (169,207 samples, 0.02%)</title><rect x="574.6" y="293" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="577.55" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_List_impl::_List_impl (394,429 samples, 0.04%)</title><rect x="366.6" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="369.55" y="463.5" ></text>
</g>
<g >
<title>ns3::Object::SetTypeId (654,252 samples, 0.07%)</title><rect x="163.1" y="421" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="166.06" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (1,512,230 samples, 0.16%)</title><rect x="528.9" y="341" width="1.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="531.89" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (1,760,133 samples, 0.18%)</title><rect x="649.9" y="485" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="652.88" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (152,858 samples, 0.02%)</title><rect x="654.3" y="389" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="657.32" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (3,992,341 samples, 0.41%)</title><rect x="497.7" y="549" width="3.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="500.68" y="559.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (592,631 samples, 0.06%)</title><rect x="126.9" y="357" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="129.85" y="367.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::operator= (850,226 samples, 0.09%)</title><rect x="134.5" y="485" width="0.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="137.49" y="495.5" ></text>
</g>
<g >
<title>ns3::DlHarqFeedbackLteControlMessage::DlHarqFeedbackLteControlMessage (507,137 samples, 0.05%)</title><rect x="420.8" y="341" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="423.77" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (159,006 samples, 0.02%)</title><rect x="211.0" y="357" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="213.95" y="367.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (1,462,868 samples, 0.15%)</title><rect x="324.7" y="485" width="1.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="327.70" y="495.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt; &gt;::_List_const_iterator (197,677 samples, 0.02%)</title><rect x="328.2" y="469" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="331.15" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (190,332 samples, 0.02%)</title><rect x="674.2" y="469" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="677.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_valptr (199,039 samples, 0.02%)</title><rect x="272.9" y="453" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="275.92" y="463.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a1&lt;false, int const*, int*&gt; (162,673 samples, 0.02%)</title><rect x="531.3" y="293" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="534.29" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Ptr (124,350 samples, 0.01%)</title><rect x="69.3" y="453" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="72.35" y="463.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet const&gt; &gt; &gt;::_List_const_iterator (161,515 samples, 0.02%)</title><rect x="494.4" y="517" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="497.44" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (198,351 samples, 0.02%)</title><rect x="679.1" y="485" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="682.10" y="495.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::DlInfoListElement_s, ns3::DlInfoListElement_s const&amp;&gt; (411,592 samples, 0.04%)</title><rect x="107.3" y="405" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="110.29" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::cbegin (266,872 samples, 0.03%)</title><rect x="292.1" y="517" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="295.06" y="527.5" ></text>
</g>
<g >
<title>double const* std::__niter_base&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (274,054 samples, 0.03%)</title><rect x="647.3" y="373" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="650.34" y="383.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (146,079 samples, 0.02%)</title><rect x="96.7" y="421" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="99.74" y="431.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt; &gt;::_List_const_iterator (240,206 samples, 0.02%)</title><rect x="156.1" y="357" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="159.12" y="367.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::ReportRsReceivedPower (3,913,990 samples, 0.40%)</title><rect x="601.9" y="341" width="3.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="604.95" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::UlDciLteControlMessage&gt; ns3::Create&lt;ns3::UlDciLteControlMessage&gt; (305,849 samples, 0.03%)</title><rect x="230.9" y="453" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="233.91" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (2,378,553 samples, 0.25%)</title><rect x="519.6" y="341" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="522.57" y="351.5" ></text>
</g>
<g >
<title>unsigned short* std::copy&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*&gt; (154,651 samples, 0.02%)</title><rect x="106.3" y="373" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="109.25" y="383.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_valptr (444,952 samples, 0.05%)</title><rect x="544.9" y="213" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="547.85" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::vector (187,210 samples, 0.02%)</title><rect x="130.6" y="501" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="133.64" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (159,388 samples, 0.02%)</title><rect x="147.5" y="421" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="150.50" y="431.5" ></text>
</g>
<g >
<title>ns3::MobilityModel::GetPosition (542,316 samples, 0.06%)</title><rect x="319.6" y="501" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="322.57" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (2,803,402 samples, 0.29%)</title><rect x="451.6" y="165" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="454.64" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::~list (194,036 samples, 0.02%)</title><rect x="372.1" y="485" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="375.07" y="495.5" ></text>
</g>
<g >
<title>bool ns3::operator==&lt;ns3::SpectrumModel const, ns3::SpectrumModel const&gt; (290,035 samples, 0.03%)</title><rect x="416.3" y="517" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="419.32" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::Create&lt;ns3::PacketBurst&gt; (409,956 samples, 0.04%)</title><rect x="118.7" y="501" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="121.69" y="511.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::HarqProcessAvailability (1,102,343 samples, 0.11%)</title><rect x="176.6" y="485" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="179.56" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, double, false&gt;::_M_head (124,767 samples, 0.01%)</title><rect x="756.8" y="549" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="759.83" y="559.5" ></text>
</g>
<g >
<title>double const&amp; std::max&lt;double&gt; (155,216 samples, 0.02%)</title><rect x="739.5" y="517" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="742.45" y="527.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;double&gt; (403,637 samples, 0.04%)</title><rect x="404.2" y="405" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="407.15" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::allocate (185,442 samples, 0.02%)</title><rect x="318.9" y="309" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="321.91" y="319.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (4,972,136 samples, 0.51%)</title><rect x="11.4" y="581" width="4.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="14.43" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_lower_bound (193,630 samples, 0.02%)</title><rect x="659.7" y="469" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="662.71" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s&gt; (1,227,211 samples, 0.13%)</title><rect x="256.0" y="485" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="258.95" y="495.5" ></text>
</g>
<g >
<title>double* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (1,091,128 samples, 0.11%)</title><rect x="238.1" y="261" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="241.15" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::find (186,495 samples, 0.02%)</title><rect x="18.5" y="309" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="21.52" y="319.5" ></text>
</g>
<g >
<title>std::operator== (203,617 samples, 0.02%)</title><rect x="466.5" y="501" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="469.54" y="511.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::~DlDciListElement_s (529,836 samples, 0.05%)</title><rect x="521.5" y="357" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="524.49" y="367.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::DoPeekImpl (126,102 samples, 0.01%)</title><rect x="515.7" y="533" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="518.73" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (221,766 samples, 0.02%)</title><rect x="324.3" y="389" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="327.31" y="399.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartRxUlSrs (233,781 samples, 0.02%)</title><rect x="734.4" y="533" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="737.43" y="543.5" ></text>
</g>
<g >
<title>std::operator== (148,898 samples, 0.02%)</title><rect x="296.0" y="501" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="299.04" y="511.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (1,903,866 samples, 0.20%)</title><rect x="281.6" y="501" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="284.60" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::_M_begin (156,571 samples, 0.02%)</title><rect x="137.0" y="453" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="139.99" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_put_node (278,972 samples, 0.03%)</title><rect x="291.0" y="357" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="293.95" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::~_List_base (1,543,193 samples, 0.16%)</title><rect x="392.6" y="533" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="395.58" y="543.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (167,033 samples, 0.02%)</title><rect x="577.9" y="437" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="580.85" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (404,825 samples, 0.04%)</title><rect x="523.6" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="526.62" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (163,549 samples, 0.02%)</title><rect x="706.5" y="341" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="709.48" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt;::pair&lt;ns3::TbId_t&amp;, ns3::tbInfo_t&amp;&gt; (126,859 samples, 0.01%)</title><rect x="530.1" y="341" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="533.10" y="351.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (667,572 samples, 0.07%)</title><rect x="612.8" y="517" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="615.81" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (702,211 samples, 0.07%)</title><rect x="394.2" y="485" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.16" y="495.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (1,796,083 samples, 0.19%)</title><rect x="501.5" y="453" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="504.48" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::~list (290,552 samples, 0.03%)</title><rect x="540.1" y="277" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="543.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_mbegin (127,985 samples, 0.01%)</title><rect x="565.7" y="181" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="568.68" y="191.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (236,969 samples, 0.02%)</title><rect x="728.9" y="469" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="731.86" y="479.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s&gt; (451,449 samples, 0.05%)</title><rect x="107.3" y="469" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="110.26" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; const&amp; std::forward&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (156,451 samples, 0.02%)</title><rect x="362.4" y="469" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="365.40" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::begin (164,101 samples, 0.02%)</title><rect x="508.4" y="533" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="511.43" y="543.5" ></text>
</g>
<g >
<title>operator new (143,903 samples, 0.01%)</title><rect x="164.0" y="437" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="166.96" y="447.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_fill_n_a&lt;unsigned short*, unsigned long, unsigned short, unsigned short&gt; (897,210 samples, 0.09%)</title><rect x="252.0" y="453" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="255.02" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;unsigned short&gt; &gt;::construct&lt;unsigned short, unsigned short const&amp;&gt; (146,680 samples, 0.02%)</title><rect x="251.8" y="437" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="254.81" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; &gt; (226,371 samples, 0.02%)</title><rect x="117.8" y="469" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="120.75" y="479.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*&gt; (4,951,937 samples, 0.51%)</title><rect x="257.9" y="469" width="4.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="260.94" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_create_storage (308,409 samples, 0.03%)</title><rect x="144.4" y="421" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="147.41" y="431.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (431,756 samples, 0.04%)</title><rect x="364.9" y="453" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="367.91" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (157,629 samples, 0.02%)</title><rect x="332.5" y="437" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="335.49" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt; ns3::Create&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame, ns3::LteSpectrumSignalParametersDlCtrlFrame const&amp;&gt; (7,022,110 samples, 0.72%)</title><rect x="313.9" y="485" width="5.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="316.89" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::clear (355,870 samples, 0.04%)</title><rect x="172.2" y="453" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="175.25" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;::_M_valptr (124,708 samples, 0.01%)</title><rect x="59.9" y="421" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="62.88" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::empty (194,427 samples, 0.02%)</title><rect x="173.1" y="453" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="176.09" y="463.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt;, ns3::MacCeListElement_s*&gt; (957,513 samples, 0.10%)</title><rect x="128.8" y="469" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="131.75" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::SetDownlinkSubChannels (1,402,168 samples, 0.14%)</title><rect x="111.4" y="517" width="1.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="114.35" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::erase[abi:cxx11] (940,554 samples, 0.10%)</title><rect x="222.3" y="485" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="225.32" y="495.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters::SchedUlCqiInfoReqParameters (3,384,993 samples, 0.35%)</title><rect x="474.2" y="325" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="477.23" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (143,275 samples, 0.01%)</title><rect x="636.5" y="469" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="639.46" y="479.5" ></text>
</g>
<g >
<title>ns3::IidManager::LookupInformation (331,597 samples, 0.03%)</title><rect x="373.3" y="437" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="376.28" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (426,539 samples, 0.04%)</title><rect x="335.0" y="341" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="337.95" y="351.5" ></text>
</g>
<g >
<title>ns3::LteChunkProcessor::End (37,821,975 samples, 3.90%)</title><rect x="576.8" y="533" width="30.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="579.83" y="543.5" >ns..</text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::uninitialized_copy&lt;std::move_iterator&lt;ns3::MacCeListElement_s*&gt;, ns3::MacCeListElement_s*&gt; (350,102 samples, 0.04%)</title><rect x="129.6" y="453" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="132.59" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;::_M_addr (233,529 samples, 0.02%)</title><rect x="170.4" y="357" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="173.40" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::~_Tuple_impl (307,442 samples, 0.03%)</title><rect x="281.3" y="453" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="284.35" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (589,946 samples, 0.06%)</title><rect x="667.5" y="389" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="670.48" y="399.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (17,080,246 samples, 1.76%)</title><rect x="19.6" y="437" width="13.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="22.60" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (231,916 samples, 0.02%)</title><rect x="229.0" y="421" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="232.05" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_ptr (444,952 samples, 0.05%)</title><rect x="544.9" y="197" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="547.85" y="207.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::WriteU32 (388,268 samples, 0.04%)</title><rect x="13.3" y="373" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="16.26" y="383.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (1,438,749 samples, 0.15%)</title><rect x="22.3" y="309" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="25.31" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (192,716 samples, 0.02%)</title><rect x="498.2" y="533" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="501.20" y="543.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::~ByteTagList (1,622,543 samples, 0.17%)</title><rect x="546.7" y="117" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="549.72" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_insert_node (362,836 samples, 0.04%)</title><rect x="83.5" y="389" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="86.54" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (2,258,588 samples, 0.23%)</title><rect x="765.0" y="661" width="1.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="768.04" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::vector (1,025,719 samples, 0.11%)</title><rect x="442.7" y="309" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="445.66" y="319.5" ></text>
</g>
<g >
<title>ns3::Buffer::Recycle (836,248 samples, 0.09%)</title><rect x="545.9" y="101" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="548.94" y="111.5" ></text>
</g>
<g >
<title> (201,121 samples, 0.02%)</title><rect x="492.3" y="533" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="495.30" y="543.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (189,712 samples, 0.02%)</title><rect x="102.0" y="421" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="104.98" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, false&gt;::~_Head_base (3,402,650 samples, 0.35%)</title><rect x="773.7" y="485" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="776.67" y="495.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlInfoListElement_s const*, std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt; &gt;, ns3::UlInfoListElement_s*&gt; (794,783 samples, 0.08%)</title><rect x="266.2" y="437" width="0.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="269.23" y="447.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, ns3::DlInfoListElement_s&gt;::Callback&lt;void  (3,763,206 samples, 0.39%)</title><rect x="418.4" y="485" width="3.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="421.37" y="495.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::pair&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; &gt;::type&amp;&amp; std::get&lt;0ul, unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (189,759 samples, 0.02%)</title><rect x="660.0" y="501" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="662.96" y="511.5" ></text>
</g>
<g >
<title>ns3::LteNetDevice::GetNode (377,687 samples, 0.04%)</title><rect x="643.3" y="517" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="646.27" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_List_impl::_List_impl (126,871 samples, 0.01%)</title><rect x="538.9" y="261" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="541.85" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (466,245 samples, 0.05%)</title><rect x="776.0" y="373" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="779.03" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_range_check (144,021 samples, 0.01%)</title><rect x="181.0" y="453" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="184.05" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_put_node (203,534 samples, 0.02%)</title><rect x="60.9" y="357" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="63.94" y="367.5" ></text>
</g>
<g >
<title>ns3::Packet::Copy (3,461,375 samples, 0.36%)</title><rect x="358.9" y="517" width="2.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="361.86" y="527.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::insert&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (2,409,911 samples, 0.25%)</title><rect x="732.4" y="485" width="2.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="735.44" y="495.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::DoSendMacPdu (539,944 samples, 0.06%)</title><rect x="564.7" y="181" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="567.73" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::allocate (493,183 samples, 0.05%)</title><rect x="563.8" y="117" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="566.80" y="127.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (652,707 samples, 0.07%)</title><rect x="609.7" y="517" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="612.73" y="527.5" ></text>
</g>
<g >
<title>ns3::UeSelected_s::operator= (148,008 samples, 0.02%)</title><rect x="93.8" y="453" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="96.76" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (148,437 samples, 0.02%)</title><rect x="698.0" y="549" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="700.96" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (241,202 samples, 0.02%)</title><rect x="234.3" y="469" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="237.31" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (1,368,772 samples, 0.14%)</title><rect x="223.8" y="485" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="226.75" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::SimpleRefCount (152,528 samples, 0.02%)</title><rect x="670.3" y="485" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="673.25" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::operator (368,315 samples, 0.04%)</title><rect x="656.8" y="517" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="659.83" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (228,046 samples, 0.02%)</title><rect x="144.7" y="421" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="147.66" y="431.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (392,648 samples, 0.04%)</title><rect x="612.9" y="389" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="615.90" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (157,055 samples, 0.02%)</title><rect x="214.0" y="453" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="217.05" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (236,748 samples, 0.02%)</title><rect x="299.5" y="453" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="302.51" y="463.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, ns3::UlInfoListElement_s&gt;::Callback&lt;void  (2,014,597 samples, 0.21%)</title><rect x="439.3" y="453" width="1.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="442.32" y="463.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (17,080,246 samples, 1.76%)</title><rect x="19.6" y="469" width="13.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="22.60" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (415,834 samples, 0.04%)</title><rect x="15.5" y="453" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="18.45" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (326,261 samples, 0.03%)</title><rect x="439.6" y="405" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="442.57" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_S_key (553,029 samples, 0.06%)</title><rect x="455.9" y="261" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="458.85" y="271.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator (164,113 samples, 0.02%)</title><rect x="70.7" y="469" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="73.69" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (191,494 samples, 0.02%)</title><rect x="633.1" y="501" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="636.12" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_M_head (260,750 samples, 0.03%)</title><rect x="755.3" y="565" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="758.28" y="575.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (314,226 samples, 0.03%)</title><rect x="484.8" y="501" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="487.85" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::_M_erase (873,141 samples, 0.09%)</title><rect x="264.7" y="501" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="267.74" y="511.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (238,561 samples, 0.02%)</title><rect x="726.8" y="469" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="729.78" y="479.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (4,972,136 samples, 0.51%)</title><rect x="11.4" y="517" width="4.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="14.43" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::resize (5,979,917 samples, 0.62%)</title><rect x="196.8" y="485" width="4.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="199.84" y="495.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (828,725 samples, 0.09%)</title><rect x="68.0" y="437" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="70.99" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s&gt; (300,135 samples, 0.03%)</title><rect x="207.5" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="210.54" y="479.5" ></text>
</g>
<g >
<title>ns3::PhichListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::PhichListElement_s const*, std::vector&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt; &gt;, ns3::PhichListElement_s*&gt; (202,017 samples, 0.02%)</title><rect x="227.5" y="389" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="230.50" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::~Ptr (195,875 samples, 0.02%)</title><rect x="345.9" y="517" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="348.91" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::~_Vector_base (198,549 samples, 0.02%)</title><rect x="207.9" y="469" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="210.91" y="479.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (27,633,212 samples, 2.85%)</title><rect x="441.7" y="389" width="22.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="444.71" y="399.5" >v..</text>
</g>
<g >
<title>ns3::PacketTagList::TagData::TagData (161,191 samples, 0.02%)</title><rect x="562.4" y="149" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="565.40" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::operator= (640,859 samples, 0.07%)</title><rect x="107.3" y="501" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="110.26" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned int&gt;::_M_head (159,042 samples, 0.02%)</title><rect x="756.4" y="565" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="759.42" y="575.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::EndTxData (1,667,932 samples, 0.17%)</title><rect x="612.2" y="565" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="615.23" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (124,596 samples, 0.01%)</title><rect x="594.9" y="229" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="597.90" y="239.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (966,311 samples, 0.10%)</title><rect x="407.5" y="501" width="0.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="410.53" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::MultiModelSpectrumChannel*&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (550,800 samples, 0.06%)</title><rect x="340.3" y="405" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="343.33" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::at (305,705 samples, 0.03%)</title><rect x="96.4" y="405" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="99.39" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (417,132 samples, 0.04%)</title><rect x="340.8" y="357" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="343.84" y="367.5" ></text>
</g>
<g >
<title>[libm.so.6] (165,652 samples, 0.02%)</title><rect x="739.3" y="501" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="742.32" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*, ns3::Ptr&lt;ns3::Object&gt; &gt; (158,025 samples, 0.02%)</title><rect x="502.6" y="357" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="505.61" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::end (314,439 samples, 0.03%)</title><rect x="217.0" y="469" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="220.02" y="479.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (124,630 samples, 0.01%)</title><rect x="608.8" y="517" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="611.82" y="527.5" ></text>
</g>
<g >
<title>ns3::Object::GetTypeId (316,486 samples, 0.03%)</title><rect x="629.2" y="485" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="632.19" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::begin (448,394 samples, 0.05%)</title><rect x="491.4" y="533" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="494.43" y="543.5" ></text>
</g>
<g >
<title>ns3::LteHelper::InstallSingleEnbDevice (354,479 samples, 0.04%)</title><rect x="35.8" y="757" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="38.80" y="767.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (272,222 samples, 0.03%)</title><rect x="342.1" y="341" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="345.07" y="351.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (893,221 samples, 0.09%)</title><rect x="384.7" y="453" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="387.69" y="463.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt;::Delete (528,952 samples, 0.05%)</title><rect x="609.8" y="453" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="612.83" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (163,408 samples, 0.02%)</title><rect x="722.6" y="517" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="725.64" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (8,514,539 samples, 0.88%)</title><rect x="544.3" y="325" width="6.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="547.27" y="335.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedUlConfigIndParameters::SchedUlConfigIndParameters (191,651 samples, 0.02%)</title><rect x="103.4" y="453" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="106.41" y="463.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (576,469 samples, 0.06%)</title><rect x="398.9" y="469" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="401.94" y="479.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt;, std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt;, 2ul, 3ul&gt;::__eq (816,676 samples, 0.08%)</title><rect x="747.5" y="469" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="750.46" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (671,388 samples, 0.07%)</title><rect x="221.7" y="453" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="224.68" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (189,556 samples, 0.02%)</title><rect x="192.8" y="437" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="195.85" y="447.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (724,999 samples, 0.07%)</title><rect x="359.2" y="485" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="362.22" y="495.5" ></text>
</g>
<g >
<title>main (923,574,718 samples, 95.24%)</title><rect x="35.7" y="789" width="742.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="38.67" y="799.5" >main</text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::vector (511,121 samples, 0.05%)</title><rect x="131.6" y="501" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="134.61" y="511.5" ></text>
</g>
<g >
<title>ns3::Object::Construct (267,173 samples, 0.03%)</title><rect x="19.4" y="437" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="22.36" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, ns3::LteUePhy*, false&gt;::_Head_base&lt;ns3::LteUePhy*&amp;&gt; (194,018 samples, 0.02%)</title><rect x="617.4" y="437" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="620.36" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (268,850 samples, 0.03%)</title><rect x="362.1" y="485" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="365.09" y="495.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (1,901,878 samples, 0.20%)</title><rect x="31.2" y="389" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="34.17" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_default_n&lt;unsigned char*, unsigned long&gt; (957,537 samples, 0.10%)</title><rect x="460.2" y="229" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="463.23" y="239.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::Copy (3,716,085 samples, 0.38%)</title><rect x="67.6" y="469" width="3.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="70.64" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned short&gt;, true&gt;::~_Rb_tree_impl (183,623 samples, 0.02%)</title><rect x="193.7" y="453" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="196.68" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (525,645 samples, 0.05%)</title><rect x="407.7" y="421" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="410.65" y="431.5" ></text>
</g>
<g >
<title>ns3::LteFrNoOpAlgorithm::DoGetAvailableUlRbg (159,757 samples, 0.02%)</title><rect x="232.3" y="469" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="235.28" y="479.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s::UlInfoListElement_s (231,995 samples, 0.02%)</title><rect x="266.7" y="405" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="269.68" y="415.5" ></text>
</g>
<g >
<title>ns3::BsrLteControlMessage::BsrLteControlMessage (515,105 samples, 0.05%)</title><rect x="688.6" y="485" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="691.62" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Node&gt;::Acquire (155,344 samples, 0.02%)</title><rect x="312.9" y="469" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="315.88" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlHarqFeedbackLteControlMessage&gt; ns3::Create&lt;ns3::DlHarqFeedbackLteControlMessage&gt; (705,727 samples, 0.07%)</title><rect x="420.7" y="357" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="423.73" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::allocate (126,498 samples, 0.01%)</title><rect x="81.8" y="421" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="84.85" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (240,849 samples, 0.02%)</title><rect x="64.7" y="421" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="67.74" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_ptr (351,633 samples, 0.04%)</title><rect x="369.3" y="485" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="372.34" y="495.5" ></text>
</g>
<g >
<title>ns3::AttributeConstructionList::~AttributeConstructionList (204,057 samples, 0.02%)</title><rect x="448.1" y="277" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="451.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::key_comp (197,963 samples, 0.02%)</title><rect x="273.2" y="453" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="276.18" y="463.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_valptr (551,416 samples, 0.06%)</title><rect x="369.2" y="501" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="372.18" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (5,473,984 samples, 0.56%)</title><rect x="628.9" y="533" width="4.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="631.94" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::resize (1,737,961 samples, 0.18%)</title><rect x="510.9" y="549" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="513.91" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (613,037 samples, 0.06%)</title><rect x="433.7" y="277" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="436.71" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_M_init (148,323 samples, 0.02%)</title><rect x="286.0" y="469" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="288.98" y="479.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; (308,120 samples, 0.03%)</title><rect x="144.1" y="373" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="147.10" y="383.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (158,753 samples, 0.02%)</title><rect x="17.0" y="373" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="19.99" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (417,132 samples, 0.04%)</title><rect x="340.8" y="373" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="343.84" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_get_node (185,442 samples, 0.02%)</title><rect x="318.9" y="325" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="321.91" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::~vector (568,827 samples, 0.06%)</title><rect x="229.5" y="453" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="232.55" y="463.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*, ns3::HarqProcessInfoElement_t&gt; (489,523 samples, 0.05%)</title><rect x="524.9" y="325" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="527.94" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::_S_right (147,258 samples, 0.02%)</title><rect x="182.2" y="421" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="185.21" y="431.5" ></text>
</g>
<g >
<title>[libm.so.6] (162,241 samples, 0.02%)</title><rect x="302.7" y="469" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="305.66" y="479.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (437,040 samples, 0.05%)</title><rect x="406.5" y="469" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="409.48" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (1,429,194 samples, 0.15%)</title><rect x="529.0" y="325" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="531.95" y="335.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (324,769 samples, 0.03%)</title><rect x="611.9" y="357" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="614.94" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::Create&lt;ns3::PacketBurst&gt; (262,299 samples, 0.03%)</title><rect x="644.9" y="453" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="647.94" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::clear (344,275 samples, 0.04%)</title><rect x="209.0" y="485" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="212.00" y="495.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersUlSrsFrame::Copy (151,019 samples, 0.02%)</title><rect x="613.9" y="517" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="616.86" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (530,824 samples, 0.05%)</title><rect x="239.4" y="229" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="242.38" y="239.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator[] (291,311 samples, 0.03%)</title><rect x="588.9" y="245" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="591.92" y="255.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, std::_Bind&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="677" width="4.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.17" y="687.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::begin (224,560 samples, 0.02%)</title><rect x="178.5" y="469" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="181.49" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::SetDownlinkSubChannelsWithPowerAllocation (10,110,206 samples, 1.04%)</title><rect x="53.9" y="549" width="8.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="56.87" y="559.5" ></text>
</g>
<g >
<title>ns3::LteHelper::InstallUeDevice (533,991 samples, 0.06%)</title><rect x="36.1" y="773" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="39.12" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::at (374,007 samples, 0.04%)</title><rect x="530.8" y="341" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="533.79" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (332,012 samples, 0.03%)</title><rect x="671.6" y="501" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="674.65" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (274,073 samples, 0.03%)</title><rect x="244.1" y="437" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="247.07" y="447.5" ></text>
</g>
<g >
<title>main (22,443,594 samples, 2.31%)</title><rect x="17.2" y="821" width="18.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="20.17" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,282,559 samples, 0.13%)</title><rect x="187.9" y="469" width="1.0" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="190.91" y="479.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetParent (695,948 samples, 0.07%)</title><rect x="632.0" y="469" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="635.00" y="479.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (598,769 samples, 0.06%)</title><rect x="444.2" y="245" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="447.18" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::_M_addr (230,074 samples, 0.02%)</title><rect x="328.9" y="437" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="331.93" y="447.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (154,294 samples, 0.02%)</title><rect x="684.2" y="549" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="687.21" y="559.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (361,324 samples, 0.04%)</title><rect x="727.6" y="453" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="730.56" y="463.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Begin (274,085 samples, 0.03%)</title><rect x="436.6" y="229" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="439.62" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::_S_key (624,690 samples, 0.06%)</title><rect x="437.9" y="277" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="440.90" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (186,148 samples, 0.02%)</title><rect x="120.4" y="501" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="123.44" y="511.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (203,037 samples, 0.02%)</title><rect x="38.4" y="709" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="41.37" y="719.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::Packet&gt;::Delete (750,603 samples, 0.08%)</title><rect x="774.1" y="213" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="777.11" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::_M_begin (334,035 samples, 0.03%)</title><rect x="157.6" y="373" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="160.62" y="383.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (995,216 samples, 0.10%)</title><rect x="512.9" y="469" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="515.86" y="479.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_insert&lt;ns3::UlDciLteControlMessage const&amp;&gt; (198,522 samples, 0.02%)</title><rect x="296.5" y="517" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="299.51" y="527.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (72,708,735 samples, 7.50%)</title><rect x="518.1" y="389" width="58.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="521.12" y="399.5" >void s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_M_begin (162,112 samples, 0.02%)</title><rect x="235.4" y="453" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="238.41" y="463.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (1,991,119 samples, 0.21%)</title><rect x="501.3" y="501" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="504.32" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (265,283 samples, 0.03%)</title><rect x="639.8" y="437" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="642.79" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (372,120 samples, 0.04%)</title><rect x="64.0" y="437" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="67.04" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;&amp;&amp; std::forward&lt;ns3::Ptr&lt;ns3::SpectrumModel const&gt; &gt; (196,233 samples, 0.02%)</title><rect x="402.0" y="501" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="405.05" y="511.5" ></text>
</g>
<g >
<title>ns3::Packet::~Packet (671,079 samples, 0.07%)</title><rect x="774.2" y="197" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="777.17" y="207.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_valptr (276,707 samples, 0.03%)</title><rect x="362.7" y="453" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="365.74" y="463.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (1,313,182 samples, 0.14%)</title><rect x="637.1" y="517" width="1.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="640.10" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (153,104 samples, 0.02%)</title><rect x="23.5" y="309" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="26.47" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (131,872 samples, 0.01%)</title><rect x="456.4" y="261" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="459.36" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::lower_bound (147,572 samples, 0.02%)</title><rect x="294.2" y="501" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="297.21" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__strip_reference_wrapper&lt;std::decay&lt;ns3::Scheduler::EventKey const&amp;&gt;::type&gt;::__type, std::__strip_reference_wrapper&lt;std::decay&lt;ns3::EventImpl* const&amp;&gt;::type&gt;::__type&gt; std::make_pair&lt;ns3::Scheduler::EventKey const&amp;, ns3::EventImpl* const&amp;&gt; (202,068 samples, 0.02%)</title><rect x="86.4" y="453" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="89.41" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet&gt; &gt;::Callback&lt;void  (20,383,935 samples, 2.10%)</title><rect x="422.3" y="485" width="16.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="425.31" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;, false&gt;::_Head_base&lt;std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;&gt; (318,126 samples, 0.03%)</title><rect x="667.0" y="325" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="669.98" y="335.5" ></text>
</g>
<g >
<title>ns3::DlHarqFeedbackLteControlMessage::GetDlHarqFeedback (1,880,893 samples, 0.19%)</title><rect x="443.9" y="357" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="446.95" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_S_key (1,228,544 samples, 0.13%)</title><rect x="321.1" y="437" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="324.09" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (375,672 samples, 0.04%)</title><rect x="83.9" y="405" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="86.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::_M_erase (2,754,625 samples, 0.28%)</title><rect x="289.8" y="517" width="2.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="292.81" y="527.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (2,698,693 samples, 0.28%)</title><rect x="31.2" y="405" width="2.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="34.17" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (186,011 samples, 0.02%)</title><rect x="776.3" y="341" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="779.26" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteUeMac::LcInfo, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::end (285,417 samples, 0.03%)</title><rect x="571.5" y="325" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="574.51" y="335.5" ></text>
</g>
<g >
<title>unsigned char* std::__relocate_a&lt;unsigned char*, unsigned char*, std::allocator&lt;unsigned char&gt; &gt; (306,347 samples, 0.03%)</title><rect x="597.8" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="600.79" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::_M_ptr (290,218 samples, 0.03%)</title><rect x="137.2" y="405" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="140.24" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocate (177,537 samples, 0.02%)</title><rect x="699.8" y="469" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="702.81" y="479.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (262,916 samples, 0.03%)</title><rect x="620.5" y="469" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="623.55" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::set (311,875 samples, 0.03%)</title><rect x="194.9" y="485" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="197.93" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_Auto_node::_M_insert (436,204 samples, 0.04%)</title><rect x="527.6" y="293" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="530.61" y="303.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator+= (189,127 samples, 0.02%)</title><rect x="405.5" y="517" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="408.47" y="527.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt;::Delete (3,444,708 samples, 0.36%)</title><rect x="75.3" y="485" width="2.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="78.31" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (916,115 samples, 0.09%)</title><rect x="193.1" y="469" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="196.09" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_ptr (242,288 samples, 0.02%)</title><rect x="179.1" y="437" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="182.14" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::vector (327,207 samples, 0.03%)</title><rect x="92.3" y="357" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="95.28" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_M_head (152,007 samples, 0.02%)</title><rect x="757.0" y="565" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="760.00" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::push_back (853,471 samples, 0.09%)</title><rect x="547.0" y="85" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="549.98" y="95.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::operator++ (223,776 samples, 0.02%)</title><rect x="369.6" y="517" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="372.63" y="527.5" ></text>
</g>
<g >
<title>ns3::BuildRarListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildRarListElement_s const*, std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt; &gt;, ns3::BuildRarListElement_s*&gt; (158,059 samples, 0.02%)</title><rect x="143.2" y="389" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="146.16" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (160,148 samples, 0.02%)</title><rect x="417.0" y="501" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="420.04" y="511.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (2,347,913 samples, 0.24%)</title><rect x="306.0" y="501" width="1.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="309.03" y="511.5" ></text>
</g>
<g >
<title>ns3::ByteTagIterator::Next (735,090 samples, 0.08%)</title><rect x="436.0" y="245" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="439.00" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (525,645 samples, 0.05%)</title><rect x="407.7" y="405" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="410.65" y="415.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_M_valptr (389,923 samples, 0.04%)</title><rect x="723.5" y="469" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="726.50" y="479.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (384,276 samples, 0.04%)</title><rect x="119.9" y="357" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="122.86" y="367.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlRlcBufferReq (2,515,374 samples, 0.26%)</title><rect x="25.4" y="325" width="2.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="28.42" y="335.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::CreateTxPowerSpectralDensity (1,022,169 samples, 0.11%)</title><rect x="111.4" y="501" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="114.35" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::find (922,442 samples, 0.10%)</title><rect x="57.8" y="485" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="60.77" y="495.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlCqiInfoReq (1,060,666 samples, 0.11%)</title><rect x="93.7" y="485" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="96.67" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_impl::_List_impl (387,766 samples, 0.04%)</title><rect x="630.3" y="453" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="633.30" y="463.5" ></text>
</g>
<g >
<title>double* std::fill_n&lt;double*, unsigned long, double&gt; (362,228 samples, 0.04%)</title><rect x="729.9" y="373" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="732.90" y="383.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;ns3::MacCeListElement_s*&gt;, ns3::MacCeListElement_s*&gt; (193,178 samples, 0.02%)</title><rect x="129.7" y="437" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="132.71" y="447.5" ></text>
</g>
<g >
<title>ns3::LteChunkProcessor::Start (605,461 samples, 0.06%)</title><rect x="728.1" y="501" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="731.07" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (287,229 samples, 0.03%)</title><rect x="521.5" y="341" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="524.49" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUeNetDevice&gt;::~Ptr (125,167 samples, 0.01%)</title><rect x="599.9" y="309" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="602.85" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (210,164 samples, 0.02%)</title><rect x="610.4" y="501" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="613.39" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (395,922 samples, 0.04%)</title><rect x="148.3" y="389" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="151.35" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (339,246 samples, 0.03%)</title><rect x="99.5" y="453" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="102.47" y="463.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::BuildBroadcastListElement_s*, ns3::BuildBroadcastListElement_s&gt; (197,106 samples, 0.02%)</title><rect x="145.3" y="437" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="148.29" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt; ns3::Create&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt; (1,801,965 samples, 0.19%)</title><rect x="342.6" y="517" width="1.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="345.57" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Rb_tree (2,374,517 samples, 0.24%)</title><rect x="58.6" y="501" width="1.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="61.61" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::operator (151,109 samples, 0.02%)</title><rect x="388.8" y="549" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="391.82" y="559.5" ></text>
</g>
<g >
<title> (451,603 samples, 0.05%)</title><rect x="328.8" y="485" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="331.75" y="495.5" ></text>
</g>
<g >
<title>ns3::LteUeMac::SendReportBufferStatus (15,163,076 samples, 1.56%)</title><rect x="685.3" y="517" width="12.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="688.25" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (155,299 samples, 0.02%)</title><rect x="35.5" y="773" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.54" y="783.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a1&lt;false, unsigned char const*, unsigned char*&gt; (262,899 samples, 0.03%)</title><rect x="688.0" y="373" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="690.97" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::end (265,370 samples, 0.03%)</title><rect x="246.0" y="453" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="249.04" y="463.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::GetReferenceCount (270,897 samples, 0.03%)</title><rect x="163.4" y="389" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="166.37" y="399.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (935,594 samples, 0.10%)</title><rect x="666.5" y="469" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="669.51" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (699,107 samples, 0.07%)</title><rect x="166.2" y="437" width="0.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="169.22" y="447.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_fill_n_a&lt;ns3::DlInfoListElement_s::HarqStatus_e*, unsigned long, ns3::DlInfoListElement_s::HarqStatus_e, ns3::DlInfoListElement_s::HarqStatus_e&gt; (295,111 samples, 0.03%)</title><rect x="511.1" y="517" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="514.06" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::operator (196,328 samples, 0.02%)</title><rect x="154.7" y="389" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="157.73" y="399.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt;::Delete (538,741 samples, 0.06%)</title><rect x="167.0" y="421" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="170.03" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::_M_erase (213,559 samples, 0.02%)</title><rect x="117.1" y="501" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="120.11" y="511.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (314,249 samples, 0.03%)</title><rect x="11.2" y="421" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="14.17" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::~Ptr (676,765 samples, 0.07%)</title><rect x="323.9" y="501" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="326.94" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Ptr (187,751 samples, 0.02%)</title><rect x="709.7" y="373" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="712.74" y="383.5" ></text>
</g>
<g >
<title>ns3::Packet::GetSize (244,662 samples, 0.03%)</title><rect x="152.6" y="389" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="155.57" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned short&gt;::allocate (360,140 samples, 0.04%)</title><rect x="480.0" y="213" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="482.95" y="223.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (234,294 samples, 0.02%)</title><rect x="510.0" y="469" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="512.98" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_create_storage (336,354 samples, 0.03%)</title><rect x="695.0" y="469" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="698.04" y="479.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (1,702,514 samples, 0.18%)</title><rect x="624.2" y="501" width="1.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="627.19" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (128,840 samples, 0.01%)</title><rect x="591.1" y="261" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="594.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator* (400,979 samples, 0.04%)</title><rect x="455.1" y="309" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="458.15" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::end (232,052 samples, 0.02%)</title><rect x="178.7" y="469" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="181.67" y="479.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::Write (197,148 samples, 0.02%)</title><rect x="31.0" y="389" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="34.01" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (428,286 samples, 0.04%)</title><rect x="188.3" y="421" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="191.32" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::end (190,575 samples, 0.02%)</title><rect x="286.9" y="485" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="289.93" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (2,988,991 samples, 0.31%)</title><rect x="536.6" y="309" width="2.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="539.55" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::push_back (3,370,357 samples, 0.35%)</title><rect x="210.5" y="485" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="213.51" y="495.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoReportBufferStatus (6,485,597 samples, 0.67%)</title><rect x="24.3" y="389" width="5.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="27.28" y="399.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (420,675 samples, 0.04%)</title><rect x="502.4" y="389" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="505.40" y="399.5" ></text>
</g>
<g >
<title>ns3::EventImpl::Invoke (22,443,594 samples, 2.31%)</title><rect x="17.2" y="757" width="18.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.17" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (750,825 samples, 0.08%)</title><rect x="501.7" y="389" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="504.74" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (195,190 samples, 0.02%)</title><rect x="623.4" y="501" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="626.42" y="511.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::~ObjectBase (196,060 samples, 0.02%)</title><rect x="20.6" y="325" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="23.58" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;* std::__copy_move_a2&lt;true, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*&gt; (2,402,205 samples, 0.25%)</title><rect x="349.7" y="453" width="2.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="352.74" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~_Vector_base (431,058 samples, 0.04%)</title><rect x="24.8" y="309" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="27.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (887,310 samples, 0.09%)</title><rect x="455.8" y="277" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="458.75" y="287.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetControlMessages (2,493,375 samples, 0.26%)</title><rect x="148.3" y="421" width="2.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="151.35" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_get_node (126,498 samples, 0.01%)</title><rect x="81.8" y="437" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="84.85" y="447.5" ></text>
</g>
<g >
<title>bool std::operator==&lt;double const&amp;, double const&amp;, double const&amp;, double const&amp;, double const&amp;, double const&amp;&gt; (2,394,490 samples, 0.25%)</title><rect x="747.1" y="517" width="1.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="750.12" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::__normal_iterator (155,092 samples, 0.02%)</title><rect x="375.9" y="517" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="378.87" y="527.5" ></text>
</g>
<g >
<title>ns3::EventImpl::EventImpl (154,551 samples, 0.02%)</title><rect x="708.2" y="469" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="711.17" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::pair (248,699 samples, 0.03%)</title><rect x="86.2" y="453" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="89.21" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::deallocate (190,332 samples, 0.02%)</title><rect x="674.2" y="389" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="677.16" y="399.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="725" width="4.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="14.17" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::~list (322,499 samples, 0.03%)</title><rect x="550.7" y="229" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="553.69" y="239.5" ></text>
</g>
<g >
<title>ns3::LteUeMac::DoReceivePhyPdu (4,367,304 samples, 0.45%)</title><rect x="435.0" y="341" width="3.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="438.01" y="351.5" ></text>
</g>
<g >
<title>ns3::Tag::Tag (229,496 samples, 0.02%)</title><rect x="489.3" y="533" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="492.30" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::ByteTagListData* const*, std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt; &gt;::base (196,916 samples, 0.02%)</title><rect x="30.3" y="341" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="33.28" y="351.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::NoOpComponentCarrierManager&gt;::ReportBufferStatus (1,019,985 samples, 0.11%)</title><rect x="17.9" y="389" width="0.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="20.88" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (75,398,758 samples, 7.77%)</title><rect x="516.0" y="501" width="60.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="518.95" y="511.5" >std::_..</text>
</g>
<g >
<title>unsigned short* std::__copy_move_a1&lt;false, unsigned short const*, unsigned short*&gt; (200,709 samples, 0.02%)</title><rect x="475.2" y="197" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="478.20" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::_M_lower_bound (556,603 samples, 0.06%)</title><rect x="28.7" y="309" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="31.66" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::Ptr (126,253 samples, 0.01%)</title><rect x="90.1" y="517" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="93.12" y="527.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;::operator (168,844 samples, 0.02%)</title><rect x="73.8" y="437" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="76.81" y="447.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*, unsigned short&gt; (658,154 samples, 0.07%)</title><rect x="521.0" y="325" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="523.96" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (299,870 samples, 0.03%)</title><rect x="119.4" y="501" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="122.38" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::base (126,294 samples, 0.01%)</title><rect x="719.3" y="405" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="722.31" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_List_base (236,451 samples, 0.02%)</title><rect x="162.0" y="405" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="165.05" y="415.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Deallocate (318,817 samples, 0.03%)</title><rect x="548.6" y="85" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="551.58" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::_M_lower_bound (639,618 samples, 0.07%)</title><rect x="429.7" y="245" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="432.74" y="255.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*, ns3::RlcPduListElement_s&gt; (214,687 samples, 0.02%)</title><rect x="101.6" y="389" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="104.59" y="399.5" ></text>
</g>
<g >
<title>ns3::LteInterference::ConditionallyEvaluateChunk (575,348 samples, 0.06%)</title><rect x="712.9" y="501" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="715.87" y="511.5" ></text>
</g>
<g >
<title>ns3::Buffer::Create (1,593,963 samples, 0.16%)</title><rect x="555.9" y="197" width="1.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="558.89" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::_M_valptr (328,108 samples, 0.03%)</title><rect x="221.8" y="421" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="224.83" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (670,068 samples, 0.07%)</title><rect x="655.0" y="421" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="657.99" y="431.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::CqiListElement_s (194,571 samples, 0.02%)</title><rect x="461.6" y="261" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="464.55" y="271.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s&gt; (5,104,143 samples, 0.53%)</title><rect x="257.8" y="485" width="4.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="260.82" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumModel, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumModel&gt; &gt;::Unref (233,271 samples, 0.02%)</title><rect x="744.0" y="533" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="746.96" y="543.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (521,712 samples, 0.05%)</title><rect x="501.9" y="357" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="504.92" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (379,832 samples, 0.04%)</title><rect x="700.0" y="517" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="702.96" y="527.5" ></text>
</g>
<g >
<title>__dynamic_cast (333,656 samples, 0.03%)</title><rect x="735.8" y="517" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="738.84" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; const&amp;&gt; (194,069 samples, 0.02%)</title><rect x="104.6" y="325" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="107.61" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_Rb_tree_const_iterator (508,100 samples, 0.05%)</title><rect x="766.9" y="677" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="769.86" y="687.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (324,769 samples, 0.03%)</title><rect x="611.9" y="421" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="614.94" y="431.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (245,134 samples, 0.03%)</title><rect x="428.0" y="261" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="430.97" y="271.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (501,720 samples, 0.05%)</title><rect x="19.0" y="389" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="21.95" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::~Ptr (611,218 samples, 0.06%)</title><rect x="609.8" y="485" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="612.77" y="495.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (150,833 samples, 0.02%)</title><rect x="163.7" y="405" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="166.68" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::push_back (392,327 samples, 0.04%)</title><rect x="452.2" y="69" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="455.17" y="79.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (363,863 samples, 0.04%)</title><rect x="718.5" y="405" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="721.54" y="415.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (194,393 samples, 0.02%)</title><rect x="637.7" y="485" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="640.66" y="495.5" ></text>
</g>
<g >
<title>double* std::__niter_base&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (236,463 samples, 0.02%)</title><rect x="647.9" y="373" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="650.92" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::DlInfoListElement_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::end (345,899 samples, 0.04%)</title><rect x="508.6" y="549" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="511.56" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_create_storage (158,373 samples, 0.02%)</title><rect x="203.4" y="357" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="206.35" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_get_insert_unique_pos (339,044 samples, 0.03%)</title><rect x="293.7" y="469" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="296.75" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::Unref (538,741 samples, 0.06%)</title><rect x="167.0" y="437" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="170.03" y="447.5" ></text>
</g>
<g >
<title>std::operator== (152,835 samples, 0.02%)</title><rect x="394.8" y="549" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="397.76" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (595,644 samples, 0.06%)</title><rect x="233.1" y="389" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="236.14" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::find (2,516,735 samples, 0.26%)</title><rect x="432.8" y="325" width="2.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="435.79" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, bool&gt; std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::emplace&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (2,393,725 samples, 0.25%)</title><rect x="331.3" y="501" width="2.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="334.34" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::push_back (686,315 samples, 0.07%)</title><rect x="68.8" y="437" width="0.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="71.80" y="447.5" ></text>
</g>
<g >
<title>ns3::Time::ToInteger (191,170 samples, 0.02%)</title><rect x="14.0" y="357" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="16.98" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (1,969,038 samples, 0.20%)</title><rect x="610.3" y="549" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="613.26" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::find (1,508,586 samples, 0.16%)</title><rect x="181.3" y="453" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="184.29" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_lower_bound (2,003,615 samples, 0.21%)</title><rect x="273.8" y="437" width="1.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="276.84" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::allocate (352,577 samples, 0.04%)</title><rect x="692.8" y="405" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="695.85" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator (158,925 samples, 0.02%)</title><rect x="744.7" y="549" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="747.75" y="559.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::Copy (1,306,624 samples, 0.13%)</title><rect x="118.0" y="517" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="121.00" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::operator[] (193,866 samples, 0.02%)</title><rect x="173.3" y="437" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="176.28" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move_a2&lt;true, ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (458,200 samples, 0.05%)</title><rect x="119.8" y="437" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="122.80" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (966,311 samples, 0.10%)</title><rect x="407.5" y="485" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="410.53" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_addr (422,566 samples, 0.04%)</title><rect x="759.9" y="645" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="762.87" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (163,911 samples, 0.02%)</title><rect x="87.5" y="357" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="90.46" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (159,922 samples, 0.02%)</title><rect x="497.8" y="501" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="500.82" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (380,058 samples, 0.04%)</title><rect x="340.9" y="341" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="343.87" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::AntennaModel&gt;::operator= (192,452 samples, 0.02%)</title><rect x="342.4" y="517" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="345.41" y="527.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedDlConfigIndParameters::~SchedDlConfigIndParameters (157,347 samples, 0.02%)</title><rect x="174.8" y="485" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="177.75" y="495.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_List_iterator (165,665 samples, 0.02%)</title><rect x="550.5" y="213" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="553.52" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::operator* (614,873 samples, 0.06%)</title><rect x="348.1" y="533" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="351.07" y="543.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (410,769 samples, 0.04%)</title><rect x="653.7" y="373" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="656.68" y="383.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (1,218,895 samples, 0.13%)</title><rect x="283.5" y="485" width="1.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="286.52" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (494,088 samples, 0.05%)</title><rect x="668.4" y="453" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="671.44" y="463.5" ></text>
</g>
<g >
<title>unsigned char* std::__niter_base&lt;unsigned char*&gt; (151,102 samples, 0.02%)</title><rect x="597.9" y="213" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="600.91" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_M_check_len (197,154 samples, 0.02%)</title><rect x="209.8" y="453" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="212.75" y="463.5" ></text>
</g>
<g >
<title>ns3::LteMiErrorModel::GetPcfichPdcchError (1,017,990 samples, 0.10%)</title><rect x="607.7" y="549" width="0.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="610.74" y="559.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetDevice (278,749 samples, 0.03%)</title><rect x="643.6" y="517" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="646.58" y="527.5" ></text>
</g>
<g >
<title>unsigned char const* std::__niter_base&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (262,111 samples, 0.03%)</title><rect x="126.9" y="293" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="129.94" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (388,127 samples, 0.04%)</title><rect x="674.0" y="517" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="677.00" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::max_size (240,471 samples, 0.02%)</title><rect x="460.0" y="245" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="463.04" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt; std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, void&gt; (5,119,434 samples, 0.53%)</title><rect x="124.2" y="517" width="4.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="127.17" y="527.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s::UlInfoListElement_s (208,096 samples, 0.02%)</title><rect x="440.5" y="277" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="443.51" y="287.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::DoPeekImpl (161,751 samples, 0.02%)</title><rect x="577.1" y="501" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="580.13" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (274,415 samples, 0.03%)</title><rect x="389.1" y="549" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="392.07" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::~_Rb_tree (141,564 samples, 0.01%)</title><rect x="195.2" y="469" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="198.18" y="479.5" ></text>
</g>
<g >
<title>atan2f32x (314,439 samples, 0.03%)</title><rect x="65.7" y="485" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="68.68" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (148,008 samples, 0.02%)</title><rect x="93.8" y="437" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="96.76" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (206,232 samples, 0.02%)</title><rect x="527.4" y="149" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="530.44" y="159.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (281,908 samples, 0.03%)</title><rect x="57.1" y="405" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="60.07" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (198,351 samples, 0.02%)</title><rect x="679.1" y="501" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="682.10" y="511.5" ></text>
</g>
<g >
<title>ns3::UlDciListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlDciListElement_s const*, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, ns3::UlDciListElement_s*&gt; (160,843 samples, 0.02%)</title><rect x="228.2" y="421" width="0.1" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="231.19" y="431.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (1,831,024 samples, 0.19%)</title><rect x="711.1" y="437" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="714.07" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::operator++ (126,827 samples, 0.01%)</title><rect x="569.2" y="325" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="572.22" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::__normal_iterator (271,510 samples, 0.03%)</title><rect x="382.5" y="501" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="385.47" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::lower_bound (163,786 samples, 0.02%)</title><rect x="82.5" y="485" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="85.49" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1,570,544 samples, 0.16%)</title><rect x="617.0" y="485" width="1.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="620.04" y="495.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (605,341 samples, 0.06%)</title><rect x="729.7" y="421" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="732.73" y="431.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*, ns3::VendorSpecificListElement_s&gt; (425,833 samples, 0.04%)</title><rect x="144.0" y="437" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="147.01" y="447.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (316,257 samples, 0.03%)</title><rect x="408.6" y="517" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="411.59" y="527.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (3,302,857 samples, 0.34%)</title><rect x="526.2" y="341" width="2.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="529.23" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::size (149,208 samples, 0.02%)</title><rect x="219.5" y="421" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="222.54" y="431.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__do_uninit_copy&lt;ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s*&gt; (508,420 samples, 0.05%)</title><rect x="206.5" y="421" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="209.53" y="431.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (1,796,083 samples, 0.19%)</title><rect x="501.5" y="469" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="504.48" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (151,942 samples, 0.02%)</title><rect x="99.2" y="469" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="102.20" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::splice (375,324 samples, 0.04%)</title><rect x="346.6" y="453" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="349.64" y="463.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (331,747 samples, 0.03%)</title><rect x="308.3" y="437" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="311.31" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::deallocate (124,900 samples, 0.01%)</title><rect x="605.4" y="437" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="608.43" y="447.5" ></text>
</g>
<g >
<title>cfree (218,014 samples, 0.02%)</title><rect x="764.7" y="581" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="767.74" y="591.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (273,884 samples, 0.03%)</title><rect x="383.2" y="501" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="386.17" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::VendorSpecificListElement_s*&gt; (198,417 samples, 0.02%)</title><rect x="25.2" y="293" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="28.20" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::push_back (306,330 samples, 0.03%)</title><rect x="100.7" y="469" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="103.75" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; &gt; (331,514 samples, 0.03%)</title><rect x="206.2" y="469" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="209.16" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModel (154,473 samples, 0.02%)</title><rect x="656.2" y="517" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="659.24" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (162,262 samples, 0.02%)</title><rect x="378.5" y="277" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="381.49" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::operator= (416,467 samples, 0.04%)</title><rect x="17.9" y="277" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="20.95" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (1,489,049 samples, 0.15%)</title><rect x="331.5" y="469" width="1.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="334.51" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::destroy&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; (274,522 samples, 0.03%)</title><rect x="291.8" y="501" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="294.80" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (485,199 samples, 0.05%)</title><rect x="648.7" y="469" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="651.67" y="479.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a1&lt;false, double const*, double*&gt; (169,338 samples, 0.02%)</title><rect x="72.4" y="373" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="75.41" y="383.5" ></text>
</g>
<g >
<title>ns3::UeSelected_s::operator= (384,654 samples, 0.04%)</title><rect x="134.5" y="469" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="137.52" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (156,589 samples, 0.02%)</title><rect x="162.1" y="373" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="165.11" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_impl::_Vector_impl (303,807 samples, 0.03%)</title><rect x="514.3" y="517" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="517.26" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::push_back (303,575 samples, 0.03%)</title><rect x="456.5" y="309" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="459.53" y="319.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (161,884 samples, 0.02%)</title><rect x="182.9" y="485" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="185.88" y="495.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;unsigned short const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, unsigned short const&amp;&gt; (313,540 samples, 0.03%)</title><rect x="191.4" y="341" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="194.42" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;&gt; std::forward_as_tuple&lt;&gt; (471,585 samples, 0.05%)</title><rect x="46.6" y="613" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="49.63" y="623.5" ></text>
</g>
<g >
<title>ns3::Packet::~Packet (351,823 samples, 0.04%)</title><rect x="612.9" y="357" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="615.93" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt; &gt;::_M_begin (163,406 samples, 0.02%)</title><rect x="458.1" y="245" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="461.08" y="255.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::~DlInfoListElement_s (617,189 samples, 0.06%)</title><rect x="132.6" y="405" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="135.59" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::lower_bound (191,851 samples, 0.02%)</title><rect x="96.5" y="389" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="99.48" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::vector (411,592 samples, 0.04%)</title><rect x="107.3" y="373" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="110.29" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::PacketMetadata::Data*, std::allocator&lt;ns3::PacketMetadata::Data*&gt; &gt;::end (150,854 samples, 0.02%)</title><rect x="15.2" y="325" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="18.24" y="335.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::Packet&gt;::Delete (351,823 samples, 0.04%)</title><rect x="612.9" y="373" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="615.93" y="383.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; (229,070 samples, 0.02%)</title><rect x="139.8" y="453" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="142.78" y="463.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt;, ns3::MacCeListElement_s*&gt; (806,979 samples, 0.08%)</title><rect x="128.9" y="437" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="131.87" y="447.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (242,975 samples, 0.03%)</title><rect x="27.6" y="341" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="30.56" y="351.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (163,744 samples, 0.02%)</title><rect x="453.2" y="69" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="456.25" y="79.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (683,830 samples, 0.07%)</title><rect x="444.1" y="293" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="447.11" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (129,184 samples, 0.01%)</title><rect x="579.8" y="389" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="582.83" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (534,094 samples, 0.06%)</title><rect x="293.7" y="485" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="296.68" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (186,374 samples, 0.02%)</title><rect x="657.3" y="501" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="660.34" y="511.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (373,826 samples, 0.04%)</title><rect x="537.4" y="261" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="540.41" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (205,426 samples, 0.02%)</title><rect x="398.1" y="501" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="401.12" y="511.5" ></text>
</g>
<g >
<title>unsigned short* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (422,036 samples, 0.04%)</title><rect x="217.6" y="389" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="220.57" y="399.5" ></text>
</g>
<g >
<title>ns3::Vector3D::GetLength (155,917 samples, 0.02%)</title><rect x="642.4" y="485" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="645.38" y="495.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (245,024 samples, 0.03%)</title><rect x="516.3" y="469" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="519.25" y="479.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s*&gt; (550,039 samples, 0.06%)</title><rect x="206.5" y="437" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="209.50" y="447.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (650,532 samples, 0.07%)</title><rect x="687.7" y="389" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="690.72" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (1,085,935 samples, 0.11%)</title><rect x="241.6" y="485" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="244.62" y="495.5" ></text>
</g>
<g >
<title>unsigned char* std::__relocate_a&lt;unsigned char*, unsigned char*, std::allocator&lt;unsigned char&gt; &gt; (343,086 samples, 0.04%)</title><rect x="694.1" y="437" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="697.06" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::deallocate (197,176 samples, 0.02%)</title><rect x="693.2" y="421" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="696.23" y="431.5" ></text>
</g>
<g >
<title>decltype  (292,231 samples, 0.03%)</title><rect x="440.4" y="293" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="443.44" y="303.5" ></text>
</g>
<g >
<title>ns3::Buffer::Data* const&amp; std::forward&lt;ns3::Buffer::Data* const&amp;&gt; (259,311 samples, 0.03%)</title><rect x="546.2" y="53" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="549.17" y="63.5" ></text>
</g>
<g >
<title>ns3::operator+ (628,145 samples, 0.06%)</title><rect x="279.1" y="501" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="282.06" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteSpectrumPhy*&gt;::tuple&lt;ns3::LteSpectrumPhy*&amp;, true, true&gt; (668,783 samples, 0.07%)</title><rect x="306.3" y="437" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="309.31" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt;::_Vector_base (266,878 samples, 0.03%)</title><rect x="227.7" y="437" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="230.69" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt; &gt;::_M_begin (235,637 samples, 0.02%)</title><rect x="187.1" y="453" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="190.07" y="463.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="613" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="18.45" y="623.5" ></text>
</g>
<g >
<title>ns3::TimeStep (156,551 samples, 0.02%)</title><rect x="408.7" y="485" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="411.69" y="495.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*&gt; (411,592 samples, 0.04%)</title><rect x="107.3" y="437" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="110.29" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::empty (264,685 samples, 0.03%)</title><rect x="285.2" y="533" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="288.17" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_insert_node (433,572 samples, 0.04%)</title><rect x="335.3" y="373" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="338.32" y="383.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (197,197 samples, 0.02%)</title><rect x="646.6" y="373" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="649.59" y="383.5" ></text>
</g>
<g >
<title>void  (323,953 samples, 0.03%)</title><rect x="581.2" y="357" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="584.15" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::~vector (264,107 samples, 0.03%)</title><rect x="131.0" y="501" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="134.03" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (193,791 samples, 0.02%)</title><rect x="162.6" y="357" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="165.60" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::_M_head (204,189 samples, 0.02%)</title><rect x="753.0" y="565" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="756.04" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::vector (422,512 samples, 0.04%)</title><rect x="174.2" y="469" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="177.16" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (159,784 samples, 0.02%)</title><rect x="478.2" y="293" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="481.18" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (302,486 samples, 0.03%)</title><rect x="680.1" y="485" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="683.09" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Ptr (640,714 samples, 0.07%)</title><rect x="360.6" y="485" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="363.62" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_mbegin (247,566 samples, 0.03%)</title><rect x="529.2" y="293" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="532.22" y="303.5" ></text>
</g>
<g >
<title>ns3::DlCqiLteControlMessage::DlCqiLteControlMessage (999,999 samples, 0.10%)</title><rect x="592.3" y="277" width="0.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="595.26" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::~_Vector_base (343,953 samples, 0.04%)</title><rect x="351.2" y="373" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="354.24" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_base (157,554 samples, 0.02%)</title><rect x="132.1" y="485" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="135.12" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::vector (124,541 samples, 0.01%)</title><rect x="69.9" y="405" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="72.91" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Ptr (185,459 samples, 0.02%)</title><rect x="118.2" y="469" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="121.20" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::pair&lt;unsigned short const&amp;, 0ul&gt; (537,895 samples, 0.06%)</title><rect x="191.4" y="357" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="194.39" y="367.5" ></text>
</g>
<g >
<title>unsigned char* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (650,532 samples, 0.07%)</title><rect x="687.7" y="405" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="690.72" y="415.5" ></text>
</g>
<g >
<title>void std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (226,433 samples, 0.02%)</title><rect x="121.9" y="517" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="124.94" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::LteUePhy::PssElement, std::allocator&lt;ns3::LteUePhy::PssElement&gt; &gt;::push_back (194,530 samples, 0.02%)</title><rect x="726.2" y="325" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="729.19" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast (124,834 samples, 0.01%)</title><rect x="599.7" y="293" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="602.72" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::begin (899,872 samples, 0.09%)</title><rect x="760.7" y="693" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="763.66" y="703.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;int*&gt; (265,597 samples, 0.03%)</title><rect x="506.1" y="373" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="509.07" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (240,017 samples, 0.02%)</title><rect x="54.0" y="501" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="56.97" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (1,751,702 samples, 0.18%)</title><rect x="41.9" y="661" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="44.91" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_drop_node (312,339 samples, 0.03%)</title><rect x="394.4" y="405" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="397.38" y="415.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (160,104 samples, 0.02%)</title><rect x="312.5" y="485" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="315.54" y="495.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (407,753 samples, 0.04%)</title><rect x="584.8" y="261" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="587.79" y="271.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__copy_move_a2&lt;false, ns3::VendorSpecificListElement_s const*, ns3::VendorSpecificListElement_s*&gt; (143,131 samples, 0.01%)</title><rect x="26.1" y="229" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="29.08" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_destroy_node (269,825 samples, 0.03%)</title><rect x="394.4" y="389" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="397.38" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp; std::__get_helper&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&gt; (584,178 samples, 0.06%)</title><rect x="757.5" y="581" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="760.53" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, ns3::LteSpectrumPhy*, false&gt;::_Head_base&lt;ns3::LteSpectrumPhy*&amp;&gt; (270,257 samples, 0.03%)</title><rect x="306.6" y="405" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="309.63" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt;::Ptr (124,599 samples, 0.01%)</title><rect x="534.0" y="341" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="537.04" y="351.5" ></text>
</g>
<g >
<title>ns3::Packet::GetSize (227,004 samples, 0.02%)</title><rect x="627.9" y="517" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="630.89" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::RarLteControlMessage::Rar, std::allocator&lt;ns3::RarLteControlMessage::Rar&gt; &gt;::list (154,430 samples, 0.02%)</title><rect x="166.9" y="421" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="169.88" y="431.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (38,051,595 samples, 3.92%)</title><rect x="91.7" y="549" width="30.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="94.73" y="559.5" >ns..</text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_erase (7,179,158 samples, 0.74%)</title><rect x="376.5" y="517" width="5.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="379.54" y="527.5" ></text>
</g>
<g >
<title>unsigned short* std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; (142,016 samples, 0.01%)</title><rect x="140.6" y="453" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="143.59" y="463.5" ></text>
</g>
<g >
<title>decltype  (184,474 samples, 0.02%)</title><rect x="293.3" y="421" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="296.35" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::_M_valptr (290,218 samples, 0.03%)</title><rect x="137.2" y="421" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="140.24" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::~tuple (153,418 samples, 0.02%)</title><rect x="109.5" y="469" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="112.54" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::operator[] (154,833 samples, 0.02%)</title><rect x="633.6" y="517" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="636.63" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (162,410 samples, 0.02%)</title><rect x="733.2" y="421" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="736.17" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;::_M_ptr (148,167 samples, 0.02%)</title><rect x="184.4" y="453" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="187.45" y="463.5" ></text>
</g>
<g >
<title>ns3::Node::GetId (152,268 samples, 0.02%)</title><rect x="322.6" y="501" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="325.62" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_get_node (164,168 samples, 0.02%)</title><rect x="611.2" y="469" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="614.22" y="479.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt; &gt; (192,569 samples, 0.02%)</title><rect x="93.2" y="485" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="96.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::end (202,904 samples, 0.02%)</title><rect x="462.7" y="341" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="465.65" y="351.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (249,391 samples, 0.03%)</title><rect x="591.6" y="197" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="594.63" y="207.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp; std::_Mu&lt;std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;, false, false&gt;::operator (246,808 samples, 0.03%)</title><rect x="751.7" y="597" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="754.72" y="607.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::SpectrumSignalParameters (1,366,858 samples, 0.14%)</title><rect x="669.4" y="501" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="672.44" y="511.5" ></text>
</g>
<g >
<title>unsigned long* std::__copy_move_a&lt;false, unsigned long*, unsigned long*&gt; (459,509 samples, 0.05%)</title><rect x="199.7" y="405" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="202.67" y="415.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::Umul (203,418 samples, 0.02%)</title><rect x="389.8" y="469" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="392.76" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::allocate (474,197 samples, 0.05%)</title><rect x="237.5" y="325" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="240.55" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (1,193,687 samples, 0.12%)</title><rect x="768.4" y="725" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="771.36" y="735.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::MobilityModel const&gt;, ns3::Ptr&lt;ns3::MobilityModel const&gt;, double, double, double, double&gt;::operator (360,752 samples, 0.04%)</title><rect x="746.3" y="549" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="749.35" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (778,661 samples, 0.08%)</title><rect x="609.6" y="533" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="612.63" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_valptr (264,202 samples, 0.03%)</title><rect x="135.2" y="469" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="138.23" y="479.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (1,515,135 samples, 0.16%)</title><rect x="340.0" y="469" width="1.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="342.96" y="479.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a1&lt;false, int const*, int*&gt; (237,769 samples, 0.02%)</title><rect x="399.2" y="453" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="402.18" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Ptr (512,963 samples, 0.05%)</title><rect x="751.1" y="565" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="754.14" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_begin (516,673 samples, 0.05%)</title><rect x="522.8" y="309" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="525.84" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_S_key (163,137 samples, 0.02%)</title><rect x="432.4" y="277" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="435.41" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt;::construct&lt;ns3::UlDciLteControlMessage, ns3::UlDciLteControlMessage const&amp;&gt; (468,430 samples, 0.05%)</title><rect x="288.1" y="453" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="291.08" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (284,703 samples, 0.03%)</title><rect x="478.0" y="277" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="480.95" y="287.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (221,466 samples, 0.02%)</title><rect x="116.3" y="469" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="119.33" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::~set (141,564 samples, 0.01%)</title><rect x="195.2" y="485" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="198.18" y="495.5" ></text>
</g>
<g >
<title>ns3::UniformRandomVariable::GetValue (968,608 samples, 0.10%)</title><rect x="608.7" y="533" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="611.72" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_end (165,287 samples, 0.02%)</title><rect x="523.3" y="309" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="526.25" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt; &gt;::find (1,417,571 samples, 0.15%)</title><rect x="458.0" y="261" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="461.05" y="271.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy*&amp; std::_Mu&lt;ns3::LteEnbPhy*, false, false&gt;::operator (495,567 samples, 0.05%)</title><rect x="48.8" y="597" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="51.76" y="607.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (314,249 samples, 0.03%)</title><rect x="11.2" y="437" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="14.17" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::operator* (287,801 samples, 0.03%)</title><rect x="522.2" y="341" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="525.17" y="351.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (356,634 samples, 0.04%)</title><rect x="442.7" y="245" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="445.72" y="255.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (196,986 samples, 0.02%)</title><rect x="326.0" y="485" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="328.98" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_insert (470,384 samples, 0.05%)</title><rect x="335.3" y="389" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="338.29" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::vector (274,244 samples, 0.03%)</title><rect x="174.5" y="469" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="177.50" y="479.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (894,532 samples, 0.09%)</title><rect x="440.2" y="389" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="443.22" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (685,962 samples, 0.07%)</title><rect x="687.7" y="437" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="690.70" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; &gt; (1,411,841 samples, 0.15%)</title><rect x="621.5" y="485" width="1.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="624.55" y="495.5" ></text>
</g>
<g >
<title>ns3::operator== (3,609,110 samples, 0.37%)</title><rect x="747.1" y="533" width="2.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="750.08" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_deallocate (154,926 samples, 0.02%)</title><rect x="484.0" y="469" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="486.97" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (762,055 samples, 0.08%)</title><rect x="242.8" y="405" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="245.80" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (644,555 samples, 0.07%)</title><rect x="83.0" y="405" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="86.02" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (160,870 samples, 0.02%)</title><rect x="482.6" y="293" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="485.63" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (1,146,176 samples, 0.12%)</title><rect x="647.2" y="405" width="0.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="650.19" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::deallocate (124,900 samples, 0.01%)</title><rect x="605.4" y="453" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="608.43" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::push_back (1,354,090 samples, 0.14%)</title><rect x="214.6" y="485" width="1.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="217.64" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::cbegin (188,357 samples, 0.02%)</title><rect x="636.0" y="517" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="638.98" y="527.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ConstructSelf (3,133,932 samples, 0.32%)</title><rect x="540.4" y="277" width="2.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="543.39" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteUePhy*, unsigned int, unsigned int&gt;::tuple&lt;ns3::LteUePhy*&amp;, unsigned int&amp;, unsigned int&amp;, true, true&gt; (1,377,602 samples, 0.14%)</title><rect x="617.1" y="469" width="1.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="620.13" y="479.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::SetSubChannelsForTransmission (8,727,549 samples, 0.90%)</title><rect x="673.8" y="549" width="7.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="676.79" y="559.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::operator (166,879 samples, 0.02%)</title><rect x="523.9" y="277" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="526.94" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_destroy_node (192,269 samples, 0.02%)</title><rect x="776.8" y="357" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="779.82" y="367.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (152,933 samples, 0.02%)</title><rect x="178.0" y="469" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="181.04" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_impl::_Vector_impl (302,930 samples, 0.03%)</title><rect x="447.1" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="450.09" y="239.5" ></text>
</g>
<g >
<title>ns3::Time::GetTimeStep (451,024 samples, 0.05%)</title><rect x="338.8" y="453" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="341.83" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*&gt; (2,293,325 samples, 0.24%)</title><rect x="349.8" y="437" width="1.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="352.83" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned short*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::__normal_iterator (164,811 samples, 0.02%)</title><rect x="479.3" y="261" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="482.31" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, double&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, double&gt; &gt; &gt;::_S_key (980,363 samples, 0.10%)</title><rect x="295.1" y="485" width="0.8" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="298.13" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::_M_lower_bound (601,582 samples, 0.06%)</title><rect x="463.0" y="325" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="466.00" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_List_base (302,422 samples, 0.03%)</title><rect x="110.0" y="501" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="113.00" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::operator (206,181 samples, 0.02%)</title><rect x="69.4" y="453" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="72.45" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Copy&lt;ns3::SpectrumValue&gt; (1,772,766 samples, 0.18%)</title><rect x="654.4" y="517" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="657.44" y="527.5" ></text>
</g>
<g >
<title>ns3::LteInterference::StartRx (194,219 samples, 0.02%)</title><rect x="734.4" y="517" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="737.43" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (979,889 samples, 0.10%)</title><rect x="526.8" y="245" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="529.82" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_end (205,386 samples, 0.02%)</title><rect x="529.4" y="309" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="532.42" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (361,973 samples, 0.04%)</title><rect x="666.2" y="421" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="669.22" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Acquire (274,749 samples, 0.03%)</title><rect x="39.1" y="693" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="42.14" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (780,494 samples, 0.08%)</title><rect x="584.5" y="277" width="0.6" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="587.49" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::RarLteControlMessage&gt; ns3::Create&lt;ns3::RarLteControlMessage&gt; (306,535 samples, 0.03%)</title><rect x="166.8" y="453" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="169.79" y="463.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (153,418 samples, 0.02%)</title><rect x="109.5" y="485" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="112.54" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (210,243 samples, 0.02%)</title><rect x="576.4" y="325" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="579.43" y="335.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; const&amp;&gt; (194,069 samples, 0.02%)</title><rect x="104.6" y="341" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="107.61" y="351.5" ></text>
</g>
<g >
<title>operator new (161,120 samples, 0.02%)</title><rect x="564.3" y="101" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="567.27" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_lower_bound (669,791 samples, 0.07%)</title><rect x="507.7" y="517" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="510.67" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_realloc_insert&lt;unsigned short&gt; (376,292 samples, 0.04%)</title><rect x="102.2" y="437" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="105.17" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_copy (2,075,881 samples, 0.21%)</title><rect x="58.7" y="485" width="1.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="61.71" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (152,827 samples, 0.02%)</title><rect x="667.8" y="277" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="670.83" y="287.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (489,523 samples, 0.05%)</title><rect x="524.9" y="309" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="527.94" y="319.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (18,815,322 samples, 1.94%)</title><rect x="468.6" y="437" width="15.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="471.65" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteEnbPhy*&gt;::_Tuple_impl&lt;ns3::LteEnbPhy*&amp;&gt; (267,164 samples, 0.03%)</title><rect x="282.8" y="453" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="285.79" y="463.5" ></text>
</g>
<g >
<title>decltype (238,924 samples, 0.02%)</title><rect x="36.6" y="693" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="39.64" y="703.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::SetSubChannelsForTransmission (151,318 samples, 0.02%)</title><rect x="614.4" y="549" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="617.41" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (670,068 samples, 0.07%)</title><rect x="655.0" y="405" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="657.99" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::construct&lt;ns3::ByteTagListData*, ns3::ByteTagListData* const&amp;&gt; (686,477 samples, 0.07%)</title><rect x="547.1" y="69" width="0.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="550.11" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt;::_M_valptr (157,811 samples, 0.02%)</title><rect x="28.8" y="277" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="31.75" y="287.5" ></text>
</g>
<g >
<title>unsigned long* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned long, unsigned long&gt; (151,080 samples, 0.02%)</title><rect x="199.8" y="357" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="202.77" y="367.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (483,075 samples, 0.05%)</title><rect x="303.5" y="469" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="306.53" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_check_len (765,012 samples, 0.08%)</title><rect x="480.4" y="261" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="483.44" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::_M_lower_bound (497,417 samples, 0.05%)</title><rect x="81.2" y="485" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="84.22" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (233,935 samples, 0.02%)</title><rect x="109.0" y="437" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="111.99" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt; &gt;::allocate (199,176 samples, 0.02%)</title><rect x="293.2" y="405" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="296.16" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::deallocate (158,232 samples, 0.02%)</title><rect x="501.2" y="485" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="504.20" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;::operator (160,407 samples, 0.02%)</title><rect x="328.6" y="501" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="331.59" y="511.5" ></text>
</g>
<g >
<title>ns3::CallbackImplBase* ns3::PeekPointer&lt;ns3::CallbackImplBase&gt; (161,751 samples, 0.02%)</title><rect x="577.1" y="485" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="580.13" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::allocate (380,371 samples, 0.04%)</title><rect x="363.3" y="437" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="366.34" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::allocate (190,227 samples, 0.02%)</title><rect x="191.1" y="373" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="194.05" y="383.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (162,598 samples, 0.02%)</title><rect x="425.5" y="213" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="428.50" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::find (2,397,524 samples, 0.25%)</title><rect x="432.9" y="309" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="435.89" y="319.5" ></text>
</g>
<g >
<title>unsigned char const* std::__niter_base&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (192,782 samples, 0.02%)</title><rect x="687.8" y="373" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="690.82" y="383.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::__copy_move_a1&lt;false, std::_Bit_iterator, std::_Bit_iterator&gt; (338,164 samples, 0.03%)</title><rect x="197.6" y="405" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="200.59" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt;::allocate (283,919 samples, 0.03%)</title><rect x="444.9" y="245" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="447.88" y="255.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__uninitialized_copy_a&lt;std::move_iterator&lt;ns3::CqiListElement_s*&gt;, ns3::CqiListElement_s*, ns3::CqiListElement_s&gt; (253,339 samples, 0.03%)</title><rect x="127.4" y="469" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="130.45" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (312,863 samples, 0.03%)</title><rect x="142.7" y="421" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="145.72" y="431.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::VendorSpecificListElement_s&gt; (234,807 samples, 0.02%)</title><rect x="263.9" y="325" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="266.87" y="335.5" ></text>
</g>
<g >
<title>ns3::Object::Check (344,145 samples, 0.04%)</title><rect x="163.3" y="405" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="166.31" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::lower_bound (308,342 samples, 0.03%)</title><rect x="659.6" y="501" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="662.62" y="511.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const&amp;&gt; (3,097,204 samples, 0.32%)</title><rect x="210.7" y="469" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="213.73" y="479.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::~LteSpectrumSignalParametersDlCtrlFrame (191,802 samples, 0.02%)</title><rect x="344.3" y="453" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="347.27" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (525,645 samples, 0.05%)</title><rect x="407.7" y="453" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="410.65" y="463.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Deallocate (1,415,797 samples, 0.15%)</title><rect x="546.8" y="101" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="549.79" y="111.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::~DlInfoListElement_s (429,894 samples, 0.04%)</title><rect x="445.6" y="325" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="448.63" y="335.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (273,321 samples, 0.03%)</title><rect x="331.9" y="405" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="334.88" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp; std::forward&lt;ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp;&gt; (200,391 samples, 0.02%)</title><rect x="646.0" y="421" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="649.00" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (240,996 samples, 0.02%)</title><rect x="716.8" y="421" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="719.79" y="431.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (310,660 samples, 0.03%)</title><rect x="164.4" y="389" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="167.38" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a2&lt;false, unsigned char const*, unsigned char*&gt; (149,127 samples, 0.02%)</title><rect x="442.4" y="197" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="445.44" y="207.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::uninitialized_fill_n&lt;ns3::DlInfoListElement_s::HarqStatus_e*, unsigned long, ns3::DlInfoListElement_s::HarqStatus_e&gt; (233,279 samples, 0.02%)</title><rect x="511.1" y="501" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="514.11" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::~Ptr (200,937 samples, 0.02%)</title><rect x="409.2" y="517" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="412.20" y="527.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (1,117,487 samples, 0.12%)</title><rect x="301.1" y="405" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="304.06" y="415.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator (125,698 samples, 0.01%)</title><rect x="85.6" y="373" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="88.58" y="383.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (281,874 samples, 0.03%)</title><rect x="87.0" y="469" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="90.00" y="479.5" ></text>
</g>
<g >
<title>ns3::UlCqi_s::UlCqi_s (1,442,850 samples, 0.15%)</title><rect x="474.2" y="309" width="1.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="477.23" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::Ptr (560,187 samples, 0.06%)</title><rect x="750.7" y="565" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="753.69" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (567,494 samples, 0.06%)</title><rect x="707.2" y="437" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="710.21" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (998,649 samples, 0.10%)</title><rect x="191.2" y="405" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="194.23" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (187,880 samples, 0.02%)</title><rect x="97.4" y="421" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="100.38" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_node (219,715 samples, 0.02%)</title><rect x="661.1" y="373" width="0.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="664.05" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_S_relocate (387,343 samples, 0.04%)</title><rect x="481.1" y="261" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="484.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_end (202,902 samples, 0.02%)</title><rect x="273.7" y="437" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="276.68" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_base (125,047 samples, 0.01%)</title><rect x="525.3" y="325" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="528.34" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_M_allocate (194,495 samples, 0.02%)</title><rect x="209.6" y="453" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="212.56" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (403,446 samples, 0.04%)</title><rect x="586.2" y="261" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="589.21" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::vector (850,937 samples, 0.09%)</title><rect x="524.9" y="341" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="527.91" y="351.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (4,087,508 samples, 0.42%)</title><rect x="82.9" y="453" width="3.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="85.92" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_Rb_tree (313,901 samples, 0.03%)</title><rect x="509.2" y="533" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="512.15" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::push_back (418,154 samples, 0.04%)</title><rect x="196.5" y="485" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="199.51" y="495.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t const* std::__niter_base&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; (470,519 samples, 0.05%)</title><rect x="353.1" y="389" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="356.07" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr (200,534 samples, 0.02%)</title><rect x="611.4" y="437" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="614.38" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned short&gt;::allocate (378,466 samples, 0.04%)</title><rect x="218.8" y="405" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="221.77" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (1,236,212 samples, 0.13%)</title><rect x="379.6" y="309" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="382.64" y="319.5" ></text>
</g>
<g >
<title>unsigned short* std::__copy_move_a2&lt;false, unsigned short const*, unsigned short*&gt; (205,186 samples, 0.02%)</title><rect x="521.3" y="229" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="524.26" y="239.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (1,613,776 samples, 0.17%)</title><rect x="160.9" y="437" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="163.94" y="447.5" ></text>
</g>
<g >
<title>ns3::LteMiErrorModel::MappingMiBler (755,586 samples, 0.08%)</title><rect x="486.5" y="533" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="489.53" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (845,523 samples, 0.09%)</title><rect x="318.7" y="453" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="321.69" y="463.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::DlInfoListElement_s&gt; (1,186,954 samples, 0.12%)</title><rect x="256.0" y="421" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="258.98" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;void  (19,739,449 samples, 2.04%)</title><rect x="422.8" y="437" width="15.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="425.83" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::Add (1,413,859 samples, 0.15%)</title><rect x="20.8" y="341" width="1.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="23.83" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (213,081 samples, 0.02%)</title><rect x="90.9" y="549" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="93.92" y="559.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::CreatePuschCqiReport (5,488,789 samples, 0.57%)</title><rect x="477.0" y="325" width="4.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="480.01" y="335.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::SpectrumSignalParameters (4,200,055 samples, 0.43%)</title><rect x="645.2" y="469" width="3.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="648.22" y="479.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (413,599 samples, 0.04%)</title><rect x="230.2" y="389" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="233.19" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::begin (392,398 samples, 0.04%)</title><rect x="571.2" y="309" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="574.20" y="319.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, double&gt;::operator (401,545 samples, 0.04%)</title><rect x="746.6" y="549" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="749.64" y="559.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (154,939 samples, 0.02%)</title><rect x="464.2" y="485" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="467.16" y="495.5" ></text>
</g>
<g >
<title>ns3::Angles::NormalizeAngles (351,340 samples, 0.04%)</title><rect x="702.9" y="517" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="705.95" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_valptr (154,865 samples, 0.02%)</title><rect x="245.0" y="421" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="248.03" y="431.5" ></text>
</g>
<g >
<title>ns3::Packet::GetSize (399,735 samples, 0.04%)</title><rect x="367.7" y="517" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="370.70" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::end (193,090 samples, 0.02%)</title><rect x="257.4" y="501" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="260.45" y="511.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (393,222 samples, 0.04%)</title><rect x="717.6" y="453" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="720.61" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Ptr (160,721 samples, 0.02%)</title><rect x="741.2" y="533" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="744.24" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (189,133 samples, 0.02%)</title><rect x="336.1" y="357" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="339.08" y="367.5" ></text>
</g>
<g >
<title>ns3::LteInterference::StartRx (4,413,510 samples, 0.46%)</title><rect x="727.9" y="517" width="3.6" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="730.91" y="527.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator+= (153,737 samples, 0.02%)</title><rect x="198.6" y="421" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="201.61" y="431.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (372,209 samples, 0.04%)</title><rect x="308.3" y="453" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="311.28" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::empty (831,186 samples, 0.09%)</title><rect x="30.0" y="373" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="33.00" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node::operator (200,295 samples, 0.02%)</title><rect x="88.2" y="405" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="91.22" y="415.5" ></text>
</g>
<g >
<title>double std::reduce&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double&gt; (892,712 samples, 0.09%)</title><rect x="602.2" y="325" width="0.8" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="605.24" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, double&gt; &gt;::operator (275,175 samples, 0.03%)</title><rect x="292.6" y="533" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="295.56" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_S_key (741,857 samples, 0.08%)</title><rect x="523.5" y="293" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="526.48" y="303.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="645" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="14.17" y="655.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;&amp;, bool&gt; (187,042 samples, 0.02%)</title><rect x="338.1" y="421" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="341.15" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUePhy&gt;::~Ptr (132,349 samples, 0.01%)</title><rect x="470.4" y="405" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="473.38" y="415.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (2,983,151 samples, 0.31%)</title><rect x="17.2" y="565" width="2.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="20.17" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::allocate (185,442 samples, 0.02%)</title><rect x="318.9" y="293" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="321.91" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::~vector (497,075 samples, 0.05%)</title><rect x="132.7" y="389" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="135.68" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_impl::_List_impl (877,007 samples, 0.09%)</title><rect x="539.4" y="245" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="542.35" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::_M_addr (164,024 samples, 0.02%)</title><rect x="570.6" y="229" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="573.60" y="239.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteNetDevice&gt;::Acquire (197,652 samples, 0.02%)</title><rect x="582.7" y="277" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="585.75" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::end (238,188 samples, 0.02%)</title><rect x="245.7" y="485" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="248.69" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::find (1,671,204 samples, 0.17%)</title><rect x="235.3" y="469" width="1.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="238.32" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (612,796 samples, 0.06%)</title><rect x="239.3" y="245" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="242.31" y="255.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_base&lt;unsigned long*&gt; (159,817 samples, 0.02%)</title><rect x="248.3" y="389" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="251.33" y="399.5" ></text>
</g>
<g >
<title>ns3::operator!= (3,765,543 samples, 0.39%)</title><rect x="747.0" y="549" width="3.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="749.96" y="559.5" ></text>
</g>
<g >
<title>ns3::BuildRarListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildRarListElement_s const*, std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt; &gt;, ns3::BuildRarListElement_s*&gt; (198,569 samples, 0.02%)</title><rect x="143.1" y="421" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="146.13" y="431.5" ></text>
</g>
<g >
<title> (129,312 samples, 0.01%)</title><rect x="79.2" y="485" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="82.23" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::list (421,055 samples, 0.04%)</title><rect x="447.7" y="261" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="450.75" y="271.5" ></text>
</g>
<g >
<title>unsigned short* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (534,449 samples, 0.06%)</title><rect x="521.1" y="277" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="524.06" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (328,685 samples, 0.03%)</title><rect x="77.4" y="325" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="80.43" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::TypeId::AttributeInformation, std::allocator&lt;ns3::TypeId::AttributeInformation&gt; &gt;::size (158,366 samples, 0.02%)</title><rect x="373.6" y="437" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="376.58" y="447.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (5,466,153 samples, 0.56%)</title><rect x="333.9" y="437" width="4.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="336.90" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (505,490 samples, 0.05%)</title><rect x="317.9" y="389" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="320.90" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*&gt; (229,070 samples, 0.02%)</title><rect x="139.8" y="437" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="142.78" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_mbegin (159,237 samples, 0.02%)</title><rect x="507.5" y="501" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="510.45" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (31,621,347 samples, 3.26%)</title><rect x="579.9" y="389" width="25.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="582.93" y="399.5" >s..</text>
</g>
<g >
<title>ns3::AttributeConstructionList::~AttributeConstructionList (315,373 samples, 0.03%)</title><rect x="372.0" y="501" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="374.97" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::TxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (1,921,178 samples, 0.20%)</title><rect x="649.7" y="501" width="1.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="652.75" y="511.5" ></text>
</g>
<g >
<title>ns3::EventId::EventId (206,004 samples, 0.02%)</title><rect x="62.2" y="485" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="65.24" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::at (396,578 samples, 0.04%)</title><rect x="208.4" y="485" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="211.38" y="495.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::SubframeIndication (107,909,732 samples, 11.13%)</title><rect x="614.6" y="565" width="86.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="617.63" y="575.5" >ns3::LteUe..</text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_base (643,355 samples, 0.07%)</title><rect x="444.8" y="309" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="447.75" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::empty (157,851 samples, 0.02%)</title><rect x="722.5" y="517" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="725.52" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,524,725 samples, 0.16%)</title><rect x="171.0" y="437" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="174.02" y="447.5" ></text>
</g>
<g >
<title>int&amp; std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (148,897 samples, 0.02%)</title><rect x="347.2" y="517" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="350.19" y="527.5" ></text>
</g>
<g >
<title>ns3::LteAmc::GetCqiFromSpectralEfficiency (426,858 samples, 0.04%)</title><rect x="231.6" y="485" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="234.63" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_put_node (164,554 samples, 0.02%)</title><rect x="777.0" y="357" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="779.97" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst const&gt;::Ptr&lt;ns3::PacketBurst&gt; (197,139 samples, 0.02%)</title><rect x="612.5" y="549" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="615.49" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (892,964 samples, 0.09%)</title><rect x="604.4" y="309" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="607.38" y="319.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetAttributeN (876,759 samples, 0.09%)</title><rect x="33.7" y="405" width="0.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="36.75" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::_S_key (486,222 samples, 0.05%)</title><rect x="570.3" y="277" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="573.34" y="287.5" ></text>
</g>
<g >
<title>ns3::Now (240,092 samples, 0.02%)</title><rect x="485.3" y="517" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="488.33" y="527.5" ></text>
</g>
<g >
<title>ns3::MemberLteFfrSapProvider&lt;ns3::LteFrNoOpAlgorithm&gt;::GetAvailableUlRbg (191,473 samples, 0.02%)</title><rect x="232.3" y="485" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="235.25" y="495.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_assign_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (211,914 samples, 0.02%)</title><rect x="90.6" y="517" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="93.61" y="527.5" ></text>
</g>
<g >
<title> (230,158 samples, 0.02%)</title><rect x="323.8" y="485" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="326.75" y="495.5" ></text>
</g>
<g >
<title>unsigned short* std::__copy_move_a1&lt;false, unsigned short const*, unsigned short*&gt; (286,745 samples, 0.03%)</title><rect x="521.2" y="245" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="524.19" y="255.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (29,774,663 samples, 3.07%)</title><rect x="581.4" y="357" width="24.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="584.42" y="367.5" >v..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;* std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (644,555 samples, 0.07%)</title><rect x="83.0" y="389" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="86.02" y="399.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (228,148 samples, 0.02%)</title><rect x="118.5" y="469" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="121.47" y="479.5" ></text>
</g>
<g >
<title>__log10_finite (323,658 samples, 0.03%)</title><rect x="739.2" y="517" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="742.19" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::pair (160,600 samples, 0.02%)</title><rect x="664.6" y="453" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="667.56" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt; &gt;::find (242,538 samples, 0.03%)</title><rect x="726.4" y="309" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="729.36" y="319.5" ></text>
</g>
<g >
<title>ns3::LteMacSapProvider::TransmitPduParameters::~TransmitPduParameters (199,865 samples, 0.02%)</title><rect x="15.9" y="357" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="18.94" y="367.5" ></text>
</g>
<g >
<title>ns3::LteInterference*&amp; std::_Mu&lt;ns3::LteInterference*, false, false&gt;::operator (286,822 samples, 0.03%)</title><rect x="49.2" y="597" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="52.16" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::_M_begin (163,866 samples, 0.02%)</title><rect x="429.6" y="245" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="432.61" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::_M_head (396,724 samples, 0.04%)</title><rect x="754.5" y="565" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="757.46" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (872,147,551 samples, 89.93%)</title><rect x="50.2" y="597" width="701.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="53.24" y="607.5" >std::__invoke_result&lt;void </text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::end (158,886 samples, 0.02%)</title><rect x="178.7" y="453" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="181.73" y="463.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (335,852 samples, 0.03%)</title><rect x="606.6" y="437" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="609.62" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::empty (925,744 samples, 0.10%)</title><rect x="31.8" y="341" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="34.83" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::max_size (498,524 samples, 0.05%)</title><rect x="693.6" y="437" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="696.63" y="447.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (30,508,273 samples, 3.15%)</title><rect x="580.8" y="373" width="24.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="583.83" y="383.5" >s..</text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (2,326,898 samples, 0.24%)</title><rect x="164.3" y="437" width="1.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="167.26" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_addr (126,016 samples, 0.01%)</title><rect x="522.3" y="293" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="525.30" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::deallocate (164,716 samples, 0.02%)</title><rect x="728.4" y="357" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="731.43" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::begin (189,215 samples, 0.02%)</title><rect x="179.3" y="453" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="182.33" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::operator++ (165,053 samples, 0.02%)</title><rect x="415.9" y="517" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="418.87" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::MacCeListElement_s&gt; (796,900 samples, 0.08%)</title><rect x="264.8" y="421" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="267.80" y="431.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (154,939 samples, 0.02%)</title><rect x="464.2" y="469" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="467.16" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteUePhy*, unsigned int, unsigned int&gt;::_Tuple_impl&lt;ns3::LteUePhy*&amp;, unsigned int&amp;, unsigned int&amp;, void&gt; (1,139,526 samples, 0.12%)</title><rect x="617.3" y="453" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="620.26" y="463.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e&gt; (2,253,213 samples, 0.23%)</title><rect x="258.8" y="373" width="1.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="261.83" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (538,728 samples, 0.06%)</title><rect x="576.2" y="357" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="579.16" y="367.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned char*, unsigned char&gt; (237,950 samples, 0.02%)</title><rect x="686.4" y="437" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="689.35" y="447.5" ></text>
</g>
<g >
<title>ns3::operator- (347,823 samples, 0.04%)</title><rect x="642.5" y="501" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="645.51" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (751,966 samples, 0.08%)</title><rect x="666.7" y="453" width="0.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="669.66" y="463.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (386,345 samples, 0.04%)</title><rect x="144.0" y="421" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="147.04" y="431.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_M_valptr (561,256 samples, 0.06%)</title><rect x="500.2" y="501" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="503.22" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned short&gt;::_M_ptr (202,650 samples, 0.02%)</title><rect x="463.1" y="277" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="466.13" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::deallocate (197,176 samples, 0.02%)</title><rect x="693.2" y="437" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="696.23" y="447.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (564,216 samples, 0.06%)</title><rect x="318.8" y="341" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="321.81" y="351.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::HigherLayerSelected_s*&gt; (151,525 samples, 0.02%)</title><rect x="255.6" y="309" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="258.57" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::deallocate (199,701 samples, 0.02%)</title><rect x="716.8" y="373" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="719.83" y="383.5" ></text>
</g>
<g >
<title>atan2f32x (451,382 samples, 0.05%)</title><rect x="641.8" y="485" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="644.77" y="495.5" ></text>
</g>
<g >
<title>std::operator== (155,056 samples, 0.02%)</title><rect x="294.3" y="517" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="297.33" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (148,972 samples, 0.02%)</title><rect x="646.3" y="405" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="649.32" y="415.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (957,537 samples, 0.10%)</title><rect x="460.2" y="245" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="463.23" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, ns3::LteInterference*, false&gt;::_Head_base&lt;ns3::LteInterference*&amp;&gt; (359,845 samples, 0.04%)</title><rect x="709.2" y="405" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="712.16" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (152,754 samples, 0.02%)</title><rect x="104.9" y="453" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="107.92" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (2,727,119 samples, 0.28%)</title><rect x="384.1" y="517" width="2.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="387.08" y="527.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (730,011 samples, 0.08%)</title><rect x="398.8" y="533" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="401.81" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,369,617 samples, 0.14%)</title><rect x="439.8" y="437" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="442.84" y="447.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet&gt; &gt;::operator (21,452,008 samples, 2.21%)</title><rect x="421.5" y="549" width="17.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="424.55" y="559.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (156,421 samples, 0.02%)</title><rect x="484.8" y="469" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="487.85" y="479.5" ></text>
</g>
<g >
<title>ns3::Packet::Copy (2,016,224 samples, 0.21%)</title><rect x="624.0" y="517" width="1.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="627.03" y="527.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (5,779,283 samples, 0.60%)</title><rect x="708.1" y="501" width="4.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="711.05" y="511.5" ></text>
</g>
<g >
<title>ns3::LteNetDevice::GetNode (844,941 samples, 0.09%)</title><rect x="312.3" y="501" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="315.33" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (6,361,481 samples, 0.66%)</title><rect x="772.1" y="597" width="5.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="775.11" y="607.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (304,289 samples, 0.03%)</title><rect x="15.5" y="421" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="18.45" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (190,812 samples, 0.02%)</title><rect x="266.7" y="389" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="269.72" y="399.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (304,289 samples, 0.03%)</title><rect x="15.5" y="405" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="18.45" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::~vector (802,126 samples, 0.08%)</title><rect x="256.3" y="389" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="259.29" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (198,307 samples, 0.02%)</title><rect x="746.0" y="517" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="749.01" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::clear (312,181 samples, 0.03%)</title><rect x="265.4" y="517" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="268.44" y="527.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (314,249 samples, 0.03%)</title><rect x="11.2" y="565" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="14.17" y="575.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::operator bool (277,440 samples, 0.03%)</title><rect x="323.3" y="501" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="326.35" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (514,929 samples, 0.05%)</title><rect x="233.2" y="325" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="236.21" y="335.5" ></text>
</g>
<g >
<title>double const&amp; const&amp; std::__get_helper&lt;0ul, double const&amp;, double const&amp;, double const&amp;&gt; (550,022 samples, 0.06%)</title><rect x="748.6" y="469" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="751.60" y="479.5" ></text>
</g>
<g >
<title> (199,830 samples, 0.02%)</title><rect x="492.1" y="533" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="495.14" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::end (167,970 samples, 0.02%)</title><rect x="568.6" y="261" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="571.59" y="271.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (6,532,753 samples, 0.67%)</title><rect x="151.1" y="421" width="5.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="154.13" y="431.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetParent (699,339 samples, 0.07%)</title><rect x="373.9" y="469" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="376.89" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (217,306 samples, 0.02%)</title><rect x="563.0" y="165" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="565.96" y="175.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (399,056 samples, 0.04%)</title><rect x="728.7" y="501" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="731.73" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::~pair (189,965 samples, 0.02%)</title><rect x="193.4" y="373" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="196.40" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_valptr (193,132 samples, 0.02%)</title><rect x="676.0" y="421" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="678.99" y="431.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (2,326,898 samples, 0.24%)</title><rect x="164.3" y="405" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.26" y="415.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::CreateTxPowerSpectralDensity (5,482,916 samples, 0.57%)</title><rect x="54.2" y="517" width="4.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="57.17" y="527.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (205,537 samples, 0.02%)</title><rect x="606.7" y="405" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="609.72" y="415.5" ></text>
</g>
<g >
<title> (310,011 samples, 0.03%)</title><rect x="734.6" y="517" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="737.62" y="527.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (2,947,073 samples, 0.30%)</title><rect x="359.1" y="501" width="2.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="362.09" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::VendorSpecificListElement_s*&gt; (157,042 samples, 0.02%)</title><rect x="25.2" y="277" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="28.23" y="287.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (153,593 samples, 0.02%)</title><rect x="316.3" y="357" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="319.25" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDataFrame&gt; ns3::DynamicCast&lt;ns3::LteSpectrumSignalParametersDataFrame, ns3::SpectrumSignalParameters&gt; (654,107 samples, 0.07%)</title><rect x="734.9" y="533" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="737.87" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int, unsigned long&gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int, unsigned long&gt; &gt; &gt;::begin (246,319 samples, 0.03%)</title><rect x="428.3" y="245" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="431.34" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::~_Rb_tree (314,365 samples, 0.03%)</title><rect x="509.4" y="533" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="512.43" y="543.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (598,518 samples, 0.06%)</title><rect x="475.6" y="261" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="478.64" y="271.5" ></text>
</g>
<g >
<title>ns3::Vector3D::GetLength (199,594 samples, 0.02%)</title><rect x="740.0" y="485" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="743.02" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (75,554,587 samples, 7.79%)</title><rect x="515.9" y="517" width="60.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="518.86" y="527.5" >std::f..</text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::begin (520,365 samples, 0.05%)</title><rect x="348.6" y="533" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="351.60" y="543.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ConstructSelf (2,631,536 samples, 0.27%)</title><rect x="448.3" y="261" width="2.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="451.25" y="271.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (371,349 samples, 0.04%)</title><rect x="584.8" y="229" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="587.82" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;::operator++ (269,003 samples, 0.03%)</title><rect x="222.9" y="453" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="225.86" y="463.5" ></text>
</g>
<g >
<title>ns3::LteUeMac::DoTransmitPdu (5,333,252 samples, 0.55%)</title><rect x="560.9" y="213" width="4.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="563.94" y="223.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (676,289 samples, 0.07%)</title><rect x="726.7" y="501" width="0.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="729.75" y="511.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::GenerateMixedCqiReport (24,898,652 samples, 2.57%)</title><rect x="581.8" y="341" width="20.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="584.83" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (259,580 samples, 0.03%)</title><rect x="688.8" y="437" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="691.82" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (1,864,456 samples, 0.19%)</title><rect x="634.3" y="421" width="1.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="637.32" y="431.5" ></text>
</g>
<g >
<title> (236,363 samples, 0.02%)</title><rect x="375.3" y="517" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="378.34" y="527.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;double*, double&gt; (356,463 samples, 0.04%)</title><rect x="403.8" y="373" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="406.77" y="383.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::Copy (6,331,179 samples, 0.65%)</title><rect x="644.2" y="517" width="5.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="647.19" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::size (159,421 samples, 0.02%)</title><rect x="150.2" y="405" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="153.22" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (262,399 samples, 0.03%)</title><rect x="714.6" y="469" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="717.65" y="479.5" ></text>
</g>
<g >
<title>ns3::Tag::~Tag (149,528 samples, 0.02%)</title><rect x="561.3" y="181" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="564.26" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::allocate (313,319 samples, 0.03%)</title><rect x="626.6" y="437" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="629.59" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::_S_key (488,547 samples, 0.05%)</title><rect x="181.8" y="421" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="184.81" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::begin (162,995 samples, 0.02%)</title><rect x="610.6" y="533" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="613.62" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt;::allocate (420,367 samples, 0.04%)</title><rect x="287.7" y="437" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="290.75" y="447.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (311,344 samples, 0.03%)</title><rect x="113.2" y="469" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="116.18" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::MacCeListElement_s*&gt; (796,900 samples, 0.08%)</title><rect x="264.8" y="437" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="267.80" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::AntennaModel&gt;::operator= (374,650 samples, 0.04%)</title><rect x="669.0" y="533" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="671.96" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_get_Tp_allocator (152,962 samples, 0.02%)</title><rect x="132.7" y="373" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="135.71" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::ByteTagListData**, std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt; &gt;::__normal_iterator (214,988 samples, 0.02%)</title><rect x="553.8" y="181" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="556.81" y="191.5" ></text>
</g>
<g >
<title>__cxa_finalize (155,299 samples, 0.02%)</title><rect x="35.5" y="709" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="38.54" y="719.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_List_const_iterator (158,022 samples, 0.02%)</title><rect x="464.0" y="501" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="467.03" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_deallocate (148,463 samples, 0.02%)</title><rect x="445.8" y="277" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="448.76" y="287.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (146,147 samples, 0.02%)</title><rect x="614.1" y="453" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="617.14" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; (318,404 samples, 0.03%)</title><rect x="661.4" y="325" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="664.36" y="335.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (775,942 samples, 0.08%)</title><rect x="384.8" y="437" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="387.79" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, unsigned short, double, double, unsigned char&gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, unsigned short, double, double, unsigned char&gt; &gt; &gt;::begin (372,850 samples, 0.04%)</title><rect x="600.6" y="293" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="603.64" y="303.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoReceivePdu (1,549,265 samples, 0.16%)</title><rect x="435.8" y="277" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="438.78" y="287.5" ></text>
</g>
<g >
<title>ns3::RlcTag::Serialize (197,148 samples, 0.02%)</title><rect x="31.0" y="405" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="34.01" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (898,249 samples, 0.09%)</title><rect x="610.8" y="517" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="613.82" y="527.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const&amp;&gt; (184,373 samples, 0.02%)</title><rect x="205.0" y="325" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="207.98" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp;&gt; (617,971 samples, 0.06%)</title><rect x="721.7" y="453" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="724.68" y="463.5" ></text>
</g>
<g >
<title>ns3::AttributeConstructionList::AttributeConstructionList (566,514 samples, 0.06%)</title><rect x="162.3" y="421" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="165.30" y="431.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (411,592 samples, 0.04%)</title><rect x="107.3" y="389" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="110.29" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::operator* (283,168 samples, 0.03%)</title><rect x="568.8" y="325" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="571.79" y="335.5" ></text>
</g>
<g >
<title>decltype  (367,864 samples, 0.04%)</title><rect x="363.7" y="437" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="366.67" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;&amp;, bool&gt; (153,072 samples, 0.02%)</title><rect x="664.4" y="437" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="667.40" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::VendorSpecificListElement_s*, ns3::VendorSpecificListElement_s&gt; (162,953 samples, 0.02%)</title><rect x="473.5" y="277" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="476.48" y="287.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::EventImpl&gt;::Delete (786,828 samples, 0.08%)</title><rect x="640.3" y="485" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="643.31" y="495.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;, ns3::BuildDataListElement_s*, ns3::BuildDataListElement_s&gt; (556,681 samples, 0.06%)</title><rect x="141.9" y="437" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="144.89" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, double const&amp;, double const&amp;&gt;::_M_head (323,243 samples, 0.03%)</title><rect x="748.2" y="437" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="751.18" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_drop_node (152,641 samples, 0.02%)</title><rect x="394.2" y="437" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="397.19" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;int&gt;::allocate (169,207 samples, 0.02%)</title><rect x="574.6" y="261" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="577.55" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node&gt; (911,587 samples, 0.09%)</title><rect x="59.3" y="437" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="62.31" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::push_back (234,296 samples, 0.02%)</title><rect x="105.9" y="469" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="108.85" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::erase (2,911,768 samples, 0.30%)</title><rect x="633.8" y="533" width="2.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="636.79" y="543.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (776,622 samples, 0.08%)</title><rect x="454.0" y="213" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="456.99" y="223.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::MulByInvert (359,204 samples, 0.04%)</title><rect x="406.2" y="469" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="409.19" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (1,990,186 samples, 0.21%)</title><rect x="646.9" y="437" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="649.87" y="447.5" ></text>
</g>
<g >
<title>ns3::Vector3D::GetLength (422,570 samples, 0.04%)</title><rect x="66.1" y="485" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="69.09" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumModel::GetUid (126,136 samples, 0.01%)</title><rect x="79.6" y="517" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="82.65" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersUlSrsFrame&gt;::Ptr (205,401 samples, 0.02%)</title><rect x="736.9" y="517" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="739.94" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (144,943 samples, 0.01%)</title><rect x="764.8" y="565" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="767.80" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (155,390 samples, 0.02%)</title><rect x="318.2" y="373" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="321.18" y="383.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (274,123 samples, 0.03%)</title><rect x="378.4" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="381.40" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::_M_erase (264,157 samples, 0.03%)</title><rect x="117.8" y="501" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="120.75" y="511.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::operator (1,320,674 samples, 0.14%)</title><rect x="725.6" y="501" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="728.60" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::resize (1,973,260 samples, 0.20%)</title><rect x="459.4" y="277" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="462.41" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (922,589 samples, 0.10%)</title><rect x="242.7" y="437" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="245.68" y="447.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*, ns3::HarqProcessInfoElement_t&gt; (419,766 samples, 0.04%)</title><rect x="591.5" y="261" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="594.49" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (73,612,890 samples, 7.59%)</title><rect x="517.4" y="421" width="59.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="520.39" y="431.5" >std::_..</text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (191,509 samples, 0.02%)</title><rect x="201.3" y="437" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="204.34" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, double&gt; &gt;::_M_ptr (260,663 samples, 0.03%)</title><rect x="295.5" y="453" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="298.50" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::operator* (284,432 samples, 0.03%)</title><rect x="410.6" y="501" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="413.55" y="511.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (198,909 samples, 0.02%)</title><rect x="19.0" y="373" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="21.95" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;* std::__copy_move_a1&lt;true, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*&gt; (148,381 samples, 0.02%)</title><rect x="117.1" y="453" width="0.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="120.11" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (149,521 samples, 0.02%)</title><rect x="212.9" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="215.88" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__strip_reference_wrapper&lt;std::decay&lt;ns3::Scheduler::EventKey const&amp;&gt;::type&gt;::__type, std::__strip_reference_wrapper&lt;std::decay&lt;ns3::EventImpl* const&amp;&gt;::type&gt;::__type&gt; std::make_pair&lt;ns3::Scheduler::EventKey const&amp;, ns3::EventImpl* const&amp;&gt; (145,249 samples, 0.01%)</title><rect x="109.2" y="469" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="112.21" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::begin (232,377 samples, 0.02%)</title><rect x="165.4" y="357" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="168.45" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;&amp;&gt; (549,835 samples, 0.06%)</title><rect x="282.3" y="437" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="285.31" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (778,887 samples, 0.08%)</title><rect x="180.3" y="437" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="183.31" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (156,408 samples, 0.02%)</title><rect x="281.5" y="421" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="284.47" y="431.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*&gt; (1,085,784 samples, 0.11%)</title><rect x="92.1" y="453" width="0.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="95.06" y="463.5" ></text>
</g>
<g >
<title>ns3::LteInterference::ConditionallyEvaluateChunk (17,432,677 samples, 1.80%)</title><rect x="401.0" y="549" width="14.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="403.96" y="559.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator (198,281 samples, 0.02%)</title><rect x="456.1" y="245" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="459.14" y="255.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_M_realloc_insert&lt;ns3::BuildDataListElement_s const&amp;&gt; (306,330 samples, 0.03%)</title><rect x="100.7" y="453" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="103.75" y="463.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (201,024 samples, 0.02%)</title><rect x="382.2" y="453" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="385.15" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (236,269 samples, 0.02%)</title><rect x="397.9" y="485" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="400.93" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (199,623 samples, 0.02%)</title><rect x="656.1" y="469" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="659.05" y="479.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (461,722 samples, 0.05%)</title><rect x="503.6" y="405" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="506.62" y="415.5" ></text>
</g>
<g >
<title>ns3::DlDciLteControlMessage::~DlDciLteControlMessage (321,995 samples, 0.03%)</title><rect x="610.0" y="421" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="612.97" y="431.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (1,191,133 samples, 0.12%)</title><rect x="75.7" y="325" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="78.74" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (1,780,222 samples, 0.18%)</title><rect x="290.1" y="485" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="293.06" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned short&gt; &gt;::allocate (378,103 samples, 0.04%)</title><rect x="520.1" y="277" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="523.12" y="287.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (283,264 samples, 0.03%)</title><rect x="593.3" y="213" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="596.34" y="223.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (151,453 samples, 0.02%)</title><rect x="92.8" y="341" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="95.82" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (455,373 samples, 0.05%)</title><rect x="317.3" y="389" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="320.26" y="399.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ScheduleWithContext (5,432,130 samples, 0.56%)</title><rect x="82.9" y="485" width="4.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="85.86" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::_Rb_tree (311,875 samples, 0.03%)</title><rect x="194.9" y="469" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="197.93" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::deallocate (194,524 samples, 0.02%)</title><rect x="216.5" y="421" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="219.49" y="431.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetPacketBurst (15,706,938 samples, 1.62%)</title><rect x="623.9" y="549" width="12.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="626.94" y="559.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::PhichListElement_s*, ns3::PhichListElement_s&gt; (154,556 samples, 0.02%)</title><rect x="229.4" y="437" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="232.42" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::~vector (1,044,337 samples, 0.11%)</title><rect x="132.2" y="501" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="135.24" y="511.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (2,100,998 samples, 0.22%)</title><rect x="152.9" y="373" width="1.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="155.85" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::resize (689,758 samples, 0.07%)</title><rect x="100.1" y="469" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="103.13" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::find (1,162,445 samples, 0.12%)</title><rect x="244.5" y="469" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="247.50" y="479.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;double&gt; (202,964 samples, 0.02%)</title><rect x="301.8" y="373" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="304.77" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (454,759 samples, 0.05%)</title><rect x="704.9" y="533" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="707.87" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void  (28,352,327 samples, 2.92%)</title><rect x="441.1" y="517" width="22.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="444.13" y="527.5" >s..</text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (1,046,140 samples, 0.11%)</title><rect x="377.8" y="341" width="0.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="380.84" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::SpectrumConverter, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::find (1,206,198 samples, 0.12%)</title><rect x="330.2" y="501" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="333.19" y="511.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (453,041 samples, 0.05%)</title><rect x="419.8" y="325" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="422.84" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (232,224 samples, 0.02%)</title><rect x="316.2" y="373" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="319.22" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::_M_lower_bound (587,425 samples, 0.06%)</title><rect x="330.7" y="469" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="333.66" y="479.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (9,997,060 samples, 1.03%)</title><rect x="94.5" y="501" width="8.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="97.52" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::~_List_base (231,280 samples, 0.02%)</title><rect x="121.3" y="517" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="124.33" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_ptr (157,058 samples, 0.02%)</title><rect x="298.4" y="389" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="301.40" y="399.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (318,182 samples, 0.03%)</title><rect x="728.8" y="485" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="731.79" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteSpectrumPhy*&gt;::_Tuple_impl&lt;ns3::LteSpectrumPhy*&amp;&gt; (466,575 samples, 0.05%)</title><rect x="306.5" y="421" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="309.48" y="431.5" ></text>
</g>
<g >
<title>ns3::EnbRrcMemberLteEnbCmacSapUser::AllocateTemporaryCellRnti (285,958 samples, 0.03%)</title><rect x="130.4" y="517" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="133.38" y="527.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::CreateTagData (656,493 samples, 0.07%)</title><rect x="562.2" y="165" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="565.16" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_begin (153,550 samples, 0.02%)</title><rect x="508.9" y="517" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="511.90" y="527.5" ></text>
</g>
<g >
<title>ns3::MemberLteUeCphySapUser&lt;ns3::LteUeRrc&gt;::RecvMasterInformationBlock (193,516 samples, 0.02%)</title><rect x="533.6" y="357" width="0.1" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="536.59" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::allocate (264,767 samples, 0.03%)</title><rect x="384.5" y="421" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="387.48" y="431.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (160,616 samples, 0.02%)</title><rect x="720.7" y="517" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="723.73" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (904,852 samples, 0.09%)</title><rect x="594.3" y="277" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="597.30" y="287.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; &gt;::type&amp; std::get&lt;1ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (546,406 samples, 0.06%)</title><rect x="755.1" y="597" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="758.05" y="607.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::IsEmpty (1,317,026 samples, 0.14%)</title><rect x="777.3" y="741" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="780.29" y="751.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::copy&lt;std::_Bit_iterator, std::_Bit_iterator&gt; (786,893 samples, 0.08%)</title><rect x="197.4" y="437" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="200.38" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_impl::_Vector_impl (396,620 samples, 0.04%)</title><rect x="350.9" y="357" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="353.86" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::at (397,924 samples, 0.04%)</title><rect x="510.4" y="549" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="513.40" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::push_back (3,724,637 samples, 0.38%)</title><rect x="202.3" y="485" width="3.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="205.32" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr (171,804 samples, 0.02%)</title><rect x="534.4" y="357" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="537.40" y="367.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::CreateDlCqiFeedbackMessage (18,538,645 samples, 1.91%)</title><rect x="583.2" y="309" width="14.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="586.16" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (669,703 samples, 0.07%)</title><rect x="331.6" y="453" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="334.57" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt;::deallocate (164,519 samples, 0.02%)</title><rect x="291.0" y="309" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="294.05" y="319.5" ></text>
</g>
<g >
<title>ns3::LteControlMessage::LteControlMessage (179,623 samples, 0.02%)</title><rect x="421.0" y="325" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="423.99" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;::_M_ptr (157,744 samples, 0.02%)</title><rect x="244.1" y="389" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="247.10" y="399.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;unsigned short&amp;&gt;::type&amp;&amp; std::move&lt;unsigned short&amp;&gt; (208,684 samples, 0.02%)</title><rect x="478.7" y="293" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="481.72" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (270,834 samples, 0.03%)</title><rect x="108.6" y="357" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="111.56" y="367.5" ></text>
</g>
<g >
<title>ns3::PeekImpl (242,375 samples, 0.02%)</title><rect x="779.5" y="821" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="782.49" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::clear (263,603 samples, 0.03%)</title><rect x="357.4" y="389" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="360.43" y="399.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (158,753 samples, 0.02%)</title><rect x="17.0" y="405" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="19.99" y="415.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s const&amp; std::forward&lt;ns3::UlInfoListElement_s const&amp;&gt; (224,662 samples, 0.02%)</title><rect x="266.5" y="405" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="269.50" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::push_back (382,869 samples, 0.04%)</title><rect x="95.9" y="389" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="98.86" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_Vector_impl_data::_Vector_impl_data (188,540 samples, 0.02%)</title><rect x="125.8" y="325" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="128.83" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, double&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, double&gt; &gt; &gt;::find (1,926,820 samples, 0.20%)</title><rect x="294.6" y="517" width="1.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="297.61" y="527.5" ></text>
</g>
<g >
<title>void std::fill&lt;std::_Bit_iterator, bool&gt; (469,559 samples, 0.05%)</title><rect x="200.5" y="437" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="203.53" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_ptr (271,891 samples, 0.03%)</title><rect x="242.0" y="405" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="244.99" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Ptr (394,072 samples, 0.04%)</title><rect x="704.5" y="533" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="707.49" y="543.5" ></text>
</g>
<g >
<title>std::operator== (208,615 samples, 0.02%)</title><rect x="86.8" y="469" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="89.83" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (4,562,243 samples, 0.47%)</title><rect x="773.6" y="549" width="3.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="776.56" y="559.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (5,856,767 samples, 0.60%)</title><rect x="772.5" y="581" width="4.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="775.51" y="591.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetRbgSize (162,303 samples, 0.02%)</title><rect x="383.4" y="549" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="386.39" y="559.5" ></text>
</g>
<g >
<title>double* std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (156,421 samples, 0.02%)</title><rect x="484.8" y="421" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="487.85" y="431.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::Packet&gt;::Delete (1,078,177 samples, 0.11%)</title><rect x="652.8" y="261" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="655.82" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (1,768,438 samples, 0.18%)</title><rect x="394.9" y="533" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="397.91" y="543.5" ></text>
</g>
<g >
<title>ns3::Object::Object (375,599 samples, 0.04%)</title><rect x="69.7" y="421" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="72.70" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (211,561 samples, 0.02%)</title><rect x="56.4" y="469" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="59.41" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::Unref (3,402,650 samples, 0.35%)</title><rect x="773.7" y="453" width="2.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="776.67" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_realloc_insert&lt;unsigned short&gt; (2,228,760 samples, 0.23%)</title><rect x="479.6" y="277" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="482.64" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~tuple (361,973 samples, 0.04%)</title><rect x="666.2" y="453" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="669.22" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (166,116 samples, 0.02%)</title><rect x="72.9" y="453" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="75.91" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::~list (162,156 samples, 0.02%)</title><rect x="448.1" y="261" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="451.12" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt;::at (125,858 samples, 0.01%)</title><rect x="457.0" y="309" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="459.99" y="319.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;ns3::CqiListElement_s*&gt;, ns3::CqiListElement_s*&gt; (136,124 samples, 0.01%)</title><rect x="127.5" y="437" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="130.54" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::erase (8,314,163 samples, 0.86%)</title><rect x="376.0" y="533" width="6.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="379.00" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::operator (316,802 samples, 0.03%)</title><rect x="675.1" y="485" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="678.11" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (452,888 samples, 0.05%)</title><rect x="594.4" y="261" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.37" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;* std::__copy_move_a1&lt;true, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*&gt; (183,796 samples, 0.02%)</title><rect x="110.5" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="113.53" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (964,559 samples, 0.10%)</title><rect x="297.9" y="453" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="300.94" y="463.5" ></text>
</g>
<g >
<title>ns3::LteEnbRrc::SendSystemInformation (226,850 samples, 0.02%)</title><rect x="400.5" y="565" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="403.45" y="575.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; (190,528 samples, 0.02%)</title><rect x="506.4" y="437" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="509.38" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::deallocate (189,106 samples, 0.02%)</title><rect x="256.5" y="341" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="259.54" y="351.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;double*, double&gt; (150,554 samples, 0.02%)</title><rect x="303.8" y="421" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="306.80" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (28,313,540 samples, 2.92%)</title><rect x="441.2" y="501" width="22.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="444.16" y="511.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (126,132 samples, 0.01%)</title><rect x="572.9" y="293" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="575.88" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_create_storage (192,396 samples, 0.02%)</title><rect x="474.0" y="181" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="477.01" y="191.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (1,127,648 samples, 0.12%)</title><rect x="641.6" y="501" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="644.60" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (283,539 samples, 0.03%)</title><rect x="87.4" y="453" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="90.36" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;::_M_valptr (157,744 samples, 0.02%)</title><rect x="244.1" y="405" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="247.10" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (959,349 samples, 0.10%)</title><rect x="341.6" y="469" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="344.61" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::begin (350,086 samples, 0.04%)</title><rect x="32.0" y="325" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.04" y="335.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::LcActivePerFlow (538,566 samples, 0.06%)</title><rect x="177.5" y="485" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="180.45" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::_Rb_tree_iterator (152,326 samples, 0.02%)</title><rect x="329.9" y="469" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="332.88" y="479.5" ></text>
</g>
<g >
<title>ns3::Buffer::~Buffer (125,638 samples, 0.01%)</title><rect x="612.9" y="341" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="615.93" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::vector (1,058,735 samples, 0.11%)</title><rect x="143.0" y="453" width="0.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="146.03" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;::allocate (272,885 samples, 0.03%)</title><rect x="210.9" y="421" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="213.86" y="431.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt; &gt; (2,140,649 samples, 0.22%)</title><rect x="128.7" y="501" width="1.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="131.66" y="511.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (34,406,741 samples, 3.55%)</title><rect x="577.7" y="453" width="27.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="580.69" y="463.5" >s..</text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::Ptr (149,036 samples, 0.02%)</title><rect x="652.1" y="517" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="655.06" y="527.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (590,966 samples, 0.06%)</title><rect x="638.5" y="469" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="641.52" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_impl::_List_impl (125,112 samples, 0.01%)</title><rect x="343.8" y="453" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="346.76" y="463.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e&gt; (234,294 samples, 0.02%)</title><rect x="510.0" y="501" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="512.98" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::_M_addr (155,895 samples, 0.02%)</title><rect x="224.4" y="389" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="227.35" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_valptr (179,937 samples, 0.02%)</title><rect x="385.6" y="453" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="388.57" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (3,054,718 samples, 0.31%)</title><rect x="698.1" y="549" width="2.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="701.14" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (306,410 samples, 0.03%)</title><rect x="29.3" y="357" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="32.25" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::RxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::begin (566,414 samples, 0.06%)</title><rect x="657.5" y="517" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="660.49" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::empty (341,339 samples, 0.04%)</title><rect x="264.3" y="517" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="267.34" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;::_M_ptr (153,839 samples, 0.02%)</title><rect x="187.4" y="405" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="190.41" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_get_Tp_allocator (193,289 samples, 0.02%)</title><rect x="127.9" y="453" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="130.90" y="463.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedDlConfigIndParameters::~SchedDlConfigIndParameters (1,899,935 samples, 0.20%)</title><rect x="145.1" y="469" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="148.10" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, bool&gt; std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::emplace&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (2,563,050 samples, 0.26%)</title><rect x="658.2" y="517" width="2.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="661.17" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::base (157,048 samples, 0.02%)</title><rect x="647.4" y="357" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="650.43" y="367.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (534,535 samples, 0.06%)</title><rect x="646.3" y="421" width="0.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="649.32" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_M_get_Tp_allocator (199,501 samples, 0.02%)</title><rect x="549.8" y="197" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="552.80" y="207.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (185,369 samples, 0.02%)</title><rect x="117.4" y="389" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="120.37" y="399.5" ></text>
</g>
<g >
<title>ns3::CeBitmap_e* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CeBitmap_e const*, std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt; &gt;, ns3::CeBitmap_e*&gt; (376,947 samples, 0.04%)</title><rect x="203.9" y="341" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="206.93" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void  (34,901,798 samples, 3.60%)</title><rect x="577.3" y="485" width="28.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="580.29" y="495.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_valptr (246,654 samples, 0.03%)</title><rect x="55.4" y="421" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="58.39" y="431.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::ComputeAvgSinr (312,773 samples, 0.03%)</title><rect x="582.9" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.91" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,496,720 samples, 0.26%)</title><rect x="438.9" y="501" width="2.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="441.93" y="511.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (812,960 samples, 0.08%)</title><rect x="772.9" y="453" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="775.90" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDataFrame&gt; ns3::Create&lt;ns3::LteSpectrumSignalParametersDataFrame, ns3::LteSpectrumSignalParametersDataFrame const&amp;&gt; (6,018,311 samples, 0.62%)</title><rect x="644.4" y="501" width="4.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="647.44" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::RxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::end (167,887 samples, 0.02%)</title><rect x="80.9" y="517" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="83.90" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::begin (190,418 samples, 0.02%)</title><rect x="329.9" y="485" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="332.85" y="495.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator (124,444 samples, 0.01%)</title><rect x="707.4" y="373" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="710.37" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (4,086,821 samples, 0.42%)</title><rect x="269.5" y="469" width="3.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="272.54" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::_M_valptr (320,518 samples, 0.03%)</title><rect x="566.1" y="165" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="569.09" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;void  (324,769 samples, 0.03%)</title><rect x="611.9" y="485" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="614.94" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::construct&lt;ns3::BuildDataListElement_s, ns3::BuildDataListElement_s const&amp;&gt; (2,604,285 samples, 0.27%)</title><rect x="203.2" y="453" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="206.22" y="463.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (314,249 samples, 0.03%)</title><rect x="11.2" y="533" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.17" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::~_Vector_base (383,267 samples, 0.04%)</title><rect x="229.6" y="437" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="232.60" y="447.5" ></text>
</g>
<g >
<title>atan2f32x (1,051,855 samples, 0.11%)</title><rect x="310.2" y="469" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="313.20" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_S_key (426,201 samples, 0.04%)</title><rect x="675.8" y="437" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="678.83" y="447.5" ></text>
</g>
<g >
<title> (160,344 samples, 0.02%)</title><rect x="431.8" y="309" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="434.79" y="319.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;::_List_const_iterator (155,345 samples, 0.02%)</title><rect x="481.9" y="293" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="484.90" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_lower_bound (234,707 samples, 0.02%)</title><rect x="29.3" y="341" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="32.28" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::~Ptr (152,896 samples, 0.02%)</title><rect x="314.9" y="437" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="317.94" y="447.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Multiply (1,462,439 samples, 0.15%)</title><rect x="745.2" y="533" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="748.17" y="543.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (185,369 samples, 0.02%)</title><rect x="117.4" y="437" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="120.37" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (369,943 samples, 0.04%)</title><rect x="653.7" y="357" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="656.72" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::_M_addr (148,795 samples, 0.02%)</title><rect x="566.2" y="133" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="569.23" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_impl::_Vector_impl (270,409 samples, 0.03%)</title><rect x="413.4" y="469" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="416.36" y="479.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (152,858 samples, 0.02%)</title><rect x="654.3" y="373" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="657.32" y="383.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet&gt; &gt;::Callback&lt;void  (185,775 samples, 0.02%)</title><rect x="422.2" y="469" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="425.16" y="479.5" ></text>
</g>
<g >
<title>ns3::UeSelected_s::~UeSelected_s (485,130 samples, 0.05%)</title><rect x="255.0" y="357" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="258.00" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::_Rb_tree_iterator (127,428 samples, 0.01%)</title><rect x="566.4" y="181" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="569.41" y="191.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (19,285,336 samples, 1.99%)</title><rect x="19.6" y="533" width="15.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="22.60" y="543.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (1,989,572 samples, 0.21%)</title><rect x="773.9" y="341" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="776.86" y="351.5" ></text>
</g>
<g >
<title> (124,716 samples, 0.01%)</title><rect x="728.6" y="485" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="731.63" y="495.5" ></text>
</g>
<g >
<title>unsigned char* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (315,978 samples, 0.03%)</title><rect x="442.3" y="245" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="445.34" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (20,931,339 samples, 2.16%)</title><rect x="421.9" y="517" width="16.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="424.87" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (786,221 samples, 0.08%)</title><rect x="774.1" y="245" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="777.08" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (555,448 samples, 0.06%)</title><rect x="233.2" y="373" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="236.17" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::pfsFlowPerf_t, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::begin (326,502 samples, 0.03%)</title><rect x="186.1" y="485" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="189.09" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (156,128 samples, 0.02%)</title><rect x="667.1" y="261" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="670.07" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator++ (859,040 samples, 0.09%)</title><rect x="767.3" y="677" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="770.27" y="687.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUePhy&gt;::Ptr (125,424 samples, 0.01%)</title><rect x="516.6" y="437" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="519.65" y="447.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (348,760 samples, 0.04%)</title><rect x="715.4" y="517" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="718.38" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::allocate (267,880 samples, 0.03%)</title><rect x="724.6" y="421" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="727.58" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Divide (127,965 samples, 0.01%)</title><rect x="601.3" y="309" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="604.34" y="319.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::CreateTagData (342,966 samples, 0.04%)</title><rect x="21.6" y="325" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="24.63" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned int&gt;::_Tuple_impl&lt;unsigned int&amp;&gt; (298,400 samples, 0.03%)</title><rect x="617.9" y="421" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="620.94" y="431.5" ></text>
</g>
<g >
<title>[libm.so.6] (745,624 samples, 0.08%)</title><rect x="310.4" y="453" width="0.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="313.44" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (629,966 samples, 0.06%)</title><rect x="655.0" y="389" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="658.02" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (27,749,977 samples, 2.86%)</title><rect x="441.6" y="421" width="22.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="444.62" y="431.5" >s..</text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (1,376,216 samples, 0.14%)</title><rect x="15.9" y="437" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="18.88" y="447.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*&gt; (4,855,575 samples, 0.50%)</title><rect x="258.0" y="453" width="3.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="261.02" y="463.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::LteEnbMac&gt;::ReportBufferStatus (682,380 samples, 0.07%)</title><rect x="17.9" y="357" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="20.88" y="367.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__niter_base&lt;ns3::HarqProcessInfoElement_t*&gt; (232,255 samples, 0.02%)</title><rect x="513.5" y="453" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="516.47" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_S_key (195,316 samples, 0.02%)</title><rect x="223.5" y="437" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="226.48" y="447.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::~tbInfo_t (389,508 samples, 0.04%)</title><rect x="387.6" y="517" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="390.63" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (269,841 samples, 0.03%)</title><rect x="497.4" y="533" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="500.37" y="543.5" ></text>
</g>
<g >
<title>__dynamic_cast (424,030 samples, 0.04%)</title><rect x="741.6" y="533" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="744.63" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr (275,374 samples, 0.03%)</title><rect x="149.6" y="325" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="152.56" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::_Vector_base (314,772 samples, 0.03%)</title><rect x="228.3" y="437" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="231.35" y="447.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::operator* (441,500 samples, 0.05%)</title><rect x="495.9" y="549" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="498.92" y="559.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::CreateTxPowerSpectralDensity (7,834,108 samples, 0.81%)</title><rect x="296.8" y="517" width="6.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="299.79" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (127,251 samples, 0.01%)</title><rect x="573.4" y="341" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="576.38" y="351.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s&amp; std::forward&lt;ns3::DlInfoListElement_s&amp;&gt; (127,101 samples, 0.01%)</title><rect x="509.9" y="533" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="512.87" y="543.5" ></text>
</g>
<g >
<title>ns3::EventId::operator= (1,128,226 samples, 0.12%)</title><rect x="640.0" y="533" width="0.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="643.03" y="543.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,394,732 samples, 0.14%)</title><rect x="453.9" y="245" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="456.93" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::_M_check_len (154,264 samples, 0.02%)</title><rect x="105.9" y="437" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="108.91" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_allocate (156,029 samples, 0.02%)</title><rect x="228.9" y="405" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="231.92" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters, std::allocator&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; &gt;::_M_erase_at_end (1,138,470 samples, 0.12%)</title><rect x="263.1" y="501" width="1.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="266.15" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (126,859 samples, 0.01%)</title><rect x="530.1" y="309" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="533.10" y="319.5" ></text>
</g>
<g >
<title>ns3::operator- (126,699 samples, 0.01%)</title><rect x="66.4" y="501" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="69.43" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (2,887,463 samples, 0.30%)</title><rect x="361.6" y="517" width="2.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="364.65" y="527.5" ></text>
</g>
<g >
<title>ns3::Object::Check (191,566 samples, 0.02%)</title><rect x="374.7" y="485" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="377.73" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_Rb_tree_iterator (155,635 samples, 0.02%)</title><rect x="529.7" y="293" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="532.71" y="303.5" ></text>
</g>
<g >
<title>ns3::Object::Construct (185,707 samples, 0.02%)</title><rect x="119.4" y="485" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="122.44" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; ns3::Create&lt;ns3::Packet, unsigned int&amp;&gt; (358,332 samples, 0.04%)</title><rect x="16.7" y="389" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="19.70" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel&gt;&amp;&gt; (4,463,471 samples, 0.46%)</title><rect x="298.7" y="485" width="3.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="301.72" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteFlowId_t, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::begin (229,777 samples, 0.02%)</title><rect x="177.6" y="469" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="180.64" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_create_storage (182,249 samples, 0.02%)</title><rect x="126.4" y="357" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="129.41" y="367.5" ></text>
</g>
<g >
<title>ns3::DlCqiLteControlMessage::GetDlCqi (1,645,474 samples, 0.17%)</title><rect x="442.6" y="357" width="1.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="445.63" y="367.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_move_a&lt;unsigned short*, unsigned short*, std::allocator&lt;unsigned short&gt; &gt; (192,952 samples, 0.02%)</title><rect x="106.2" y="437" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="109.22" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_lower_bound (876,343 samples, 0.09%)</title><rect x="650.3" y="469" width="0.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="653.31" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::~Ptr (357,858 samples, 0.04%)</title><rect x="743.9" y="549" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="746.86" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (161,229 samples, 0.02%)</title><rect x="403.3" y="469" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="406.26" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,650,378 samples, 0.17%)</title><rect x="242.6" y="469" width="1.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="245.58" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_erase (148,912 samples, 0.02%)</title><rect x="99.7" y="437" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="102.75" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (9,676,681 samples, 1.00%)</title><rect x="536.5" y="325" width="7.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="539.48" y="335.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (19,770,990 samples, 2.04%)</title><rect x="551.6" y="277" width="15.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="554.55" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::reserve (334,959 samples, 0.03%)</title><rect x="573.3" y="357" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="576.28" y="367.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (4,538,275 samples, 0.47%)</title><rect x="82.9" y="469" width="3.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="85.92" y="479.5" ></text>
</g>
<g >
<title>ns3::LteMiErrorModel::GetTbDecodificationStats (4,432,444 samples, 0.46%)</title><rect x="485.6" y="549" width="3.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="488.58" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, double&gt; &gt;::_M_ptr (275,175 samples, 0.03%)</title><rect x="292.6" y="485" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="295.56" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (1,777,558 samples, 0.18%)</title><rect x="652.6" y="421" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="655.59" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::begin (189,215 samples, 0.02%)</title><rect x="179.3" y="469" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="182.33" y="479.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*&gt; (938,823 samples, 0.10%)</title><rect x="211.9" y="357" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="214.87" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (6,605,149 samples, 0.68%)</title><rect x="539.0" y="309" width="5.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="541.95" y="319.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (345,669 samples, 0.04%)</title><rect x="674.0" y="501" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="677.04" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1,436,824 samples, 0.15%)</title><rect x="398.7" y="549" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="401.65" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_node (195,540 samples, 0.02%)</title><rect x="83.1" y="373" width="0.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="86.06" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (348,336 samples, 0.04%)</title><rect x="316.1" y="389" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="319.13" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::end (232,913 samples, 0.02%)</title><rect x="508.7" y="533" width="0.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="511.65" y="543.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (159,589 samples, 0.02%)</title><rect x="418.6" y="437" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="421.61" y="447.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModelUid (322,339 samples, 0.03%)</title><rect x="744.9" y="549" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="747.88" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (485,111 samples, 0.05%)</title><rect x="527.2" y="181" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="530.22" y="191.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::key_comp (125,297 samples, 0.01%)</title><rect x="84.2" y="437" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="87.20" y="447.5" ></text>
</g>
<g >
<title>unsigned long* std::copy&lt;unsigned long*, unsigned long*&gt; (538,409 samples, 0.06%)</title><rect x="199.6" y="421" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="202.61" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_insert_aux (300,220 samples, 0.03%)</title><rect x="196.6" y="469" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="199.57" y="479.5" ></text>
</g>
<g >
<title>ns3::AttributeConstructionList::AttributeConstructionList (965,115 samples, 0.10%)</title><rect x="371.2" y="501" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="374.20" y="511.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters::operator= (416,467 samples, 0.04%)</title><rect x="17.9" y="293" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="20.95" y="303.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s* std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlInfoListElement_s const*, std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt; &gt; &gt; (153,511 samples, 0.02%)</title><rect x="108.1" y="485" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="111.13" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::end (154,684 samples, 0.02%)</title><rect x="352.2" y="501" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="355.20" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (156,685 samples, 0.02%)</title><rect x="228.5" y="421" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="231.47" y="431.5" ></text>
</g>
<g >
<title>void  (154,843 samples, 0.02%)</title><rect x="283.0" y="485" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="286.00" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::find (1,053,943 samples, 0.11%)</title><rect x="330.3" y="485" width="0.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="333.32" y="495.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Iterator::Next (503,981 samples, 0.05%)</title><rect x="436.2" y="229" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="439.18" y="239.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (996,229 samples, 0.10%)</title><rect x="341.6" y="485" width="0.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="344.58" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node&gt; (418,686 samples, 0.04%)</title><rect x="60.0" y="437" width="0.4" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="63.04" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (659,007 samples, 0.07%)</title><rect x="270.3" y="373" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="273.32" y="383.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (711,878 samples, 0.07%)</title><rect x="125.0" y="309" width="0.6" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="127.98" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (152,219 samples, 0.02%)</title><rect x="83.1" y="325" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="86.09" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt;::_M_range_check (399,849 samples, 0.04%)</title><rect x="205.4" y="469" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="208.41" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::_M_valptr (444,605 samples, 0.05%)</title><rect x="570.4" y="261" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="573.37" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_Vector_base (412,677 samples, 0.04%)</title><rect x="583.9" y="245" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="586.86" y="255.5" ></text>
</g>
<g >
<title>ns3::Time::ToDouble (495,841 samples, 0.05%)</title><rect x="484.1" y="501" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="487.10" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (169,673 samples, 0.02%)</title><rect x="575.2" y="325" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="578.16" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (802,707 samples, 0.08%)</title><rect x="188.2" y="453" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="191.20" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (543,168 samples, 0.06%)</title><rect x="463.9" y="533" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="466.94" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt; &gt; &gt; &gt;::end (166,213 samples, 0.02%)</title><rect x="552.9" y="197" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="555.88" y="207.5" ></text>
</g>
<g >
<title>ns3::LteFfConverter::double2fpS11dot3 (159,428 samples, 0.02%)</title><rect x="478.3" y="309" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="481.31" y="319.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;ns3::MacCeListElement_s*&gt; std::__make_move_if_noexcept_iterator&lt;ns3::MacCeListElement_s, std::move_iterator&lt;ns3::MacCeListElement_s*&gt; &gt; (197,593 samples, 0.02%)</title><rect x="129.9" y="469" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="132.90" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (292,100 samples, 0.03%)</title><rect x="110.5" y="485" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="113.47" y="495.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::Serialize (128,769 samples, 0.01%)</title><rect x="562.1" y="165" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="565.06" y="175.5" ></text>
</g>
<g >
<title>ns3::Time::Time (193,863 samples, 0.02%)</title><rect x="738.0" y="533" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="741.02" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (154,473 samples, 0.02%)</title><rect x="673.6" y="485" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="676.63" y="495.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::ByteTagList (352,331 samples, 0.04%)</title><rect x="359.8" y="485" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="362.80" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_addr (279,763 samples, 0.03%)</title><rect x="22.5" y="261" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="25.53" y="271.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (314,249 samples, 0.03%)</title><rect x="11.2" y="405" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="14.17" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;::allocate (272,885 samples, 0.03%)</title><rect x="210.9" y="405" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="213.86" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::deallocate (229,384 samples, 0.02%)</title><rect x="392.3" y="485" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="395.26" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (648,464 samples, 0.07%)</title><rect x="56.9" y="453" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="59.94" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet const&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet const&gt; &gt; &gt; &gt;::begin (514,565 samples, 0.05%)</title><rect x="494.2" y="533" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="497.16" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, double const&amp;, double const&amp;&gt;::_Tuple_impl (646,830 samples, 0.07%)</title><rect x="749.5" y="469" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="752.47" y="479.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::~LteSpectrumSignalParametersDataFrame (2,421,676 samples, 0.25%)</title><rect x="652.5" y="469" width="1.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="655.49" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::HigherLayerSelected_s*&gt; (126,894 samples, 0.01%)</title><rect x="585.2" y="229" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="588.18" y="239.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (903,382 samples, 0.09%)</title><rect x="87.2" y="485" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="90.23" y="495.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (28,028,867 samples, 2.89%)</title><rect x="441.4" y="453" width="22.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="444.39" y="463.5" >v..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_List_base (597,918 samples, 0.06%)</title><rect x="366.4" y="469" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="369.39" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::allocate (155,343 samples, 0.02%)</title><rect x="331.7" y="405" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="334.66" y="415.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_assign_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (1,071,339 samples, 0.11%)</title><rect x="672.9" y="517" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="675.93" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (603,213 samples, 0.06%)</title><rect x="357.2" y="421" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="360.16" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;::~pair (940,561 samples, 0.10%)</title><rect x="505.5" y="437" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="508.52" y="447.5" ></text>
</g>
<g >
<title>ns3::LteMacSapProvider::TransmitPduParameters::TransmitPduParameters (318,692 samples, 0.03%)</title><rect x="551.7" y="261" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="554.69" y="271.5" ></text>
</g>
<g >
<title>double* std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (542,531 samples, 0.06%)</title><rect x="324.9" y="405" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="327.89" y="415.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (2,075,129 samples, 0.21%)</title><rect x="362.3" y="485" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="365.30" y="495.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a1&lt;false, double const*, double*&gt; (231,822 samples, 0.02%)</title><rect x="719.4" y="421" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="722.41" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::tuple&lt;ns3::MultiModelSpectrumChannel*&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, true, true&gt; (550,800 samples, 0.06%)</title><rect x="340.3" y="421" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="343.33" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::_M_valptr (349,350 samples, 0.04%)</title><rect x="224.2" y="421" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="227.20" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::operator[] (460,007 samples, 0.05%)</title><rect x="105.0" y="469" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="108.04" y="479.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (20,436,391 samples, 2.11%)</title><rect x="91.8" y="533" width="16.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="94.81" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void  (916,117 samples, 0.09%)</title><rect x="725.8" y="405" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="728.82" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;ns3::Callback&lt;void, ns3::DlInfoListElement_s&gt;::Callback&lt;void  (339,825 samples, 0.04%)</title><rect x="418.1" y="485" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="421.09" y="495.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (1,306,529 samples, 0.13%)</title><rect x="683.2" y="501" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="686.16" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_lower_bound (306,362 samples, 0.03%)</title><rect x="386.9" y="501" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="389.90" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::PacketBurst&gt;, false&gt;::_Head_base&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;&amp;&gt; (472,356 samples, 0.05%)</title><rect x="282.4" y="421" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="285.37" y="431.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::DlInfoListElement_s&gt;::Callback&lt;void  (152,653 samples, 0.02%)</title><rect x="418.2" y="469" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="421.24" y="479.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*, unsigned short&gt; (706,218 samples, 0.07%)</title><rect x="217.3" y="453" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="220.34" y="463.5" ></text>
</g>
<g >
<title>std::operator== (166,583 samples, 0.02%)</title><rect x="571.7" y="325" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="574.74" y="335.5" ></text>
</g>
<g >
<title>unsigned short* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (851,489 samples, 0.09%)</title><rect x="474.7" y="261" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="477.70" y="271.5" ></text>
</g>
<g >
<title>ns3::IidManager::LookupInformation (309,380 samples, 0.03%)</title><rect x="449.2" y="213" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="452.20" y="223.5" ></text>
</g>
<g >
<title>ns3::ConstantPositionMobilityModel::DoGetPosition (241,331 samples, 0.02%)</title><rect x="738.4" y="533" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="741.38" y="543.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (891,656 samples, 0.09%)</title><rect x="238.3" y="245" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="241.31" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (425,381 samples, 0.04%)</title><rect x="165.1" y="341" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="168.11" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (157,238 samples, 0.02%)</title><rect x="159.6" y="389" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="162.63" y="399.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (1,650,854 samples, 0.17%)</title><rect x="15.8" y="549" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="18.79" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, false&gt;::~_Head_base (200,623 samples, 0.02%)</title><rect x="708.6" y="405" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="711.63" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt;::~Ptr (455,774 samples, 0.05%)</title><rect x="736.2" y="533" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="739.20" y="543.5" ></text>
</g>
<g >
<title>operator new (152,677 samples, 0.02%)</title><rect x="397.5" y="453" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="400.46" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_ptr (443,193 samples, 0.05%)</title><rect x="85.2" y="357" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="88.23" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::~Ptr (192,870 samples, 0.02%)</title><rect x="737.9" y="533" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="740.87" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Acquire (316,058 samples, 0.03%)</title><rect x="160.4" y="437" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="163.40" y="447.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetRxSpectrumModel (536,054 samples, 0.06%)</title><rect x="704.8" y="549" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="707.81" y="559.5" ></text>
</g>
<g >
<title>unsigned short* std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; (745,310 samples, 0.08%)</title><rect x="217.3" y="469" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="220.31" y="479.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::SetTxPowerSpectralDensity (503,325 samples, 0.05%)</title><rect x="673.9" y="533" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="676.91" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (187,285 samples, 0.02%)</title><rect x="121.9" y="501" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="124.94" y="511.5" ></text>
</g>
<g >
<title>ns3::Time::FromDouble (185,818 samples, 0.02%)</title><rect x="121.0" y="517" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="123.96" y="527.5" ></text>
</g>
<g >
<title> (153,603 samples, 0.02%)</title><rect x="671.1" y="517" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="674.08" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (1,768,438 samples, 0.18%)</title><rect x="394.9" y="549" width="1.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="397.91" y="559.5" ></text>
</g>
<g >
<title>unsigned long* std::__niter_wrap&lt;unsigned long*&gt; (153,241 samples, 0.02%)</title><rect x="199.9" y="389" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="202.92" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (377,397 samples, 0.04%)</title><rect x="317.3" y="373" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="320.32" y="383.5" ></text>
</g>
<g >
<title>operator new (169,207 samples, 0.02%)</title><rect x="574.6" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="577.55" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt; ns3::Object::GetObject&lt;ns3::SpectrumPhy&gt; (1,036,584 samples, 0.11%)</title><rect x="671.2" y="533" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="674.21" y="543.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (645,888 samples, 0.07%)</title><rect x="318.8" y="389" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="321.81" y="399.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedDlConfigIndParameters::~SchedDlConfigIndParameters (210,908 samples, 0.02%)</title><rect x="95.4" y="453" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="98.42" y="463.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Destroy (238,924 samples, 0.02%)</title><rect x="36.6" y="757" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="39.64" y="767.5" ></text>
</g>
<g >
<title>ns3::BsrLteControlMessage::GetBsr (1,058,333 samples, 0.11%)</title><rect x="441.7" y="357" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="444.74" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (222,716 samples, 0.02%)</title><rect x="125.3" y="245" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="128.29" y="255.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoReportBufferStatus (682,380 samples, 0.07%)</title><rect x="17.9" y="341" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="20.88" y="351.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (359,626 samples, 0.04%)</title><rect x="382.0" y="485" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="385.02" y="495.5" ></text>
</g>
<g >
<title>double* std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (291,489 samples, 0.03%)</title><rect x="606.7" y="421" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="609.66" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (2,205,090 samples, 0.23%)</title><rect x="33.3" y="485" width="1.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="36.34" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::UlDciLteControlMessage&gt;::~Ptr (167,122 samples, 0.02%)</title><rect x="534.9" y="357" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="537.87" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (499,536 samples, 0.05%)</title><rect x="692.7" y="453" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="695.73" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_S_key (128,223 samples, 0.01%)</title><rect x="82.2" y="453" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="85.22" y="463.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (150,938 samples, 0.02%)</title><rect x="443.8" y="277" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="446.83" y="287.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (538,098 samples, 0.06%)</title><rect x="677.5" y="437" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="680.53" y="447.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (242,076 samples, 0.02%)</title><rect x="214.4" y="389" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="217.42" y="399.5" ></text>
</g>
<g >
<title>ns3::EventId::operator= (656,172 samples, 0.07%)</title><rect x="64.4" y="533" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="67.40" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::erase (1,047,417 samples, 0.11%)</title><rect x="254.9" y="517" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="257.88" y="527.5" ></text>
</g>
<g >
<title> (142,163 samples, 0.01%)</title><rect x="689.1" y="485" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="692.06" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (200,295 samples, 0.02%)</title><rect x="88.2" y="389" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="91.22" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (234,615 samples, 0.02%)</title><rect x="129.3" y="373" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="132.34" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (125,103 samples, 0.01%)</title><rect x="585.5" y="213" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="588.46" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (348,625 samples, 0.04%)</title><rect x="134.5" y="453" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="137.55" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (1,502,471 samples, 0.15%)</title><rect x="658.4" y="485" width="1.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="661.36" y="495.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::operator (35,103,998 samples, 3.62%)</title><rect x="577.1" y="517" width="28.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="580.13" y="527.5" >n..</text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (124,479 samples, 0.01%)</title><rect x="77.6" y="277" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="80.60" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::operator[] (339,246 samples, 0.03%)</title><rect x="99.5" y="469" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="102.47" y="479.5" ></text>
</g>
<g >
<title>unsigned char* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (388,698 samples, 0.04%)</title><rect x="214.3" y="405" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="217.30" y="415.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::StartTx (29,239,922 samples, 3.02%)</title><rect x="65.0" y="533" width="23.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="67.96" y="543.5" >n..</text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::operator= (817,259 samples, 0.08%)</title><rect x="307.9" y="501" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="310.92" y="511.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (158,082 samples, 0.02%)</title><rect x="326.0" y="453" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="329.01" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_S_minimum (352,600 samples, 0.04%)</title><rect x="237.1" y="421" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="240.07" y="431.5" ></text>
</g>
<g >
<title>ns3::Angles::NormalizeAngles (303,214 samples, 0.03%)</title><rect x="642.1" y="485" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="645.14" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_const_cast (162,110 samples, 0.02%)</title><rect x="662.3" y="389" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="665.32" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::DlInfoListElement_s*&gt; (1,227,211 samples, 0.13%)</title><rect x="256.0" y="453" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="258.95" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_get_Node_allocator (237,959 samples, 0.02%)</title><rect x="393.3" y="501" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="396.28" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::at (195,616 samples, 0.02%)</title><rect x="208.2" y="485" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="211.16" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node::operator (540,906 samples, 0.06%)</title><rect x="59.4" y="421" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="62.44" y="431.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::Serialize (424,109 samples, 0.04%)</title><rect x="21.3" y="325" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="24.29" y="335.5" ></text>
</g>
<g >
<title>ns3::DlDciLteControlMessage::DlDciLteControlMessage (1,384,545 samples, 0.14%)</title><rect x="158.9" y="437" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="161.95" y="447.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::DoSendLteControlMessage (498,633 samples, 0.05%)</title><rect x="95.8" y="421" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="98.80" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_lower_bound (393,630 samples, 0.04%)</title><rect x="24.0" y="357" width="0.3" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="26.97" y="367.5" ></text>
</g>
<g >
<title>ns3::CeBitmap_e* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::CeBitmap_e const*, std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt; &gt;, ns3::CeBitmap_e*&gt; (340,009 samples, 0.04%)</title><rect x="204.0" y="325" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="206.96" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (163,185 samples, 0.02%)</title><rect x="56.8" y="437" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="59.81" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*&gt; (240,649 samples, 0.02%)</title><rect x="146.1" y="309" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="149.08" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::vector (252,039 samples, 0.03%)</title><rect x="101.6" y="405" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="104.59" y="415.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (5,510,444 samples, 0.57%)</title><rect x="708.1" y="485" width="4.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="711.11" y="495.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*, ns3::CqiListElement_s&gt; (970,280 samples, 0.10%)</title><rect x="254.9" y="469" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="257.94" y="479.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (1,376,216 samples, 0.14%)</title><rect x="15.9" y="405" width="1.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="18.88" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (158,753 samples, 0.02%)</title><rect x="17.0" y="453" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="19.99" y="463.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::UlInfoListElement_s*&gt; (228,697 samples, 0.02%)</title><rect x="265.5" y="453" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="268.51" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::end (156,019 samples, 0.02%)</title><rect x="12.2" y="341" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="15.24" y="351.5" ></text>
</g>
<g >
<title>ns3::Tag::Tag (166,039 samples, 0.02%)</title><rect x="561.1" y="181" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="564.10" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::operator* (200,943 samples, 0.02%)</title><rect x="221.0" y="485" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="223.96" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned char, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::find (887,061 samples, 0.09%)</title><rect x="176.7" y="469" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="179.72" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (985,329 samples, 0.10%)</title><rect x="75.9" y="293" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="78.91" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::lower_bound (455,631 samples, 0.05%)</title><rect x="192.6" y="453" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="195.63" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_end (207,877 samples, 0.02%)</title><rect x="565.8" y="197" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="568.79" y="207.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteAmc&gt;::operator (193,493 samples, 0.02%)</title><rect x="182.7" y="485" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="185.70" y="495.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (821,377 samples, 0.08%)</title><rect x="124.9" y="341" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="127.90" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (3,653,483 samples, 0.38%)</title><rect x="269.9" y="453" width="2.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="272.89" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::~SpectrumSignalParameters (189,718 samples, 0.02%)</title><rect x="324.2" y="421" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="327.15" y="431.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetAttributeN (1,058,658 samples, 0.11%)</title><rect x="631.1" y="469" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="634.15" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="629" width="18.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="20.17" y="639.5" ></text>
</g>
<g >
<title> (1,100,918 samples, 0.11%)</title><rect x="759.3" y="693" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="762.32" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (635,410 samples, 0.07%)</title><rect x="666.8" y="405" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="669.75" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_base (154,166 samples, 0.02%)</title><rect x="629.7" y="469" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="632.66" y="479.5" ></text>
</g>
<g >
<title>ns3::LteMiErrorModel::Mib (2,166,389 samples, 0.22%)</title><rect x="487.1" y="533" width="1.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="490.14" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::clear (551,743 samples, 0.06%)</title><rect x="290.8" y="389" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="293.83" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (267,173 samples, 0.03%)</title><rect x="19.4" y="469" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="22.36" y="479.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::~CqiListElement_s (532,379 samples, 0.05%)</title><rect x="461.1" y="309" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="464.07" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, false&gt;::~_Head_base (896,241 samples, 0.09%)</title><rect x="772.8" y="517" width="0.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="775.83" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::allocate (185,863 samples, 0.02%)</title><rect x="261.0" y="325" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="264.02" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider::ReportBufferStatusParameters, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::empty (342,978 samples, 0.04%)</title><rect x="690.2" y="501" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="693.19" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt; std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt; &gt; (190,102 samples, 0.02%)</title><rect x="259.4" y="309" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="262.37" y="319.5" ></text>
</g>
<g >
<title>malloc (190,161 samples, 0.02%)</title><rect x="212.9" y="293" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="215.85" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; (2,253,875 samples, 0.23%)</title><rect x="634.1" y="485" width="1.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="637.11" y="495.5" ></text>
</g>
<g >
<title> (168,179 samples, 0.02%)</title><rect x="731.6" y="501" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="734.56" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::RemoveAll (323,410 samples, 0.03%)</title><rect x="453.6" y="85" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="456.57" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_M_move_nodes (181,701 samples, 0.02%)</title><rect x="357.3" y="373" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="360.29" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_key_compare&lt;std::less&lt;unsigned short&gt; &gt;::_Rb_tree_key_compare (269,610 samples, 0.03%)</title><rect x="190.4" y="437" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="193.42" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (863,125 samples, 0.09%)</title><rect x="654.9" y="469" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="657.92" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, false&gt;::_Head_base&lt;ns3::Ptr&lt;ns3::SpectrumValue const&gt;&amp;&gt; (302,346 samples, 0.03%)</title><rect x="709.6" y="389" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="712.65" y="399.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::~tbInfo_t (151,450 samples, 0.02%)</title><rect x="506.4" y="405" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="509.41" y="415.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (225,934 samples, 0.02%)</title><rect x="648.8" y="405" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="651.85" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_put_node (1,157,136 samples, 0.12%)</title><rect x="764.1" y="645" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="767.11" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*&gt; (1,471,329 samples, 0.15%)</title><rect x="290.2" y="437" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="293.18" y="447.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (1,298,579 samples, 0.13%)</title><rect x="352.9" y="405" width="1.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="355.95" y="415.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (2,983,151 samples, 0.31%)</title><rect x="17.2" y="581" width="2.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="20.17" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_M_move_nodes (375,374 samples, 0.04%)</title><rect x="621.9" y="373" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="624.92" y="383.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_construct_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (576,441 samples, 0.06%)</title><rect x="658.7" y="437" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="661.70" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt; &gt; &gt;::begin (202,714 samples, 0.02%)</title><rect x="613.4" y="533" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="616.38" y="543.5" ></text>
</g>
<g >
<title>unsigned int const&amp; std::__pair_get&lt;0ul&gt;::__move_get&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (150,244 samples, 0.02%)</title><rect x="660.0" y="485" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="662.99" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::vector (152,454 samples, 0.02%)</title><rect x="456.7" y="245" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="459.65" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::operator= (427,945 samples, 0.04%)</title><rect x="134.8" y="469" width="0.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="137.83" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_addr (164,052 samples, 0.02%)</title><rect x="185.0" y="437" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="188.04" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (363,009 samples, 0.04%)</title><rect x="83.2" y="357" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="86.25" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;::_M_valptr (306,649 samples, 0.03%)</title><rect x="181.9" y="405" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="184.90" y="415.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (33,880,851 samples, 3.49%)</title><rect x="146.6" y="469" width="27.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="149.63" y="479.5" >n..</text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetMobility (284,534 samples, 0.03%)</title><rect x="67.0" y="517" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="70.04" y="527.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::copy&lt;std::_Bit_const_iterator, std::_Bit_iterator&gt; (614,787 samples, 0.06%)</title><rect x="199.1" y="421" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="202.12" y="431.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a1&lt;false, double const*, double*&gt; (368,836 samples, 0.04%)</title><rect x="412.6" y="405" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="415.62" y="415.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (234,373 samples, 0.02%)</title><rect x="17.4" y="309" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="20.39" y="319.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::RefreshHarqProcesses (154,047 samples, 0.02%)</title><rect x="98.4" y="469" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="101.39" y="479.5" ></text>
</g>
<g >
<title>ns3::Time::FromDouble (2,083,512 samples, 0.21%)</title><rect x="682.5" y="533" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="685.53" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::push_back (337,881 samples, 0.03%)</title><rect x="689.3" y="453" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="692.33" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_M_erase_at_end (153,047 samples, 0.02%)</title><rect x="379.5" y="293" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="382.52" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (2,163,597 samples, 0.22%)</title><rect x="498.4" y="517" width="1.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="501.42" y="527.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (228,584 samples, 0.02%)</title><rect x="689.4" y="421" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="692.42" y="431.5" ></text>
</g>
<g >
<title>ns3::EventId::EventId (1,674,500 samples, 0.17%)</title><rect x="38.0" y="725" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="41.01" y="735.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (8,521,614 samples, 0.88%)</title><rect x="705.9" y="517" width="6.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="708.88" y="527.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (192,143 samples, 0.02%)</title><rect x="96.2" y="405" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="99.20" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (1,143,303 samples, 0.12%)</title><rect x="652.8" y="325" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="655.77" y="335.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ScheduleWithContext (475,136 samples, 0.05%)</title><rect x="115.9" y="453" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="118.94" y="463.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (356,896 samples, 0.04%)</title><rect x="442.3" y="293" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="445.31" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::operator* (203,182 samples, 0.02%)</title><rect x="713.3" y="501" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="716.33" y="511.5" ></text>
</g>
<g >
<title>ns3::Time::GetNanoSeconds (316,166 samples, 0.03%)</title><rect x="16.4" y="357" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="19.45" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::end (195,237 samples, 0.02%)</title><rect x="429.2" y="277" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="432.22" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (232,404 samples, 0.02%)</title><rect x="332.5" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="335.49" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (186,148 samples, 0.02%)</title><rect x="120.4" y="517" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="123.44" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::push_back (1,860,199 samples, 0.19%)</title><rect x="148.3" y="405" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="151.35" y="415.5" ></text>
</g>
<g >
<title>ns3::SpectrumConverter::Convert (333,104 samples, 0.03%)</title><rect x="115.1" y="485" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="118.05" y="495.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy*&amp; std::__get_helper&lt;0ul, ns3::LteEnbPhy*&gt; (377,927 samples, 0.04%)</title><rect x="752.3" y="581" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="755.34" y="591.5" ></text>
</g>
<g >
<title>pthread_self@plt (151,149 samples, 0.02%)</title><rect x="280.2" y="485" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="283.16" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (551,017 samples, 0.06%)</title><rect x="222.4" y="437" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="225.41" y="447.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::FindAndEventuallyAddTxSpectrumModel (1,340,325 samples, 0.14%)</title><rect x="73.2" y="517" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="76.17" y="527.5" ></text>
</g>
<g >
<title>ns3::LteInterference::DoAddSignal (2,731,360 samples, 0.28%)</title><rect x="712.7" y="517" width="2.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="715.74" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::tuple&lt;ns3::MultiModelSpectrumChannel*&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, true, true&gt; (714,235 samples, 0.07%)</title><rect x="666.7" y="437" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="669.69" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;::_M_ptr (375,886 samples, 0.04%)</title><rect x="321.5" y="405" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="324.49" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::_S_key (303,374 samples, 0.03%)</title><rect x="27.0" y="261" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="30.01" y="271.5" ></text>
</g>
<g >
<title>ns3::EventImpl::~EventImpl (201,506 samples, 0.02%)</title><rect x="770.8" y="661" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="773.79" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;::base (160,882 samples, 0.02%)</title><rect x="444.2" y="213" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="447.21" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::push_back (3,560,217 samples, 0.37%)</title><rect x="478.6" y="309" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="481.56" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move_a1&lt;true, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (189,156 samples, 0.02%)</title><rect x="117.8" y="453" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="120.75" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node_base*&amp;, std::_Rb_tree_node_base*&amp;&gt; (149,261 samples, 0.02%)</title><rect x="336.2" y="373" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="339.24" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, double&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, double&gt; &gt; &gt;::_M_mbegin (153,413 samples, 0.02%)</title><rect x="294.7" y="485" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="297.72" y="495.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator++ (234,590 samples, 0.02%)</title><rect x="500.7" y="517" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="503.67" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_M_allocate (239,647 samples, 0.02%)</title><rect x="514.1" y="501" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="517.07" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (757,202 samples, 0.08%)</title><rect x="303.3" y="501" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="306.31" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumModel, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumModel&gt; &gt;::Ref (142,470 samples, 0.01%)</title><rect x="411.7" y="469" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="414.71" y="479.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::GetInstanceTypeId (237,147 samples, 0.02%)</title><rect x="490.7" y="517" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="493.68" y="527.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::~LteSpectrumSignalParametersDataFrame (3,401,494 samples, 0.35%)</title><rect x="75.3" y="453" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.35" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (890,212 samples, 0.09%)</title><rect x="108.5" y="469" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="111.50" y="479.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ConstructSelf (2,247,437 samples, 0.23%)</title><rect x="630.9" y="485" width="1.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="633.87" y="495.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::__allocated_ptr (192,427 samples, 0.02%)</title><rect x="149.1" y="357" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="152.06" y="367.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::Copy (696,783 samples, 0.07%)</title><rect x="644.7" y="469" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="647.66" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::list (190,083 samples, 0.02%)</title><rect x="447.3" y="277" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="450.33" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (187,232 samples, 0.02%)</title><rect x="300.7" y="357" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="303.67" y="367.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (480,171 samples, 0.05%)</title><rect x="733.3" y="421" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="736.30" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::list (635,025 samples, 0.07%)</title><rect x="366.4" y="485" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="369.36" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,859,304 samples, 0.19%)</title><rect x="164.6" y="389" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="167.63" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::~pair (193,911 samples, 0.02%)</title><rect x="104.0" y="325" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="106.96" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (153,635 samples, 0.02%)</title><rect x="457.2" y="261" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="460.19" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (392,648 samples, 0.04%)</title><rect x="612.9" y="437" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="615.90" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move_a1&lt;true, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (843,550 samples, 0.09%)</title><rect x="357.1" y="469" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="360.09" y="479.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (2,399,693 samples, 0.25%)</title><rect x="706.1" y="501" width="2.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="709.12" y="511.5" ></text>
</g>
<g >
<title>ns3::Singleton&lt;ns3::IidManager&gt;::Get (322,923 samples, 0.03%)</title><rect x="631.7" y="453" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="634.74" y="463.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetParent (436,938 samples, 0.05%)</title><rect x="34.6" y="421" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="37.61" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (440,906 samples, 0.05%)</title><rect x="216.4" y="469" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="219.39" y="479.5" ></text>
</g>
<g >
<title> (167,770 samples, 0.02%)</title><rect x="565.2" y="213" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="568.23" y="223.5" ></text>
</g>
<g >
<title>unsigned char* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (150,938 samples, 0.02%)</title><rect x="443.8" y="261" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="446.83" y="271.5" ></text>
</g>
<g >
<title>[libm.so.6] (236,481 samples, 0.02%)</title><rect x="486.3" y="501" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="489.25" y="511.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*, unsigned short&gt; (893,468 samples, 0.09%)</title><rect x="474.7" y="277" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="477.67" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (279,119 samples, 0.03%)</title><rect x="714.3" y="453" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="717.27" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (764,919 samples, 0.08%)</title><rect x="85.1" y="389" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="88.07" y="399.5" ></text>
</g>
<g >
<title>ns3::LteInterference::AddSignal (11,691,674 samples, 1.21%)</title><rect x="705.8" y="533" width="9.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="708.75" y="543.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (150,413 samples, 0.02%)</title><rect x="121.0" y="501" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="123.99" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (1,002,557 samples, 0.10%)</title><rect x="729.5" y="453" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="732.54" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,810,198 samples, 2.15%)</title><rect x="422.0" y="501" width="16.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="424.97" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::_S_key (552,315 samples, 0.06%)</title><rect x="244.8" y="437" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="247.81" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (574,140 samples, 0.06%)</title><rect x="677.5" y="453" width="0.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="680.53" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (449,666 samples, 0.05%)</title><rect x="88.1" y="501" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="91.09" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::push_back (3,070,728 samples, 0.32%)</title><rect x="692.0" y="501" width="2.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="695.02" y="511.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (709,970 samples, 0.07%)</title><rect x="640.4" y="453" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="643.37" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; ns3::Create&lt;ns3::Packet, unsigned int&amp;&gt; (501,720 samples, 0.05%)</title><rect x="19.0" y="405" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="21.95" y="415.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator++ (150,969 samples, 0.02%)</title><rect x="572.2" y="357" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="575.22" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::at (245,216 samples, 0.03%)</title><rect x="246.5" y="485" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="249.45" y="495.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (269,841 samples, 0.03%)</title><rect x="497.4" y="501" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="500.37" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Ptr (193,783 samples, 0.02%)</title><rect x="151.9" y="373" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="154.87" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (860,343 samples, 0.09%)</title><rect x="774.0" y="293" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="777.02" y="303.5" ></text>
</g>
<g >
<title>decltype  (189,123 samples, 0.02%)</title><rect x="358.5" y="501" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="361.53" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt; std::tie&lt;double const, double const, double const&gt; (1,173,308 samples, 0.12%)</title><rect x="749.0" y="517" width="1.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="752.04" y="527.5" ></text>
</g>
<g >
<title>ns3::RarLteControlMessage::~RarLteControlMessage (509,242 samples, 0.05%)</title><rect x="167.1" y="389" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="170.06" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::Ptr&lt;ns3::UeManager&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::find (1,529,532 samples, 0.16%)</title><rect x="28.0" y="341" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="30.97" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; (2,253,875 samples, 0.23%)</title><rect x="634.1" y="501" width="1.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="637.11" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2,809,773 samples, 0.29%)</title><rect x="396.4" y="549" width="2.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="399.39" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (157,554 samples, 0.02%)</title><rect x="132.1" y="469" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="135.12" y="479.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, double&gt; &gt;::operator (261,404 samples, 0.03%)</title><rect x="295.7" y="469" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="298.71" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::end (126,641 samples, 0.01%)</title><rect x="566.6" y="197" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="569.59" y="207.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::Copy (7,245,802 samples, 0.75%)</title><rect x="313.7" y="501" width="5.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="316.75" y="511.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (10,424,431 samples, 1.07%)</title><rect x="269.2" y="501" width="8.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="272.19" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::~map (1,140,266 samples, 0.12%)</title><rect x="232.8" y="469" width="0.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="235.83" y="479.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator[] (162,486 samples, 0.02%)</title><rect x="195.7" y="453" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="198.70" y="463.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (304,758 samples, 0.03%)</title><rect x="620.5" y="485" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="623.55" y="495.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;unsigned short*, unsigned long, unsigned short&gt; (819,768 samples, 0.08%)</title><rect x="252.1" y="421" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="255.08" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (325,437 samples, 0.03%)</title><rect x="60.8" y="389" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="63.84" y="399.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::HigherLayerSelected_s, ns3::HigherLayerSelected_s const&amp;&gt; (277,299 samples, 0.03%)</title><rect x="442.8" y="229" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="445.78" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (382,898 samples, 0.04%)</title><rect x="195.4" y="453" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="198.39" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::vector (941,823 samples, 0.10%)</title><rect x="365.6" y="469" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="368.60" y="479.5" ></text>
</g>
<g >
<title>unsigned int&amp; std::_Mu&lt;unsigned int, false, false&gt;::operator (264,404 samples, 0.03%)</title><rect x="758.0" y="597" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="761.00" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_base (461,286 samples, 0.05%)</title><rect x="371.6" y="469" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="374.60" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (4,972,136 samples, 0.51%)</title><rect x="11.4" y="549" width="4.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.43" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (161,967 samples, 0.02%)</title><rect x="600.2" y="277" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="603.21" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::deallocate (181,716 samples, 0.02%)</title><rect x="378.3" y="261" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="381.26" y="271.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*, ns3::CqiListElement_s&gt; (1,085,784 samples, 0.11%)</title><rect x="92.1" y="469" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="95.06" y="479.5" ></text>
</g>
<g >
<title>ns3::Time::~Time (227,882 samples, 0.02%)</title><rect x="339.2" y="453" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="342.19" y="463.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (827,732 samples, 0.09%)</title><rect x="774.0" y="261" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="777.05" y="271.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (180,536 samples, 0.02%)</title><rect x="697.8" y="517" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="700.79" y="527.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (2,269,146 samples, 0.23%)</title><rect x="378.8" y="325" width="1.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="381.81" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::push_back (551,584 samples, 0.06%)</title><rect x="636.1" y="533" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="639.13" y="543.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (1,947,662 samples, 0.20%)</title><rect x="711.0" y="453" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="713.98" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_realloc_insert&lt;unsigned short&gt; (2,020,223 samples, 0.21%)</title><rect x="218.3" y="453" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="221.35" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_Vector_base (382,238 samples, 0.04%)</title><rect x="174.2" y="453" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="177.19" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::_M_valptr (354,718 samples, 0.04%)</title><rect x="24.0" y="325" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="26.97" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (277,907 samples, 0.03%)</title><rect x="455.2" y="293" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="458.25" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (393,630 samples, 0.04%)</title><rect x="24.0" y="389" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="26.97" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (169,080 samples, 0.02%)</title><rect x="408.1" y="469" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="411.11" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::find (155,011 samples, 0.02%)</title><rect x="97.5" y="421" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="100.53" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (743,951 samples, 0.08%)</title><rect x="394.1" y="501" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.13" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (155,976 samples, 0.02%)</title><rect x="83.7" y="373" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="86.71" y="383.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Unref (9,603,406 samples, 0.99%)</title><rect x="769.6" y="725" width="7.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="772.57" y="735.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::map (4,812,209 samples, 0.50%)</title><rect x="236.7" y="485" width="3.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="239.73" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt; &gt;::_M_lower_bound (812,518 samples, 0.08%)</title><rect x="458.4" y="245" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="461.37" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::operator= (1,354,571 samples, 0.14%)</title><rect x="25.6" y="293" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="28.58" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (2,251,041 samples, 0.23%)</title><rect x="84.3" y="437" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="87.30" y="447.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ConstructSelf (267,173 samples, 0.03%)</title><rect x="19.4" y="421" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="22.36" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_get_Tp_allocator (192,155 samples, 0.02%)</title><rect x="476.2" y="293" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="479.16" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_fill_insert (1,581,674 samples, 0.16%)</title><rect x="510.9" y="533" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="513.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (244,239 samples, 0.03%)</title><rect x="88.2" y="421" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="91.22" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; const&amp; std::forward&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (183,511 samples, 0.02%)</title><rect x="626.0" y="469" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="628.95" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::UeManager&gt;::Ptr (155,695 samples, 0.02%)</title><rect x="27.8" y="341" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="30.75" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp; std::__get_helper&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (350,980 samples, 0.04%)</title><rect x="757.1" y="581" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="760.12" y="591.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (240,367 samples, 0.02%)</title><rect x="401.4" y="533" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="404.38" y="543.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_assign_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (2,878,472 samples, 0.30%)</title><rect x="732.1" y="501" width="2.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="735.11" y="511.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (243,501 samples, 0.03%)</title><rect x="607.4" y="501" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="610.38" y="511.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (731,227 samples, 0.08%)</title><rect x="474.8" y="245" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="477.80" y="255.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (1,860,884 samples, 0.19%)</title><rect x="259.1" y="341" width="1.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="262.11" y="351.5" ></text>
</g>
<g >
<title>ns3::PropagationLossModel::CalcRxPower (3,683,031 samples, 0.38%)</title><rect x="738.6" y="549" width="2.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="741.57" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (351,602 samples, 0.04%)</title><rect x="394.4" y="421" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.38" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7,793,846 samples, 0.80%)</title><rect x="771.0" y="661" width="6.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="773.96" y="671.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Acquire (709,181 samples, 0.07%)</title><rect x="768.8" y="709" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="771.75" y="719.5" ></text>
</g>
<g >
<title>int&amp; std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (1,496,718 samples, 0.15%)</title><rect x="589.8" y="261" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="592.85" y="271.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (356,634 samples, 0.04%)</title><rect x="442.7" y="261" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="445.72" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::push_back (1,940,647 samples, 0.20%)</title><rect x="22.0" y="341" width="1.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="25.03" y="351.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator* (148,833 samples, 0.02%)</title><rect x="620.8" y="501" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="623.79" y="511.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::GetSystemId (155,576 samples, 0.02%)</title><rect x="154.4" y="341" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="157.42" y="351.5" ></text>
</g>
<g >
<title>ns3::EventImpl::Invoke (892,884,786 samples, 92.07%)</title><rect x="40.1" y="725" width="718.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="43.05" y="735.5" >ns3::EventImpl::Invoke</text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (476,638 samples, 0.05%)</title><rect x="666.9" y="389" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="669.88" y="399.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartFrame (314,249 samples, 0.03%)</title><rect x="11.2" y="581" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="14.17" y="591.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::operator= (452,044 samples, 0.05%)</title><rect x="593.2" y="293" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="596.21" y="303.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy*&amp; std::__get_helper&lt;0ul, ns3::LteSpectrumPhy*&gt; (532,195 samples, 0.05%)</title><rect x="753.4" y="581" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="756.36" y="591.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::DoSendLteControlMessage (2,809,761 samples, 0.29%)</title><rect x="148.3" y="437" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="151.28" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::~tuple (489,613 samples, 0.05%)</title><rect x="708.4" y="453" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="711.40" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (168,940 samples, 0.02%)</title><rect x="78.5" y="437" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="81.52" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (1,239,705 samples, 0.13%)</title><rect x="377.7" y="357" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="380.69" y="367.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned int, unsigned int, unsigned short, unsigned char, unsigned short, unsigned char&gt;::operator (198,920 samples, 0.02%)</title><rect x="231.2" y="453" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="234.25" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy* ns3::PeekPointer&lt;ns3::LteSpectrumPhy&gt; (364,052 samples, 0.04%)</title><rect x="469.6" y="389" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="472.63" y="399.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (16,091,885 samples, 1.66%)</title><rect x="267.6" y="533" width="12.9" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="270.56" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (192,748 samples, 0.02%)</title><rect x="108.6" y="341" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="111.62" y="351.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::UlInfoListElement_s&gt; (157,331 samples, 0.02%)</title><rect x="265.6" y="437" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="268.57" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::_S_key (289,376 samples, 0.03%)</title><rect x="429.7" y="229" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="432.74" y="239.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::DlInfoListElement_s*&gt; (852,686 samples, 0.09%)</title><rect x="132.4" y="453" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="135.40" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (324,769 samples, 0.03%)</title><rect x="611.9" y="389" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="614.94" y="399.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a1&lt;false, ns3::DlInfoListElement_s::HarqStatus_e const*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (321,532 samples, 0.03%)</title><rect x="444.3" y="229" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="447.34" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;void  (200,340 samples, 0.02%)</title><rect x="423.0" y="405" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="426.05" y="415.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartRxData (12,537,177 samples, 1.29%)</title><rect x="715.2" y="533" width="10.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="718.16" y="543.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoTransmitPdu (579,238 samples, 0.06%)</title><rect x="17.2" y="357" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="20.17" y="367.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetPacketBurst (30,682,505 samples, 3.16%)</title><rect x="358.7" y="549" width="24.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="361.71" y="559.5" >n..</text>
</g>
<g >
<title>ns3::LteEnbPhy::PhyPduReceived (14,218,237 samples, 1.47%)</title><rect x="423.5" y="373" width="11.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="426.51" y="383.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a2&lt;false, int const*, int*&gt; (130,133 samples, 0.01%)</title><rect x="574.2" y="245" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="577.21" y="255.5" ></text>
</g>
<g >
<title>bool std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (195,009 samples, 0.02%)</title><rect x="307.1" y="453" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="310.07" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (1,020,384 samples, 0.11%)</title><rect x="397.6" y="517" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="400.59" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters, std::allocator&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; &gt;::_M_range_check (158,349 samples, 0.02%)</title><rect x="262.9" y="501" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="265.89" y="511.5" ></text>
</g>
<g >
<title>double* std::fill_n&lt;double*, unsigned long, double&gt; (187,050 samples, 0.02%)</title><rect x="677.7" y="389" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="680.69" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr (266,180 samples, 0.03%)</title><rect x="319.1" y="293" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="322.05" y="303.5" ></text>
</g>
<g >
<title>void std::fill&lt;std::_Bit_iterator, bool&gt; (148,785 samples, 0.02%)</title><rect x="248.6" y="437" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="251.63" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (160,698 samples, 0.02%)</title><rect x="610.0" y="373" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="612.97" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::find (842,898 samples, 0.09%)</title><rect x="223.1" y="485" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="226.07" y="495.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, unsigned char, unsigned int&gt;::operator (664,705 samples, 0.07%)</title><rect x="566.9" y="261" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="569.92" y="271.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (716,762 samples, 0.07%)</title><rect x="78.2" y="501" width="0.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="81.15" y="511.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;::operator (124,333 samples, 0.01%)</title><rect x="434.1" y="261" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="437.10" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (233,103 samples, 0.02%)</title><rect x="668.7" y="389" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="671.65" y="399.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::insert&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (987,508 samples, 0.10%)</title><rect x="673.0" y="501" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="675.96" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy (156,128 samples, 0.02%)</title><rect x="667.1" y="277" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="670.07" y="287.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (1,481,592 samples, 0.15%)</title><rect x="603.9" y="325" width="1.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="606.91" y="335.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (481,444 samples, 0.05%)</title><rect x="519.2" y="309" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="522.19" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (159,551 samples, 0.02%)</title><rect x="366.9" y="501" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="369.87" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::CreateUlTxPowerSpectralDensity (151,318 samples, 0.02%)</title><rect x="614.4" y="517" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="617.41" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (146,089 samples, 0.02%)</title><rect x="688.9" y="389" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="691.91" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (202,804 samples, 0.02%)</title><rect x="593.4" y="149" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="596.38" y="159.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumPhy&gt;::Acquire (332,097 samples, 0.03%)</title><rect x="469.9" y="389" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="472.92" y="399.5" ></text>
</g>
<g >
<title>decltype  (146,680 samples, 0.02%)</title><rect x="251.8" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="254.81" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (209,498 samples, 0.02%)</title><rect x="605.4" y="501" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="608.40" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::pair (1,137,947 samples, 0.12%)</title><rect x="276.0" y="485" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="278.99" y="495.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (27,749,977 samples, 2.86%)</title><rect x="441.6" y="405" width="22.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="444.62" y="415.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy (326,142 samples, 0.03%)</title><rect x="88.2" y="469" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="91.19" y="479.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_List_iterator (196,537 samples, 0.02%)</title><rect x="148.5" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="151.51" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (678,895 samples, 0.07%)</title><rect x="392.0" y="533" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="394.97" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::_M_valptr (187,088 samples, 0.02%)</title><rect x="689.9" y="469" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="692.91" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Copy (422,077 samples, 0.04%)</title><rect x="114.0" y="421" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="116.96" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteSpectrumPhy*&gt;::_M_head (369,313 samples, 0.04%)</title><rect x="753.5" y="565" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="756.49" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_check_len (474,800 samples, 0.05%)</title><rect x="511.8" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="514.80" y="527.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::DequeueUlDci[abi:cxx11] (9,233,350 samples, 0.95%)</title><rect x="285.0" y="549" width="7.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="288.01" y="559.5" ></text>
</g>
<g >
<title>ns3::Object::Dispose (202,781 samples, 0.02%)</title><rect x="36.7" y="501" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="39.67" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;ns3::Callback&lt;void, ns3::UlInfoListElement_s&gt;::Callback&lt;void  (442,482 samples, 0.05%)</title><rect x="438.9" y="485" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="441.93" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_ptr (156,072 samples, 0.02%)</title><rect x="297.7" y="421" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="300.66" y="431.5" ></text>
</g>
<g >
<title> (193,493 samples, 0.02%)</title><rect x="182.7" y="469" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="185.70" y="479.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (185,369 samples, 0.02%)</title><rect x="117.4" y="405" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="120.37" y="415.5" ></text>
</g>
<g >
<title>unsigned char* std::__fill_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (604,594 samples, 0.06%)</title><rect x="460.4" y="181" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="463.45" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_M_check_len (351,521 samples, 0.04%)</title><rect x="202.6" y="453" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="205.61" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteUeMac::LcInfo, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::begin (638,035 samples, 0.07%)</title><rect x="571.0" y="325" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="574.00" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (603,299 samples, 0.06%)</title><rect x="407.6" y="469" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="410.62" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteChunkProcessor&gt;::operator (207,486 samples, 0.02%)</title><rect x="408.8" y="533" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="411.85" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::operator= (2,127,957 samples, 0.22%)</title><rect x="206.1" y="485" width="1.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="209.07" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (626,961 samples, 0.06%)</title><rect x="394.2" y="453" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.19" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::_M_ptr (236,021 samples, 0.02%)</title><rect x="438.1" y="245" width="0.2" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="441.15" y="255.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (659,540 samples, 0.07%)</title><rect x="166.3" y="405" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="169.26" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::operator[] (236,769 samples, 0.02%)</title><rect x="375.7" y="517" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="378.68" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_ptr (241,718 samples, 0.02%)</title><rect x="496.1" y="517" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="499.09" y="527.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::Packet&gt;::Delete (2,691,525 samples, 0.28%)</title><rect x="451.7" y="133" width="2.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="454.73" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::deallocate (887,233 samples, 0.09%)</title><rect x="764.3" y="613" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="767.33" y="623.5" ></text>
</g>
<g >
<title>decltype  (273,884 samples, 0.03%)</title><rect x="383.2" y="485" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="386.17" y="495.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters::~SchedDlCqiInfoReqParameters (560,297 samples, 0.06%)</title><rect x="131.0" y="517" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="134.03" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (147,114 samples, 0.02%)</title><rect x="94.4" y="453" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="97.40" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; (318,233 samples, 0.03%)</title><rect x="376.2" y="517" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="379.16" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;true&gt;::__destroy&lt;unsigned char*&gt; (197,227 samples, 0.02%)</title><rect x="686.4" y="405" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="689.38" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Acquire (163,101 samples, 0.02%)</title><rect x="742.9" y="533" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="745.93" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (381,298 samples, 0.04%)</title><rect x="159.3" y="389" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="162.26" y="399.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::DoSendLteControlMessage (1,153,573 samples, 0.12%)</title><rect x="598.1" y="309" width="0.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="601.07" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_Vector_impl_data::_Vector_impl_data (243,120 samples, 0.03%)</title><rect x="131.8" y="453" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="134.83" y="463.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::Unref (160,375 samples, 0.02%)</title><rect x="150.4" y="405" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="153.41" y="415.5" ></text>
</g>
<g >
<title>ns3::NodeListPriv::DoDispose (238,924 samples, 0.02%)</title><rect x="36.6" y="549" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="39.64" y="559.5" ></text>
</g>
<g >
<title>std::__fill_bvector (161,544 samples, 0.02%)</title><rect x="200.8" y="389" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="203.78" y="399.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*&gt; (178,382 samples, 0.02%)</title><rect x="101.6" y="341" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="104.62" y="351.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s::HigherLayerSelected_s (277,299 samples, 0.03%)</title><rect x="442.8" y="213" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="445.78" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;ns3::Scheduler::EventKey&gt;::operator (727,810 samples, 0.08%)</title><rect x="337.5" y="373" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="340.50" y="383.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Now (158,066 samples, 0.02%)</title><rect x="391.1" y="533" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="394.08" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_insert_node (278,782 samples, 0.03%)</title><rect x="706.8" y="389" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="709.77" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_valptr (191,519 samples, 0.02%)</title><rect x="177.0" y="405" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="180.00" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (484,223 samples, 0.05%)</title><rect x="437.1" y="277" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="440.08" y="287.5" ></text>
</g>
<g >
<title>ns3::ByteTagIterator::Item::GetTag (594,222 samples, 0.06%)</title><rect x="424.6" y="245" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="427.62" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Acquire (149,428 samples, 0.02%)</title><rect x="368.4" y="501" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="371.36" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::insert (276,956 samples, 0.03%)</title><rect x="105.6" y="453" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="108.60" y="463.5" ></text>
</g>
<g >
<title>ns3::LteControlMessage::GetMessageType (150,641 samples, 0.02%)</title><rect x="284.9" y="549" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="287.89" y="559.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::Peek (1,947,014 samples, 0.20%)</title><rect x="489.7" y="533" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="492.70" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::tuple&lt;ns3::LteInterference*&amp;, ns3::Ptr&lt;ns3::SpectrumValue const&gt;&amp;, unsigned int&amp;, true, true&gt; (1,652,564 samples, 0.17%)</title><rect x="708.9" y="437" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="711.91" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move_a1&lt;true, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (1,149,860 samples, 0.12%)</title><rect x="621.6" y="469" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="624.61" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetTypeId (158,072 samples, 0.02%)</title><rect x="633.0" y="501" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="636.00" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_M_ptr (151,932 samples, 0.02%)</title><rect x="356.1" y="469" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="359.07" y="479.5" ></text>
</g>
<g >
<title>std::operator== (305,665 samples, 0.03%)</title><rect x="328.3" y="485" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="331.31" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::~_Vector_base (186,345 samples, 0.02%)</title><rect x="461.3" y="261" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="464.28" y="271.5" ></text>
</g>
<g >
<title> (196,328 samples, 0.02%)</title><rect x="154.7" y="373" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="157.73" y="383.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (126,158 samples, 0.01%)</title><rect x="516.1" y="469" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="519.12" y="479.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s&gt; (324,739 samples, 0.03%)</title><rect x="593.3" y="245" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="596.31" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (161,317 samples, 0.02%)</title><rect x="685.1" y="501" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="688.12" y="511.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (415,834 samples, 0.04%)</title><rect x="15.5" y="517" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="18.45" y="527.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (1,871,248 samples, 0.19%)</title><rect x="616.9" y="501" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.88" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::EndRxDlCtrl (120,196,089 samples, 12.39%)</title><rect x="515.3" y="565" width="96.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="518.27" y="575.5" >ns3::LteSpe..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;* std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (783,256 samples, 0.08%)</title><rect x="661.0" y="389" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="664.02" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_impl::_Vector_impl (333,132 samples, 0.03%)</title><rect x="520.4" y="309" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="523.43" y="319.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (1,650,854 samples, 0.17%)</title><rect x="15.8" y="485" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="18.79" y="495.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::BuildDataListElement_s&gt; (677,511 samples, 0.07%)</title><rect x="145.7" y="373" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="148.73" y="383.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (2,313,097 samples, 0.24%)</title><rect x="316.6" y="421" width="1.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="319.56" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::PacketMetadata::Data*, std::allocator&lt;ns3::PacketMetadata::Data*&gt; &gt;::end (160,537 samples, 0.02%)</title><rect x="558.6" y="181" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="561.58" y="191.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (198,551 samples, 0.02%)</title><rect x="233.0" y="373" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="235.95" y="383.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoTransmitPdu (886,429 samples, 0.09%)</title><rect x="17.2" y="389" width="0.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="20.17" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_S_key (202,540 samples, 0.02%)</title><rect x="11.9" y="325" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="14.92" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_create_storage (153,635 samples, 0.02%)</title><rect x="457.2" y="245" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="460.19" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double const&amp;&gt;::_Tuple_impl (258,015 samples, 0.03%)</title><rect x="749.8" y="453" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="752.78" y="463.5" ></text>
</g>
<g >
<title>ns3::Buffer::Data* const&amp; std::forward&lt;ns3::Buffer::Data* const&amp;&gt; (201,496 samples, 0.02%)</title><rect x="452.3" y="37" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="455.32" y="47.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::~Ptr (186,011 samples, 0.02%)</title><rect x="776.3" y="309" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="779.26" y="319.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;ns3::LteSpectrumPhy*&gt; &gt;::type&amp; std::get&lt;0ul, ns3::LteSpectrumPhy*&gt; (724,506 samples, 0.07%)</title><rect x="753.2" y="597" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="756.20" y="607.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (152,238 samples, 0.02%)</title><rect x="375.0" y="485" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="378.01" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_valptr (250,138 samples, 0.03%)</title><rect x="429.0" y="261" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="431.99" y="271.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Now (231,403 samples, 0.02%)</title><rect x="155.6" y="373" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="158.56" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_lower_bound (1,788,371 samples, 0.18%)</title><rect x="321.0" y="453" width="1.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="323.97" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::ConstValuesBegin (200,731 samples, 0.02%)</title><rect x="600.2" y="309" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="603.18" y="319.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (4,972,136 samples, 0.51%)</title><rect x="11.4" y="533" width="4.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.43" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::operator= (191,741 samples, 0.02%)</title><rect x="715.7" y="501" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="718.66" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_base (694,137 samples, 0.07%)</title><rect x="513.9" y="533" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="516.95" y="543.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_move_a&lt;unsigned short*, unsigned short*, std::allocator&lt;unsigned short&gt; &gt; (1,127,032 samples, 0.12%)</title><rect x="252.7" y="453" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="255.74" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_get_Node_allocator (237,832 samples, 0.02%)</title><rect x="724.2" y="469" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="727.20" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (766,734 samples, 0.08%)</title><rect x="201.0" y="469" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="204.04" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (163,911 samples, 0.02%)</title><rect x="87.5" y="373" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="90.46" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (317,763 samples, 0.03%)</title><rect x="340.5" y="357" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="343.52" y="367.5" ></text>
</g>
<g >
<title>ns3::EventId::operator= (191,741 samples, 0.02%)</title><rect x="715.7" y="517" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="718.66" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (1,168,142 samples, 0.12%)</title><rect x="11.6" y="373" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.55" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, double const&amp;, false&gt;::_Head_base (202,567 samples, 0.02%)</title><rect x="749.3" y="469" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="752.30" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_get_node (149,240 samples, 0.02%)</title><rect x="149.4" y="357" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="152.44" y="367.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteChunkProcessor&gt; &gt;::operator++ (161,403 samples, 0.02%)</title><rect x="414.7" y="533" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="417.69" y="543.5" ></text>
</g>
<g >
<title>ns3::operator!= (199,253 samples, 0.02%)</title><rect x="431.5" y="277" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="434.47" y="287.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::GenerateCqiRsrpRsrq (24,060,374 samples, 2.48%)</title><rect x="582.0" y="325" width="19.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="584.99" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::vector (711,457 samples, 0.07%)</title><rect x="228.1" y="453" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="231.09" y="463.5" ></text>
</g>
<g >
<title>ns3::SimpleUeCcmMacSapProvider::ReportBufferStatus (1,286,769 samples, 0.13%)</title><rect x="552.0" y="245" width="1.0" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="554.98" y="255.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (314,249 samples, 0.03%)</title><rect x="11.2" y="469" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="14.17" y="479.5" ></text>
</g>
<g >
<title>ns3::Tag::Tag (291,173 samples, 0.03%)</title><rect x="560.3" y="245" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="563.29" y="255.5" ></text>
</g>
<g >
<title>ns3::EventImpl::EventImpl (184,225 samples, 0.02%)</title><rect x="666.0" y="469" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="669.05" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::Unref (676,765 samples, 0.07%)</title><rect x="323.9" y="485" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="326.94" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (429,586 samples, 0.04%)</title><rect x="325.4" y="373" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="328.42" y="383.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::MacCeListElement_s*&gt; (796,900 samples, 0.08%)</title><rect x="264.8" y="453" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="267.80" y="463.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::__uninitialized_move_if_noexcept_a&lt;ns3::MacCeListElement_s*, ns3::MacCeListElement_s*, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; (659,885 samples, 0.07%)</title><rect x="129.5" y="485" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="132.52" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_get_node (432,981 samples, 0.04%)</title><rect x="190.9" y="421" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="193.86" y="431.5" ></text>
</g>
<g >
<title>ns3::RngStream::RandU01 (729,422 samples, 0.08%)</title><rect x="608.9" y="517" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="611.92" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::lower_bound (1,052,171 samples, 0.11%)</title><rect x="429.4" y="277" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="432.41" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (193,911 samples, 0.02%)</title><rect x="104.0" y="373" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="106.96" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (127,589 samples, 0.01%)</title><rect x="590.4" y="229" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="593.45" y="239.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::DequeueUlDci[abi:cxx11] (1,038,704 samples, 0.11%)</title><rect x="110.0" y="533" width="0.8" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="113.00" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (269,841 samples, 0.03%)</title><rect x="497.4" y="517" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="500.37" y="527.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetControlMessages (460,469 samples, 0.05%)</title><rect x="95.8" y="405" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="98.83" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_key (161,415 samples, 0.02%)</title><rect x="335.7" y="389" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="338.67" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::_M_check_len (840,073 samples, 0.09%)</title><rect x="250.0" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="253.00" y="463.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (151,182 samples, 0.02%)</title><rect x="92.3" y="325" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="95.31" y="335.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator* (248,928 samples, 0.03%)</title><rect x="611.5" y="517" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="614.54" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteFlowId_t, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::find (767,836 samples, 0.08%)</title><rect x="26.8" y="309" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="29.83" y="319.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::DoSendLteControlMessage (162,081 samples, 0.02%)</title><rect x="103.7" y="421" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="106.68" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::splice (371,326 samples, 0.04%)</title><rect x="734.0" y="469" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="737.04" y="479.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="629" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="18.45" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (434,612 samples, 0.04%)</title><rect x="329.4" y="485" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="332.39" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_begin (553,771 samples, 0.06%)</title><rect x="433.0" y="293" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="436.01" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (150,187 samples, 0.02%)</title><rect x="718.4" y="405" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="721.35" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::pair (2,848,710 samples, 0.29%)</title><rect x="238.0" y="309" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="241.03" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_range_check (126,869 samples, 0.01%)</title><rect x="530.8" y="325" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="533.83" y="335.5" ></text>
</g>
<g >
<title>double const* std::__niter_base&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (126,294 samples, 0.01%)</title><rect x="719.3" y="421" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="722.31" y="431.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (308,120 samples, 0.03%)</title><rect x="144.1" y="389" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="147.10" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::Create&lt;ns3::PacketBurst&gt; (3,725,107 samples, 0.38%)</title><rect x="364.1" y="517" width="3.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="367.06" y="527.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (234,294 samples, 0.02%)</title><rect x="510.0" y="437" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="512.98" y="447.5" ></text>
</g>
<g >
<title>ns3::Time::~Time (234,871 samples, 0.02%)</title><rect x="155.8" y="389" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="158.78" y="399.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (1,553,770 samples, 0.16%)</title><rect x="641.5" y="517" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="644.54" y="527.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::~ObjectBase (149,528 samples, 0.02%)</title><rect x="561.3" y="165" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="564.26" y="175.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::BuildBroadcastListElement_s*&gt; (197,106 samples, 0.02%)</title><rect x="145.3" y="421" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="148.29" y="431.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (3,161,094 samples, 0.33%)</title><rect x="498.4" y="533" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="501.35" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (983,671 samples, 0.10%)</title><rect x="232.9" y="437" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="235.92" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::_M_check_len (545,391 samples, 0.06%)</title><rect x="211.1" y="453" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="214.11" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (8,106,001 samples, 0.84%)</title><rect x="269.3" y="485" width="6.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="272.32" y="495.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;, ns3::BuildDataListElement_s*&gt; (143,073 samples, 0.01%)</title><rect x="95.0" y="389" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="97.98" y="399.5" ></text>
</g>
<g >
<title>void  (394,385 samples, 0.04%)</title><rect x="471.9" y="357" width="0.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="474.86" y="367.5" ></text>
</g>
<g >
<title>double* std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (895,799 samples, 0.09%)</title><rect x="412.2" y="437" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="415.23" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (251,724 samples, 0.03%)</title><rect x="594.8" y="245" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="597.80" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;&gt; (318,126 samples, 0.03%)</title><rect x="667.0" y="341" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="669.98" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_drop_node (397,972 samples, 0.04%)</title><rect x="776.8" y="373" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="779.78" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (314,226 samples, 0.03%)</title><rect x="484.8" y="485" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="487.85" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::key_comp (161,213 samples, 0.02%)</title><rect x="157.3" y="389" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="160.31" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;::_M_ptr (233,529 samples, 0.02%)</title><rect x="170.4" y="373" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="173.40" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_deallocate (275,158 samples, 0.03%)</title><rect x="216.4" y="453" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="219.43" y="463.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::RlcPduListElement_s*&gt; (190,862 samples, 0.02%)</title><rect x="209.1" y="437" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="212.12" y="447.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::AddExpectedTb (5,493,975 samples, 0.57%)</title><rect x="526.1" y="357" width="4.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="529.10" y="367.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (204,725 samples, 0.02%)</title><rect x="147.2" y="421" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="150.24" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::at (192,817 samples, 0.02%)</title><rect x="97.8" y="437" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="100.78" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::Ptr (241,373 samples, 0.02%)</title><rect x="750.4" y="565" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="753.44" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::base (155,897 samples, 0.02%)</title><rect x="114.1" y="325" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="117.14" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt; &gt; &gt;::begin (250,676 samples, 0.03%)</title><rect x="567.1" y="245" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="570.06" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::deallocate (154,926 samples, 0.02%)</title><rect x="484.0" y="437" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="486.97" y="447.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::ReceivePdu (5,789,710 samples, 0.60%)</title><rect x="424.1" y="293" width="4.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="427.14" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (270,798 samples, 0.03%)</title><rect x="505.8" y="389" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="508.85" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::CqiListElement_s*&gt; (416,767 samples, 0.04%)</title><rect x="106.8" y="421" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="109.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_copy_aligned (1,193,749 samples, 0.12%)</title><rect x="199.1" y="437" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="202.08" y="447.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (159,152 samples, 0.02%)</title><rect x="484.3" y="469" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="487.34" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*, ns3::Ptr&lt;ns3::Object&gt; &gt; (575,552 samples, 0.06%)</title><rect x="380.2" y="293" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="383.17" y="303.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; (240,649 samples, 0.02%)</title><rect x="146.1" y="325" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="149.08" y="335.5" ></text>
</g>
<g >
<title>ns3::operator*= (308,769 samples, 0.03%)</title><rect x="682.8" y="501" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="685.82" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::_S_key (376,510 samples, 0.04%)</title><rect x="136.1" y="437" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="139.11" y="447.5" ></text>
</g>
<g >
<title> (303,690 samples, 0.03%)</title><rect x="689.8" y="485" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="692.82" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_Auto_node::_M_key (162,159 samples, 0.02%)</title><rect x="504.2" y="501" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="507.20" y="511.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::SpectrumSignalParameters (1,058,660 samples, 0.11%)</title><rect x="342.8" y="485" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="345.85" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocate (157,055 samples, 0.02%)</title><rect x="214.0" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="217.05" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::~vector (197,904 samples, 0.02%)</title><rect x="220.0" y="485" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="223.00" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::UlDciListElement_s*, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;::__normal_iterator (202,471 samples, 0.02%)</title><rect x="249.3" y="453" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="252.34" y="463.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (151,641 samples, 0.02%)</title><rect x="109.7" y="485" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="112.66" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (510,825 samples, 0.05%)</title><rect x="216.3" y="485" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="219.34" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (1,114,557 samples, 0.11%)</title><rect x="652.8" y="277" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="655.79" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_base (745,210 samples, 0.08%)</title><rect x="365.8" y="453" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="368.76" y="463.5" ></text>
</g>
<g >
<title>void  (609,849 samples, 0.06%)</title><rect x="51.4" y="581" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="54.39" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (160,660 samples, 0.02%)</title><rect x="167.8" y="437" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="170.78" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_M_begin (190,024 samples, 0.02%)</title><rect x="186.4" y="453" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="189.45" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, unsigned int, false&gt;::_M_head (165,154 samples, 0.02%)</title><rect x="756.1" y="549" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="759.13" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::size (244,680 samples, 0.03%)</title><rect x="480.8" y="245" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="483.82" y="255.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::find (820,315 samples, 0.08%)</title><rect x="189.2" y="485" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="192.23" y="495.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlTriggerReqParameters::SchedDlTriggerReqParameters (944,566 samples, 0.10%)</title><rect x="131.5" y="517" width="0.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="134.48" y="527.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::type&amp; std::get&lt;0ul, ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (409,426 samples, 0.04%)</title><rect x="751.9" y="597" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="754.92" y="607.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (1,989,572 samples, 0.21%)</title><rect x="773.9" y="357" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="776.86" y="367.5" ></text>
</g>
<g >
<title>ns3::Time::From (739,923 samples, 0.08%)</title><rect x="682.5" y="517" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="685.53" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (143,473 samples, 0.01%)</title><rect x="120.3" y="485" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="123.30" y="495.5" ></text>
</g>
<g >
<title>ns3::UeMemberLteUePhySapUser::ReceiveLteControlMessage (45,543,635 samples, 4.70%)</title><rect x="535.4" y="357" width="36.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="538.43" y="367.5" >ns3..</text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_begin (327,923 samples, 0.03%)</title><rect x="84.5" y="405" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="87.47" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::at (183,105 samples, 0.02%)</title><rect x="456.8" y="309" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="459.84" y="319.5" ></text>
</g>
<g >
<title>ns3::Object::Construct (2,631,536 samples, 0.27%)</title><rect x="448.3" y="277" width="2.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="451.25" y="287.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (28,112,022 samples, 2.90%)</title><rect x="441.3" y="469" width="22.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="444.33" y="479.5" >v..</text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, ns3::Ptr&lt;ns3::Packet&gt; &gt;::operator (21,094,361 samples, 2.18%)</title><rect x="421.7" y="533" width="17.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="424.74" y="543.5" ></text>
</g>
<g >
<title>ns3::UeMemberLteMacSapProvider::TransmitPdu (5,533,169 samples, 0.57%)</title><rect x="560.8" y="229" width="4.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="563.78" y="239.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (564,216 samples, 0.06%)</title><rect x="318.8" y="373" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="321.81" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::at (187,560 samples, 0.02%)</title><rect x="657.1" y="517" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="660.13" y="527.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModel (124,953 samples, 0.01%)</title><rect x="79.8" y="517" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="82.75" y="527.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::IsNull (376,180 samples, 0.04%)</title><rect x="515.5" y="549" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="518.52" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::allocate (185,306 samples, 0.02%)</title><rect x="661.1" y="357" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="664.08" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::begin (281,870 samples, 0.03%)</title><rect x="234.0" y="469" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="236.96" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__niter_base&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (187,610 samples, 0.02%)</title><rect x="622.5" y="469" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="625.53" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Ptr (125,319 samples, 0.01%)</title><rect x="68.4" y="421" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="71.36" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::end (195,428 samples, 0.02%)</title><rect x="210.6" y="469" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="213.57" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (304,038 samples, 0.03%)</title><rect x="240.0" y="277" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="243.04" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__niter_base&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; (194,031 samples, 0.02%)</title><rect x="381.6" y="469" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="384.56" y="479.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (199,972 samples, 0.02%)</title><rect x="706.6" y="373" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="709.61" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (836,469 samples, 0.09%)</title><rect x="518.9" y="341" width="0.7" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="521.90" y="351.5" ></text>
</g>
<g >
<title>unsigned short* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (450,981 samples, 0.05%)</title><rect x="521.1" y="261" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="524.12" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_deallocate (317,082 samples, 0.03%)</title><rect x="693.1" y="453" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="696.13" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::at (331,136 samples, 0.03%)</title><rect x="181.0" y="469" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="183.96" y="479.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (730,011 samples, 0.08%)</title><rect x="398.8" y="501" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="401.81" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt; (724,895 samples, 0.07%)</title><rect x="503.4" y="453" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="506.44" y="463.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (572,651 samples, 0.06%)</title><rect x="112.5" y="501" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="115.51" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_M_addr (156,809 samples, 0.02%)</title><rect x="500.5" y="469" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="503.55" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (323,441 samples, 0.03%)</title><rect x="596.3" y="213" width="0.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="599.30" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned short&gt;::allocate (360,140 samples, 0.04%)</title><rect x="480.0" y="229" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="482.95" y="239.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::CqiListElement_s*&gt; (154,796 samples, 0.02%)</title><rect x="131.1" y="453" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="134.12" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (1,021,807 samples, 0.11%)</title><rect x="38.5" y="709" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="41.53" y="719.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::SimpleRefCount (422,806 samples, 0.04%)</title><rect x="365.3" y="469" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="368.26" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteSpectrumModelId, ns3::Ptr&lt;ns3::SpectrumModel&gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (1,429,003 samples, 0.15%)</title><rect x="54.9" y="485" width="1.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="57.93" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_valptr (379,355 samples, 0.04%)</title><rect x="156.9" y="389" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="159.90" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (520,529 samples, 0.05%)</title><rect x="126.9" y="309" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="129.91" y="319.5" ></text>
</g>
<g >
<title>ns3::LteChunkProcessor::EvaluateChunk (8,414,736 samples, 0.87%)</title><rect x="401.6" y="533" width="6.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="404.57" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; &gt; (337,592 samples, 0.03%)</title><rect x="585.7" y="229" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="588.68" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; (180,270 samples, 0.02%)</title><rect x="117.1" y="485" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="120.11" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt;::tuple&lt;true, true&gt; (1,129,345 samples, 0.12%)</title><rect x="749.1" y="501" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="752.08" y="511.5" ></text>
</g>
<g >
<title>ns3::Simulator::GetSystemId (397,961 samples, 0.04%)</title><rect x="559.3" y="229" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="562.35" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;double&gt;::__value, void&gt;::__type std::__fill_a1&lt;double*, double&gt; (195,953 samples, 0.02%)</title><rect x="403.9" y="357" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="406.90" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::operator= (328,413 samples, 0.03%)</title><rect x="559.9" y="261" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="562.86" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (488,113 samples, 0.05%)</title><rect x="640.5" y="421" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="643.55" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteSpectrumModelId, ns3::Ptr&lt;ns3::SpectrumModel&gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (1,123,045 samples, 0.12%)</title><rect x="297.8" y="469" width="0.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="300.81" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::erase (947,008 samples, 0.10%)</title><rect x="264.7" y="517" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="267.68" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt; &gt;::find (966,324 samples, 0.10%)</title><rect x="187.1" y="485" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="190.07" y="495.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (1,666,743 samples, 0.17%)</title><rect x="615.3" y="517" width="1.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="618.27" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_M_deallocate (162,767 samples, 0.02%)</title><rect x="380.0" y="277" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="382.98" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (637,679 samples, 0.07%)</title><rect x="60.6" y="453" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="63.59" y="463.5" ></text>
</g>
<g >
<title>operator delete (125,509 samples, 0.01%)</title><rect x="551.0" y="245" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="554.01" y="255.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned char, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::end (239,197 samples, 0.02%)</title><rect x="194.2" y="485" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="197.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::at (308,215 samples, 0.03%)</title><rect x="210.3" y="485" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="213.26" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::~Ptr (189,897 samples, 0.02%)</title><rect x="278.1" y="501" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="281.06" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::tuple (474,767 samples, 0.05%)</title><rect x="284.0" y="437" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="287.03" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (400,356 samples, 0.04%)</title><rect x="232.5" y="421" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="235.50" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_ptr (189,215 samples, 0.02%)</title><rect x="135.3" y="453" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="138.29" y="463.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (555,448 samples, 0.06%)</title><rect x="233.2" y="357" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="236.17" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;&gt; (184,807 samples, 0.02%)</title><rect x="504.6" y="469" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="507.58" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (602,928 samples, 0.06%)</title><rect x="303.4" y="485" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="306.43" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,563,753 samples, 0.16%)</title><rect x="171.0" y="453" width="1.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="173.99" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (531,401 samples, 0.05%)</title><rect x="773.1" y="437" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="776.13" y="447.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (314,249 samples, 0.03%)</title><rect x="11.2" y="549" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.17" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; const*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, void&gt; (158,435 samples, 0.02%)</title><rect x="347.9" y="533" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="350.91" y="543.5" ></text>
</g>
<g >
<title>ns3::Packet::~Packet (1,078,177 samples, 0.11%)</title><rect x="652.8" y="245" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="655.82" y="255.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModel (161,203 samples, 0.02%)</title><rect x="327.0" y="485" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="330.02" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (124,394 samples, 0.01%)</title><rect x="776.2" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="779.16" y="271.5" ></text>
</g>
<g >
<title>decltype  (153,618 samples, 0.02%)</title><rect x="689.5" y="389" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="692.48" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (1,932,346 samples, 0.20%)</title><rect x="634.3" y="437" width="1.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="637.27" y="447.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (667,572 samples, 0.07%)</title><rect x="612.8" y="501" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="615.81" y="511.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a&lt;false, int*, int*&gt; (195,561 samples, 0.02%)</title><rect x="304.3" y="485" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="307.29" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (299,709 samples, 0.03%)</title><rect x="96.7" y="437" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="99.70" y="447.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;unsigned short*&gt; std::make_move_iterator&lt;unsigned short*&gt; (398,257 samples, 0.04%)</title><rect x="252.7" y="437" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="255.74" y="447.5" ></text>
</g>
<g >
<title>unsigned long* std::__copy_move_a2&lt;false, unsigned long*, unsigned long*&gt; (228,596 samples, 0.02%)</title><rect x="199.7" y="373" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="202.70" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::~vector (183,938 samples, 0.02%)</title><rect x="106.9" y="341" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="109.93" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;int&gt;, true&gt;::_Rb_tree_impl (172,014 samples, 0.02%)</title><rect x="60.4" y="485" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="63.38" y="495.5" ></text>
</g>
<g >
<title>ns3::AttributeConstructionList::AttributeConstructionList (587,413 samples, 0.06%)</title><rect x="447.6" y="277" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="450.62" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_transfer (163,122 samples, 0.02%)</title><rect x="734.2" y="437" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="737.21" y="447.5" ></text>
</g>
<g >
<title>ns3::TbId_t::TbId_t (238,722 samples, 0.02%)</title><rect x="383.8" y="533" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="386.80" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (500,996 samples, 0.05%)</title><rect x="341.9" y="373" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="344.88" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (340,476 samples, 0.04%)</title><rect x="530.5" y="341" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="533.52" y="351.5" ></text>
</g>
<g >
<title>__floatuntixf (240,107 samples, 0.02%)</title><rect x="407.1" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="410.05" y="479.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (239,679 samples, 0.02%)</title><rect x="62.4" y="485" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="65.40" y="495.5" ></text>
</g>
<g >
<title> (151,530 samples, 0.02%)</title><rect x="717.1" y="485" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="720.11" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (157,771 samples, 0.02%)</title><rect x="721.4" y="453" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="724.37" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::~list (300,600 samples, 0.03%)</title><rect x="165.7" y="357" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="168.73" y="367.5" ></text>
</g>
<g >
<title>ns3::Object::Construct (3,213,288 samples, 0.33%)</title><rect x="540.3" y="293" width="2.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="543.33" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (594,572 samples, 0.06%)</title><rect x="714.2" y="469" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="717.17" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::deallocate (190,533 samples, 0.02%)</title><rect x="392.3" y="453" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="395.30" y="463.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetParent (358,780 samples, 0.04%)</title><rect x="34.6" y="405" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="37.64" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (848,537 samples, 0.09%)</title><rect x="272.1" y="437" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="275.14" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (788,613 samples, 0.08%)</title><rect x="228.7" y="453" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="231.67" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetValuesN (126,759 samples, 0.01%)</title><rect x="600.4" y="309" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="603.38" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::vector (573,370 samples, 0.06%)</title><rect x="446.9" y="261" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="449.87" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::empty (167,279 samples, 0.02%)</title><rect x="619.5" y="533" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="622.47" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt; &gt;::_S_key (309,647 samples, 0.03%)</title><rect x="187.3" y="437" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="190.35" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::max_size (200,229 samples, 0.02%)</title><rect x="215.2" y="421" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="218.23" y="431.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Add (1,981,337 samples, 0.20%)</title><rect x="553.3" y="245" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="556.29" y="255.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::operator= (126,989 samples, 0.01%)</title><rect x="604.3" y="309" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="607.28" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::allocate (659,007 samples, 0.07%)</title><rect x="270.3" y="389" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="273.32" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (378,589 samples, 0.04%)</title><rect x="216.0" y="437" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="218.97" y="447.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (240,445 samples, 0.02%)</title><rect x="468.1" y="437" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="471.13" y="447.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (1,203,174 samples, 0.12%)</title><rect x="637.2" y="501" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="640.19" y="511.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::insert&lt;std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (1,819,829 samples, 0.19%)</title><rect x="721.1" y="517" width="1.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="724.05" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_drop_node (229,826 samples, 0.02%)</title><rect x="506.3" y="485" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="509.35" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_valptr (344,085 samples, 0.04%)</title><rect x="241.9" y="421" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="244.93" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::_M_mbegin (144,996 samples, 0.01%)</title><rect x="157.8" y="357" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="160.77" y="367.5" ></text>
</g>
<g >
<title>[libm.so.6] (150,649 samples, 0.02%)</title><rect x="582.3" y="293" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="585.25" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (923,730,017 samples, 95.25%)</title><rect x="35.5" y="805" width="743.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="38.54" y="815.5" >[libc.so.6]</text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (707,925 samples, 0.07%)</title><rect x="72.2" y="421" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="75.21" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::at (149,647 samples, 0.02%)</title><rect x="137.7" y="485" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="140.75" y="495.5" ></text>
</g>
<g >
<title>operator new (165,071 samples, 0.02%)</title><rect x="564.1" y="69" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="567.07" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::end (182,299 samples, 0.02%)</title><rect x="722.9" y="501" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="725.90" y="511.5" ></text>
</g>
<g >
<title>decltype  (998,649 samples, 0.10%)</title><rect x="191.2" y="389" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="194.23" y="399.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::EventImpl&gt;::Delete (401,412 samples, 0.04%)</title><rect x="727.5" y="469" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="730.52" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (202,320 samples, 0.02%)</title><rect x="659.4" y="469" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="662.40" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::CreateSrsCqiReport (244,160 samples, 0.03%)</title><rect x="612.0" y="325" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="615.01" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (342,542 samples, 0.04%)</title><rect x="639.3" y="469" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="642.33" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (269,240 samples, 0.03%)</title><rect x="120.0" y="341" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="122.96" y="351.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux (155,299 samples, 0.02%)</title><rect x="35.5" y="725" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="38.54" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_ptr (277,428 samples, 0.03%)</title><rect x="180.7" y="389" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="183.68" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (538,288 samples, 0.06%)</title><rect x="108.5" y="437" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="111.50" y="447.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::SpectrumSignalParameters (5,377,108 samples, 0.55%)</title><rect x="314.2" y="453" width="4.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="317.24" y="463.5" ></text>
</g>
<g >
<title>operator new (169,709 samples, 0.02%)</title><rect x="520.3" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="523.29" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (186,634 samples, 0.02%)</title><rect x="283.4" y="485" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="286.37" y="495.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; &gt; (269,165 samples, 0.03%)</title><rect x="207.6" y="437" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="210.57" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_valptr (227,886 samples, 0.02%)</title><rect x="298.3" y="405" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="301.34" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_range_check (187,936 samples, 0.02%)</title><rect x="678.3" y="469" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="681.31" y="479.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::CreateTxPowerSpectralDensity (1,022,169 samples, 0.11%)</title><rect x="111.4" y="485" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="114.35" y="495.5" ></text>
</g>
<g >
<title>ns3::operator+ (125,077 samples, 0.01%)</title><rect x="62.8" y="485" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="65.82" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;::_M_valptr (323,451 samples, 0.03%)</title><rect x="433.8" y="261" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="436.84" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (273,587 samples, 0.03%)</title><rect x="194.7" y="469" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="197.68" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt;::deallocate (278,972 samples, 0.03%)</title><rect x="291.0" y="325" width="0.2" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="293.95" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_S_key (313,691 samples, 0.03%)</title><rect x="528.0" y="277" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="531.03" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_Vector_base (790,436 samples, 0.08%)</title><rect x="142.3" y="437" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="145.33" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_fill_initialize (492,278 samples, 0.05%)</title><rect x="215.9" y="469" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="218.88" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (270,541 samples, 0.03%)</title><rect x="147.9" y="421" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="150.88" y="431.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (857,965 samples, 0.09%)</title><rect x="638.3" y="485" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="641.33" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (687,499 samples, 0.07%)</title><rect x="335.8" y="389" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="338.80" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move_a2&lt;true, ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (5,897,576 samples, 0.61%)</title><rect x="376.8" y="453" width="4.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="379.82" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned int&gt;, true&gt;::_Rb_tree_impl (152,827 samples, 0.02%)</title><rect x="667.8" y="245" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="670.83" y="255.5" ></text>
</g>
<g >
<title>ns3::EventImpl::Invoke (5,321,712 samples, 0.55%)</title><rect x="11.2" y="741" width="4.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.17" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::list (652,304 samples, 0.07%)</title><rect x="371.4" y="485" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="374.45" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_relocate (381,047 samples, 0.04%)</title><rect x="694.0" y="453" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="697.03" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (1,799,150 samples, 0.19%)</title><rect x="506.9" y="549" width="1.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="509.91" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; (481,004 samples, 0.05%)</title><rect x="271.2" y="357" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="274.16" y="367.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (545,960 samples, 0.06%)</title><rect x="217.5" y="421" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="220.47" y="431.5" ></text>
</g>
<g >
<title>ns3::LteHarqPhy::GetHarqProcessInfoUl (4,963,729 samples, 0.51%)</title><rect x="522.1" y="357" width="4.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="525.08" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteNetDevice&gt;::Ptr (241,803 samples, 0.02%)</title><rect x="582.7" y="293" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="585.71" y="303.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;::operator (231,657 samples, 0.02%)</title><rect x="236.0" y="421" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="238.98" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (1,464,943 samples, 0.15%)</title><rect x="300.9" y="437" width="1.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="303.91" y="447.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (165,918 samples, 0.02%)</title><rect x="78.3" y="405" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="81.32" y="415.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetAttributeN (1,150,317 samples, 0.12%)</title><rect x="33.7" y="421" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="36.68" y="431.5" ></text>
</g>
<g >
<title>ns3::ConstantPositionMobilityModel::DoGetPosition (190,065 samples, 0.02%)</title><rect x="649.3" y="501" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="652.34" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_clear (2,445,979 samples, 0.25%)</title><rect x="501.0" y="533" width="1.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="503.96" y="543.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (206,546 samples, 0.02%)</title><rect x="10.1" y="757" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.05" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (663,076 samples, 0.07%)</title><rect x="413.0" y="485" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="416.04" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;::_M_ptr (163,489 samples, 0.02%)</title><rect x="185.7" y="405" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="188.68" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_allocate (360,140 samples, 0.04%)</title><rect x="480.0" y="261" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="482.95" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_check (154,783 samples, 0.02%)</title><rect x="589.3" y="229" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="592.26" y="239.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::operator* (237,279 samples, 0.02%)</title><rect x="496.3" y="549" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="499.28" y="559.5" ></text>
</g>
<g >
<title>ns3::operator&lt; (377,493 samples, 0.04%)</title><rect x="85.8" y="373" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="88.81" y="383.5" ></text>
</g>
<g >
<title>ns3::DlCqiLteControlMessage::SetDlCqi (1,473,854 samples, 0.15%)</title><rect x="585.4" y="293" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="588.35" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (221,743 samples, 0.02%)</title><rect x="139.3" y="453" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="142.29" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::at (473,755 samples, 0.05%)</title><rect x="149.8" y="405" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="152.84" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::pop_back (350,982 samples, 0.04%)</title><rect x="30.7" y="373" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="33.67" y="383.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (378,932 samples, 0.04%)</title><rect x="618.7" y="453" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="621.72" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt;::destroy&lt;ns3::UlDciLteControlMessage&gt; (234,425 samples, 0.02%)</title><rect x="393.6" y="501" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="396.63" y="511.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::GetDouble (604,584 samples, 0.06%)</title><rect x="406.8" y="485" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="409.83" y="495.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (297,456 samples, 0.03%)</title><rect x="116.0" y="421" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="118.97" y="431.5" ></text>
</g>
<g >
<title>unsigned char* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (556,653 samples, 0.06%)</title><rect x="126.9" y="325" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="129.88" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_get_Tp_allocator (169,242 samples, 0.02%)</title><rect x="57.3" y="437" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="60.33" y="447.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (1,554,886 samples, 0.16%)</title><rect x="702.3" y="533" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="705.27" y="543.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::UlDciLteControlMessage&gt; &gt; (139,939 samples, 0.01%)</title><rect x="110.3" y="501" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="113.27" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (606,661 samples, 0.06%)</title><rect x="482.6" y="309" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="485.57" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::operator[] (278,129 samples, 0.03%)</title><rect x="289.2" y="517" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="292.18" y="527.5" ></text>
</g>
<g >
<title>ns3::LteUePowerControl::ReportTpc (2,374,811 samples, 0.24%)</title><rect x="531.7" y="357" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="534.68" y="367.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;2ul, std::tuple&lt;ns3::LteUePhy*, unsigned int, unsigned int&gt; &gt;::type&amp; std::get&lt;2ul, ns3::LteUePhy*, unsigned int, unsigned int&gt; (349,917 samples, 0.04%)</title><rect x="756.3" y="597" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="759.26" y="607.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;ns3::LteEnbPhy*&gt; &gt;::type&amp; std::get&lt;0ul, ns3::LteEnbPhy*&gt; (491,352 samples, 0.05%)</title><rect x="752.2" y="597" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="755.25" y="607.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate (352,416 samples, 0.04%)</title><rect x="195.8" y="469" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="198.83" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (719,320 samples, 0.07%)</title><rect x="668.3" y="485" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="671.32" y="495.5" ></text>
</g>
<g >
<title>decltype  (151,782 samples, 0.02%)</title><rect x="122.4" y="485" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="125.36" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (1,967,941 samples, 0.20%)</title><rect x="354.7" y="533" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="357.67" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_get_node (418,393 samples, 0.04%)</title><rect x="384.4" y="453" width="0.3" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="387.36" y="463.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;int*&gt; (161,562 samples, 0.02%)</title><rect x="575.3" y="325" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="578.30" y="335.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedDlConfigIndParameters::SchedDlConfigIndParameters (1,092,598 samples, 0.11%)</title><rect x="173.9" y="485" width="0.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="176.88" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (702,211 samples, 0.07%)</title><rect x="394.2" y="469" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_create_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (849,776 samples, 0.09%)</title><rect x="658.5" y="453" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="661.48" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (27,867,459 samples, 2.87%)</title><rect x="441.5" y="437" width="22.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="444.52" y="447.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_create_storage (499,008 samples, 0.05%)</title><rect x="260.8" y="357" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="263.77" y="367.5" ></text>
</g>
<g >
<title>unsigned short* std::copy&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*&gt; (687,255 samples, 0.07%)</title><rect x="253.1" y="389" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="256.10" y="399.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (1,350,821 samples, 0.14%)</title><rect x="304.9" y="501" width="1.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="307.95" y="511.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (240,043 samples, 0.02%)</title><rect x="727.1" y="453" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="730.07" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (317,763 samples, 0.03%)</title><rect x="340.5" y="341" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="343.52" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::lower_bound (163,786 samples, 0.02%)</title><rect x="82.5" y="501" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="85.49" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_mbegin (229,108 samples, 0.02%)</title><rect x="320.7" y="437" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="323.69" y="447.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy*&amp;&amp; std::forward&lt;ns3::LteEnbPhy*&gt; (159,430 samples, 0.02%)</title><rect x="267.2" y="533" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="270.18" y="543.5" ></text>
</g>
<g >
<title>cfree (159,331 samples, 0.02%)</title><rect x="453.6" y="69" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="456.61" y="79.5" ></text>
</g>
<g >
<title>double&amp; std::__get_helper&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (437,238 samples, 0.05%)</title><rect x="756.6" y="581" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="759.58" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::_M_addr (164,453 samples, 0.02%)</title><rect x="222.0" y="389" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="224.96" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::RlcPduListElement_s*, ns3::RlcPduListElement_s&gt; (190,862 samples, 0.02%)</title><rect x="209.1" y="453" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="212.12" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (719,050 samples, 0.07%)</title><rect x="215.8" y="485" width="0.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="218.76" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::vector (1,038,323 samples, 0.11%)</title><rect x="583.7" y="261" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="586.65" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::IidManager::IidInformation, std::allocator&lt;ns3::IidManager::IidInformation&gt; &gt;::operator[] (167,043 samples, 0.02%)</title><rect x="541.4" y="213" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="544.42" y="223.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (3,932,604 samples, 0.41%)</title><rect x="94.9" y="469" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="97.86" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (384,192 samples, 0.04%)</title><rect x="687.4" y="453" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="690.39" y="463.5" ></text>
</g>
<g >
<title>ns3::CeBitmap_e const* std::__niter_base&lt;ns3::CeBitmap_e const*, std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt; &gt; (152,075 samples, 0.02%)</title><rect x="204.0" y="309" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="206.96" y="319.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (234,373 samples, 0.02%)</title><rect x="17.4" y="341" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="20.39" y="351.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters*&gt; (1,018,939 samples, 0.11%)</title><rect x="263.2" y="453" width="0.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="266.24" y="463.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_construct_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (251,956 samples, 0.03%)</title><rect x="81.9" y="437" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="84.95" y="447.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e&gt; (723,994 samples, 0.07%)</title><rect x="444.1" y="309" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="447.08" y="319.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (790,276 samples, 0.08%)</title><rect x="726.7" y="517" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="729.66" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_S_key (502,432 samples, 0.05%)</title><rect x="235.8" y="437" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="238.76" y="447.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;ns3::HigherLayerSelected_s&amp;&gt;::type&amp;&amp; std::move&lt;ns3::HigherLayerSelected_s&amp;&gt; (170,828 samples, 0.02%)</title><rect x="595.6" y="197" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="598.55" y="207.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (4,972,136 samples, 0.51%)</title><rect x="11.4" y="565" width="4.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.43" y="575.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::PacketMetadata (1,027,645 samples, 0.11%)</title><rect x="14.6" y="373" width="0.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="17.57" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr&lt;ns3::DlDciLteControlMessage&gt; (316,058 samples, 0.03%)</title><rect x="160.4" y="453" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="163.40" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (200,365 samples, 0.02%)</title><rect x="442.8" y="197" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="445.84" y="207.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::end (422,449 samples, 0.04%)</title><rect x="179.5" y="469" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="182.49" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::vector (765,141 samples, 0.08%)</title><rect x="204.7" y="405" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="207.67" y="415.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::Add (1,584,708 samples, 0.16%)</title><rect x="561.5" y="181" width="1.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="564.52" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Buffer::Data* const*, std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt; &gt;::__normal_iterator (154,434 samples, 0.02%)</title><rect x="32.4" y="309" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="35.45" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::allocate (428,661 samples, 0.04%)</title><rect x="724.5" y="437" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="727.45" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteSpectrumPhy*&gt;::tuple (264,111 samples, 0.03%)</title><rect x="307.7" y="405" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="310.71" y="415.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoReportBufferStatus (747,299 samples, 0.08%)</title><rect x="12.5" y="373" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="15.49" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt; &gt;::_M_lower_bound (202,753 samples, 0.02%)</title><rect x="726.4" y="293" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="729.36" y="303.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlInfoListElement_s const*, std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt; &gt;, ns3::UlInfoListElement_s*&gt; (794,783 samples, 0.08%)</title><rect x="266.2" y="453" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="269.23" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp;&gt; (1,007,918 samples, 0.10%)</title><rect x="718.1" y="485" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="721.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_begin (148,965 samples, 0.02%)</title><rect x="121.5" y="501" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="124.54" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (488,113 samples, 0.05%)</title><rect x="640.5" y="389" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="643.55" y="399.5" ></text>
</g>
<g >
<title>std::operator== (145,718 samples, 0.02%)</title><rect x="109.4" y="485" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="112.39" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (275,175 samples, 0.03%)</title><rect x="132.0" y="501" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="135.02" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (310,695 samples, 0.03%)</title><rect x="227.1" y="485" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="230.10" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::ByteTagListData**, std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt; &gt;::operator- (157,845 samples, 0.02%)</title><rect x="29.7" y="357" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="32.65" y="367.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::Callback&lt;void  (1,115,555 samples, 0.12%)</title><rect x="725.7" y="437" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="728.69" y="447.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Iterator::PrepareForNext (615,765 samples, 0.06%)</title><rect x="426.7" y="197" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="429.65" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_move_assign (1,013,617 samples, 0.10%)</title><rect x="290.5" y="405" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="293.46" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (450,043 samples, 0.05%)</title><rect x="615.5" y="453" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="618.51" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::operator* (279,655 samples, 0.03%)</title><rect x="179.1" y="469" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="182.11" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt; &gt;::_S_key (572,914 samples, 0.06%)</title><rect x="458.4" y="229" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="461.44" y="239.5" ></text>
</g>
<g >
<title> (207,486 samples, 0.02%)</title><rect x="408.8" y="517" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="411.85" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (160,901 samples, 0.02%)</title><rect x="59.1" y="437" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="62.08" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::PhyReceptionStatParameters&gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::PhyReceptionStatParameters&gt; &gt; &gt;::end (157,995 samples, 0.02%)</title><rect x="494.0" y="533" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="496.97" y="543.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::operator= (1,390,282 samples, 0.14%)</title><rect x="585.4" y="277" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="588.42" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_S_key (491,785 samples, 0.05%)</title><rect x="55.4" y="437" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="58.36" y="447.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*&gt; (980,187 samples, 0.10%)</title><rect x="211.8" y="373" width="0.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="214.84" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (200,604 samples, 0.02%)</title><rect x="707.0" y="405" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="710.00" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (169,673 samples, 0.02%)</title><rect x="575.2" y="341" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="578.16" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::clear (301,718 samples, 0.03%)</title><rect x="121.5" y="533" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="124.51" y="543.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s&gt; (213,295 samples, 0.02%)</title><rect x="583.7" y="245" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="586.69" y="255.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::Buffer::Data* const*, std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt; &gt; (253,162 samples, 0.03%)</title><rect x="556.4" y="165" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="559.40" y="175.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (204,573 samples, 0.02%)</title><rect x="63.8" y="469" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="66.78" y="479.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, unsigned char, unsigned int, unsigned long&gt;::operator (487,633 samples, 0.05%)</title><rect x="428.3" y="261" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="431.30" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_destroy_node (1,297,607 samples, 0.13%)</title><rect x="505.2" y="485" width="1.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="508.24" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::push_back (480,087 samples, 0.05%)</title><rect x="452.7" y="69" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="455.67" y="79.5" ></text>
</g>
<g >
<title>unsigned short* std::uninitialized_copy&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*&gt; (154,651 samples, 0.02%)</title><rect x="106.3" y="405" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="109.25" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::operator++ (161,661 samples, 0.02%)</title><rect x="497.1" y="549" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="500.14" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_Vector_impl_data::_Vector_impl_data (193,156 samples, 0.02%)</title><rect x="142.8" y="405" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="145.82" y="415.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::GetSpectrumModel (332,755 samples, 0.03%)</title><rect x="111.4" y="469" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="114.35" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;int*, int&gt; (265,597 samples, 0.03%)</title><rect x="506.1" y="389" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="509.07" y="399.5" ></text>
</g>
<g >
<title>ns3::SpectrumModel::GetNumBands (216,568 samples, 0.02%)</title><rect x="300.0" y="453" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="303.02" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (125,754 samples, 0.01%)</title><rect x="79.0" y="469" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="81.96" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (501,982 samples, 0.05%)</title><rect x="516.9" y="437" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="519.88" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned short const&amp;&gt;::tuple (265,541 samples, 0.03%)</title><rect x="191.8" y="373" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="194.82" y="383.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (148,793 samples, 0.02%)</title><rect x="195.5" y="405" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="198.48" y="415.5" ></text>
</g>
<g >
<title>void  (370,976 samples, 0.04%)</title><rect x="471.2" y="357" width="0.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="474.24" y="367.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*, ns3::VendorSpecificListElement_s&gt; (198,957 samples, 0.02%)</title><rect x="228.7" y="437" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="231.70" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (155,343 samples, 0.02%)</title><rect x="358.4" y="501" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="361.37" y="511.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::EnqueueDlHarqFeedback (2,635,248 samples, 0.27%)</title><rect x="419.3" y="373" width="2.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="422.27" y="383.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::BuildDataListElement_s*&gt; (793,632 samples, 0.08%)</title><rect x="145.6" y="421" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="148.63" y="431.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (1,284,908 samples, 0.13%)</title><rect x="390.0" y="501" width="1.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="392.99" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::SimpleRefCount (335,668 samples, 0.03%)</title><rect x="161.2" y="405" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="164.21" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocate (152,677 samples, 0.02%)</title><rect x="397.5" y="485" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="400.46" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetSize (336,952 samples, 0.03%)</title><rect x="119.0" y="517" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="122.05" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move_a1&lt;true, ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (5,935,274 samples, 0.61%)</title><rect x="376.8" y="469" width="4.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="379.79" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp; std::__get_helper&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (465,270 samples, 0.05%)</title><rect x="755.1" y="581" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="758.12" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::begin (229,777 samples, 0.02%)</title><rect x="177.6" y="453" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="180.64" y="463.5" ></text>
</g>
<g >
<title>ns3::LteAmc::CreateCqiFeedbacks (6,876,813 samples, 0.71%)</title><rect x="586.7" y="293" width="5.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="589.73" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;int&gt;::allocate (137,246 samples, 0.01%)</title><rect x="699.8" y="453" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="702.85" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (275,354 samples, 0.03%)</title><rect x="387.7" y="501" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="390.72" y="511.5" ></text>
</g>
<g >
<title>std::operator== (159,377 samples, 0.02%)</title><rect x="720.2" y="501" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="723.17" y="511.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (874,599 samples, 0.09%)</title><rect x="725.9" y="373" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="728.86" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (241,903 samples, 0.02%)</title><rect x="585.5" y="229" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="588.46" y="239.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::lower_bound (1,800,854 samples, 0.19%)</title><rect x="157.4" y="405" width="1.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="160.44" y="415.5" ></text>
</g>
<g >
<title>decltype  (233,530 samples, 0.02%)</title><rect x="456.6" y="277" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="459.59" y="287.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; (745,848 samples, 0.08%)</title><rect x="263.5" y="421" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="266.46" y="431.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (250,661 samples, 0.03%)</title><rect x="542.5" y="245" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="545.52" y="255.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, double&gt; &gt;::_List_const_iterator (161,602 samples, 0.02%)</title><rect x="746.7" y="517" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="749.70" y="527.5" ></text>
</g>
<g >
<title>ns3::Tag::~Tag (233,481 samples, 0.02%)</title><rect x="20.5" y="341" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="23.55" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (284,436 samples, 0.03%)</title><rect x="88.2" y="437" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="91.22" y="447.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (186,011 samples, 0.02%)</title><rect x="776.3" y="325" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="779.26" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt; std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, void&gt; (1,418,884 samples, 0.15%)</title><rect x="92.0" y="501" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="94.97" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (248,283 samples, 0.03%)</title><rect x="78.9" y="501" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="81.87" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Acquire (143,319 samples, 0.01%)</title><rect x="299.1" y="453" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="302.06" y="463.5" ></text>
</g>
<g >
<title> (158,234 samples, 0.02%)</title><rect x="737.3" y="517" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="740.27" y="527.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters::SchedDlRlcBufferReqParameters (393,529 samples, 0.04%)</title><rect x="24.4" y="341" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="27.44" y="351.5" ></text>
</g>
<g >
<title>ns3::MobilityModel* ns3::PeekPointer&lt;ns3::MobilityModel&gt; (168,016 samples, 0.02%)</title><rect x="740.7" y="501" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="743.69" y="511.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (252,384 samples, 0.03%)</title><rect x="536.7" y="293" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="539.71" y="303.5" ></text>
</g>
<g >
<title>ns3::SpectrumModel const* ns3::PeekPointer&lt;ns3::SpectrumModel const&gt; (253,729 samples, 0.03%)</title><rect x="416.4" y="501" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="419.35" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_get_node (236,751 samples, 0.02%)</title><rect x="293.1" y="453" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="296.13" y="463.5" ></text>
</g>
<g >
<title>ns3::Object::Object (1,300,864 samples, 0.13%)</title><rect x="161.0" y="421" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="163.97" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::allocate (124,601 samples, 0.01%)</title><rect x="611.2" y="437" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="614.25" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::_Vector_base (198,813 samples, 0.02%)</title><rect x="143.5" y="437" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="146.47" y="447.5" ></text>
</g>
<g >
<title>double const&amp; const&amp; std::__get_helper&lt;1ul, double const&amp;, double const&amp;&gt; (407,082 samples, 0.04%)</title><rect x="748.1" y="453" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="751.12" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::operator= (701,868 samples, 0.07%)</title><rect x="585.7" y="245" width="0.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="588.65" y="255.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetUid (236,772 samples, 0.02%)</title><rect x="13.6" y="373" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="16.57" y="383.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (534,268 samples, 0.06%)</title><rect x="111.7" y="453" width="0.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="114.72" y="463.5" ></text>
</g>
<g >
<title>ns3::FriisPropagationLossModel::DoCalcRxPower (2,967,176 samples, 0.31%)</title><rect x="738.9" y="533" width="2.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="741.86" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt;::deallocate (189,106 samples, 0.02%)</title><rect x="256.5" y="325" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="259.54" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;void  (304,521 samples, 0.03%)</title><rect x="112.7" y="453" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="115.73" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned short&gt; &gt;::allocate (163,524 samples, 0.02%)</title><rect x="474.0" y="149" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="477.03" y="159.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::ByteTagListData*&gt; (350,982 samples, 0.04%)</title><rect x="30.7" y="341" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="33.67" y="351.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (246,965 samples, 0.03%)</title><rect x="605.7" y="469" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="608.73" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (419,148 samples, 0.04%)</title><rect x="635.2" y="309" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="638.16" y="319.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetTypeId (231,702 samples, 0.02%)</title><rect x="374.9" y="501" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="377.95" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::begin (148,148 samples, 0.02%)</title><rect x="380.6" y="325" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="383.63" y="335.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetControlMessages (1,385,802 samples, 0.14%)</title><rect x="419.6" y="357" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="422.62" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_addr (159,937 samples, 0.02%)</title><rect x="455.3" y="261" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="458.34" y="271.5" ></text>
</g>
<g >
<title>unsigned int* std::__uninitialized_fill_n_a&lt;unsigned int*, unsigned long, unsigned int, unsigned int&gt; (1,206,539 samples, 0.12%)</title><rect x="695.5" y="469" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="698.47" y="479.5" ></text>
</g>
<g >
<title>malloc (156,584 samples, 0.02%)</title><rect x="154.6" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="157.60" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int const, double&gt; const&amp;&gt; (417,843 samples, 0.04%)</title><rect x="59.5" y="405" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="62.51" y="415.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (18,977,087 samples, 1.96%)</title><rect x="423.4" y="389" width="15.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="426.44" y="399.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (683,830 samples, 0.07%)</title><rect x="444.1" y="261" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="447.11" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~vector (234,807 samples, 0.02%)</title><rect x="263.9" y="389" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="266.87" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (254,332 samples, 0.03%)</title><rect x="595.9" y="133" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="598.86" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (193,911 samples, 0.02%)</title><rect x="104.0" y="309" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="106.96" y="319.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s&gt; (126,894 samples, 0.01%)</title><rect x="585.2" y="245" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="588.18" y="255.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::operator= (338,715 samples, 0.03%)</title><rect x="93.8" y="469" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="96.76" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (238,924 samples, 0.02%)</title><rect x="36.6" y="597" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="39.64" y="607.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModel (551,820 samples, 0.06%)</title><rect x="405.0" y="517" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="408.02" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt;::~vector (432,794 samples, 0.04%)</title><rect x="145.1" y="453" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="148.10" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::operator* (303,984 samples, 0.03%)</title><rect x="178.2" y="469" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="181.17" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~_Vector_base (220,788 samples, 0.02%)</title><rect x="131.3" y="485" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="134.28" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::end (154,845 samples, 0.02%)</title><rect x="327.4" y="485" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="330.40" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (473,287 samples, 0.05%)</title><rect x="385.8" y="485" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="388.84" y="495.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::ReceiveBsrMessage (4,862,603 samples, 0.50%)</title><rect x="457.1" y="325" width="3.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="460.09" y="335.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoTransmitPdu (5,387,885 samples, 0.56%)</title><rect x="19.6" y="373" width="4.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="22.60" y="383.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (344,140 samples, 0.04%)</title><rect x="342.0" y="357" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="345.01" y="367.5" ></text>
</g>
<g >
<title>ns3::IidManager::LookupInformation (534,682 samples, 0.06%)</title><rect x="541.2" y="229" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="544.16" y="239.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, unsigned char, unsigned int&gt;::operator (515,825 samples, 0.05%)</title><rect x="156.0" y="389" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="158.97" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_destroy_node (229,826 samples, 0.02%)</title><rect x="506.3" y="469" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="509.35" y="479.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (403,975 samples, 0.04%)</title><rect x="729.9" y="389" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="732.86" y="399.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::CqiListElement_s (1,645,474 samples, 0.17%)</title><rect x="442.6" y="341" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="445.63" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (206,509 samples, 0.02%)</title><rect x="606.9" y="469" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="609.89" y="479.5" ></text>
</g>
<g >
<title>ns3::LteHarqPhy::ResetUlHarqProcessStatus (2,339,527 samples, 0.24%)</title><rect x="465.0" y="549" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="467.98" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node&gt; (1,950,782 samples, 0.20%)</title><rect x="58.8" y="469" width="1.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="61.81" y="479.5" ></text>
</g>
<g >
<title>ns3::RlcTag::Serialize (366,372 samples, 0.04%)</title><rect x="555.1" y="245" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="558.07" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::Create&lt;ns3::PacketBurst&gt; (610,469 samples, 0.06%)</title><rect x="627.0" y="517" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="630.03" y="527.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; (1,015,028 samples, 0.10%)</title><rect x="505.5" y="453" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="508.46" y="463.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::PacketMetadata (796,815 samples, 0.08%)</title><rect x="32.7" y="389" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="35.70" y="399.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;int const, double&gt;, std::pair&lt;int, double&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int const, double&gt; &gt;, bool&gt; &gt;::type std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::insert&lt;std::pair&lt;int, double&gt; &gt; (2,157,773 samples, 0.22%)</title><rect x="292.8" y="533" width="1.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="295.78" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (280,962 samples, 0.03%)</title><rect x="402.2" y="501" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="405.21" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::Unref (2,461,305 samples, 0.25%)</title><rect x="652.5" y="501" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="655.46" y="511.5" ></text>
</g>
<g >
<title>decltype  (169,019 samples, 0.02%)</title><rect x="533.4" y="293" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="536.42" y="303.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetMobility (496,870 samples, 0.05%)</title><rect x="313.3" y="501" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="316.32" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_valptr (827,930 samples, 0.09%)</title><rect x="759.5" y="677" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="762.54" y="687.5" ></text>
</g>
<g >
<title> (160,403 samples, 0.02%)</title><rect x="744.9" y="517" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="747.94" y="527.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (865,729 samples, 0.09%)</title><rect x="501.7" y="421" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="504.71" y="431.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::operator= (918,195 samples, 0.09%)</title><rect x="140.0" y="485" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="142.96" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (165,767 samples, 0.02%)</title><rect x="82.3" y="469" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="85.32" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::deallocate (190,332 samples, 0.02%)</title><rect x="674.2" y="405" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="677.16" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel&gt;::operator= (145,744 samples, 0.02%)</title><rect x="297.5" y="469" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="300.48" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (301,065 samples, 0.03%)</title><rect x="118.8" y="485" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="121.78" y="495.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlInfoListElement_s const*, std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt; &gt;, ns3::UlInfoListElement_s*&gt; (794,783 samples, 0.08%)</title><rect x="266.2" y="469" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="269.23" y="479.5" ></text>
</g>
<g >
<title>ns3::Packet::AddByteTag (2,074,064 samples, 0.21%)</title><rect x="29.5" y="421" width="1.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="32.50" y="431.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (241,929 samples, 0.02%)</title><rect x="593.4" y="197" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="596.38" y="207.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::__copy_move_a&lt;false, std::_Bit_const_iterator, std::_Bit_iterator&gt; (273,527 samples, 0.03%)</title><rect x="248.0" y="405" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="251.04" y="415.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (2,996,775 samples, 0.31%)</title><rect x="384.1" y="533" width="2.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="387.05" y="543.5" ></text>
</g>
<g >
<title>ns3::Time::Time (197,236 samples, 0.02%)</title><rect x="670.4" y="485" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="673.38" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_base (495,491 samples, 0.05%)</title><rect x="630.2" y="469" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="633.21" y="479.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetTti (159,059 samples, 0.02%)</title><rect x="383.5" y="549" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="386.52" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_M_erase_at_end (228,146 samples, 0.02%)</title><rect x="209.1" y="469" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="212.09" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::~vector (429,894 samples, 0.04%)</title><rect x="445.6" y="309" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="448.63" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (3,799,581 samples, 0.39%)</title><rect x="237.4" y="421" width="3.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="240.35" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (364,748 samples, 0.04%)</title><rect x="474.3" y="277" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="477.35" y="287.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (4,924,388 samples, 0.51%)</title><rect x="451.1" y="277" width="4.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="454.12" y="287.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::operator (148,923 samples, 0.02%)</title><rect x="158.6" y="341" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="161.61" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::_M_erase (2,189,170 samples, 0.23%)</title><rect x="621.4" y="517" width="1.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="624.44" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_put_node (269,933 samples, 0.03%)</title><rect x="392.2" y="501" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="395.23" y="511.5" ></text>
</g>
<g >
<title>cfree (155,386 samples, 0.02%)</title><rect x="216.5" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="219.49" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_end (247,206 samples, 0.03%)</title><rect x="84.7" y="405" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="87.73" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, double const&amp;, double const&amp;, double const&amp;&gt;::_M_head (311,781 samples, 0.03%)</title><rect x="748.8" y="453" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="751.79" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (198,211 samples, 0.02%)</title><rect x="667.1" y="309" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="670.07" y="319.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (151,574 samples, 0.02%)</title><rect x="697.4" y="517" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="700.45" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::construct&lt;ns3::Buffer::Data*, ns3::Buffer::Data* const&amp;&gt; (345,768 samples, 0.04%)</title><rect x="546.1" y="69" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="549.11" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (1,665,605 samples, 0.17%)</title><rect x="663.0" y="421" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="666.00" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::DlInfoListElement_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::begin (250,766 samples, 0.03%)</title><rect x="508.4" y="549" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="511.36" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (190,332 samples, 0.02%)</title><rect x="674.2" y="437" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="677.16" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (340,756 samples, 0.04%)</title><rect x="337.1" y="373" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="340.07" y="383.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (5,576,521 samples, 0.58%)</title><rect x="544.7" y="261" width="4.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="547.65" y="271.5" ></text>
</g>
<g >
<title>pow (501,451 samples, 0.05%)</title><rect x="678.6" y="501" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="681.61" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (158,753 samples, 0.02%)</title><rect x="17.0" y="437" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="19.99" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_get_Tp_allocator (158,009 samples, 0.02%)</title><rect x="239.0" y="277" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="242.03" y="287.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::HarqProcessInfoElement_t*, ns3::HarqProcessInfoElement_t&gt; (288,179 samples, 0.03%)</title><rect x="515.0" y="533" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="518.03" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_S_key (209,098 samples, 0.02%)</title><rect x="73.8" y="453" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="76.78" y="463.5" ></text>
</g>
<g >
<title>ns3::LteUePowerControl::SetRsrp (935,867 samples, 0.10%)</title><rect x="603.0" y="325" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="605.99" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (231,272 samples, 0.02%)</title><rect x="397.4" y="517" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="400.40" y="527.5" ></text>
</g>
<g >
<title>ns3::UeMemberLteUePhySapUser::ReceivePhyPdu (4,482,363 samples, 0.46%)</title><rect x="435.0" y="357" width="3.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="438.01" y="367.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::LteUePhy::PssElement, std::allocator&lt;ns3::LteUePhy::PssElement&gt; &gt;::_M_insert&lt;ns3::LteUePhy::PssElement const&amp;&gt; (194,530 samples, 0.02%)</title><rect x="726.2" y="309" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="729.19" y="319.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::EventImpl&gt;::Delete (444,360 samples, 0.05%)</title><rect x="64.6" y="485" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="67.57" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_addr (147,511 samples, 0.02%)</title><rect x="466.0" y="437" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="468.97" y="447.5" ></text>
</g>
<g >
<title>malloc (220,654 samples, 0.02%)</title><rect x="21.6" y="309" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="24.63" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::list (276,041 samples, 0.03%)</title><rect x="162.0" y="421" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="165.01" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (343,413 samples, 0.04%)</title><rect x="654.2" y="437" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="657.16" y="447.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::MacCeValue_u (234,615 samples, 0.02%)</title><rect x="129.3" y="389" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="132.34" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, double&gt; &gt; std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;int, double&gt; &gt; (1,385,087 samples, 0.14%)</title><rect x="293.0" y="517" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="296.00" y="527.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (1,650,854 samples, 0.17%)</title><rect x="15.8" y="517" width="1.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="18.79" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_ptr (199,234 samples, 0.02%)</title><rect x="362.8" y="437" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="365.81" y="447.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;, ns3::BuildDataListElement_s*&gt; (143,073 samples, 0.01%)</title><rect x="95.0" y="405" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="97.98" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, bool&gt; std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::emplace&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (1,130,669 samples, 0.12%)</title><rect x="81.8" y="517" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="84.78" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteSpectrumPhy*&gt;::_Tuple_impl&lt;ns3::LteSpectrumPhy*&amp;&gt; (415,211 samples, 0.04%)</title><rect x="638.7" y="437" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="641.66" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_impl::~_Vector_impl (154,656 samples, 0.02%)</title><rect x="473.0" y="245" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="476.01" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt;::_M_range_check (158,396 samples, 0.02%)</title><rect x="213.3" y="469" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="216.28" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::~list (231,280 samples, 0.02%)</title><rect x="121.3" y="533" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="124.33" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__strip_reference_wrapper&lt;std::decay&lt;ns3::Scheduler::EventKey const&amp;&gt;::type&gt;::__type, std::__strip_reference_wrapper&lt;std::decay&lt;ns3::EventImpl* const&amp;&gt;::type&gt;::__type&gt; std::make_pair&lt;ns3::Scheduler::EventKey const&amp;, ns3::EventImpl* const&amp;&gt; (141,536 samples, 0.01%)</title><rect x="664.7" y="453" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="667.69" y="463.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::pair&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; &gt;::type&amp;&amp; std::get&lt;1ul, unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (161,945 samples, 0.02%)</title><rect x="333.1" y="485" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="336.14" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;::operator* (163,914 samples, 0.02%)</title><rect x="141.9" y="373" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="144.92" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (1,045,585 samples, 0.11%)</title><rect x="680.0" y="533" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="682.97" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::deallocate (190,332 samples, 0.02%)</title><rect x="674.2" y="373" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="677.16" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::operator (129,312 samples, 0.01%)</title><rect x="79.2" y="501" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="82.23" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::SetTxPowerSpectralDensity (1,023,722 samples, 0.11%)</title><rect x="303.1" y="517" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="306.09" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt;::~pair (656,469 samples, 0.07%)</title><rect x="387.4" y="533" width="0.5" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="390.42" y="543.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*, ns3::CqiListElement_s&gt; (190,387 samples, 0.02%)</title><rect x="131.1" y="485" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="134.09" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::Ptr (158,198 samples, 0.02%)</title><rect x="670.1" y="485" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="673.13" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (126,483 samples, 0.01%)</title><rect x="606.9" y="389" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="609.92" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters, std::allocator&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; &gt;::push_back (722,100 samples, 0.07%)</title><rect x="473.6" y="293" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="476.65" y="303.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (1,343,589 samples, 0.14%)</title><rect x="683.1" y="517" width="1.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="686.13" y="527.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::WriteU16 (309,646 samples, 0.03%)</title><rect x="21.4" y="309" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="24.38" y="319.5" ></text>
</g>
<g >
<title>decltype  (518,331 samples, 0.05%)</title><rect x="271.1" y="373" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="274.13" y="383.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlRlcBufferReq (605,673 samples, 0.06%)</title><rect x="17.9" y="309" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="20.95" y="319.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (494,618 samples, 0.05%)</title><rect x="355.6" y="469" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="358.61" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (1,425,764 samples, 0.15%)</title><rect x="403.4" y="469" width="1.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="406.39" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned short&gt;::_M_valptr (202,650 samples, 0.02%)</title><rect x="463.1" y="293" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="466.13" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_relocate (348,271 samples, 0.04%)</title><rect x="597.8" y="245" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="600.75" y="255.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::TagBuffer (294,318 samples, 0.03%)</title><rect x="490.9" y="517" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="493.87" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_M_lower_bound (843,869 samples, 0.09%)</title><rect x="675.8" y="453" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="678.80" y="463.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (379,721 samples, 0.04%)</title><rect x="112.7" y="469" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="115.67" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDataFrame&gt;::Ptr (160,095 samples, 0.02%)</title><rect x="735.4" y="533" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="738.39" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::allocate (258,278 samples, 0.03%)</title><rect x="334.5" y="341" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="337.53" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;&gt; (186,478 samples, 0.02%)</title><rect x="293.9" y="453" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="296.87" y="463.5" ></text>
</g>
<g >
<title>malloc (169,207 samples, 0.02%)</title><rect x="574.6" y="229" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="577.55" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::~vector (242,607 samples, 0.03%)</title><rect x="521.7" y="341" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="524.72" y="351.5" ></text>
</g>
<g >
<title>ns3::TypeId::~TypeId (183,254 samples, 0.02%)</title><rect x="375.1" y="501" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="378.13" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Recycle (521,509 samples, 0.05%)</title><rect x="453.2" y="85" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="456.15" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned short&gt; &gt;::allocate (360,140 samples, 0.04%)</title><rect x="480.0" y="245" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="482.95" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;::base (158,549 samples, 0.02%)</title><rect x="144.2" y="357" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="147.23" y="367.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (251,522 samples, 0.03%)</title><rect x="78.3" y="469" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="81.29" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (2,069,772 samples, 0.21%)</title><rect x="773.8" y="389" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="776.80" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (190,052 samples, 0.02%)</title><rect x="443.8" y="293" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="446.80" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (501,334 samples, 0.05%)</title><rect x="504.4" y="501" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="507.39" y="511.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetAttributeN (456,193 samples, 0.05%)</title><rect x="631.3" y="453" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="634.31" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::clear (158,065 samples, 0.02%)</title><rect x="165.0" y="341" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="167.98" y="351.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::Ref (156,385 samples, 0.02%)</title><rect x="319.1" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="322.14" y="271.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (489,748 samples, 0.05%)</title><rect x="639.6" y="469" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="642.61" y="479.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt; (159,495 samples, 0.02%)</title><rect x="696.8" y="453" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="699.77" y="463.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a2&lt;false, unsigned char const*, unsigned char*&gt; (185,651 samples, 0.02%)</title><rect x="127.2" y="277" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="130.15" y="287.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (163,843 samples, 0.02%)</title><rect x="147.3" y="389" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="150.28" y="399.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (34,038,084 samples, 3.51%)</title><rect x="578.0" y="437" width="27.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="580.99" y="447.5" >v..</text>
</g>
<g >
<title>ns3::Packet::AddPacketTag (1,534,193 samples, 0.16%)</title><rect x="20.7" y="357" width="1.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="23.74" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_drop_node (325,437 samples, 0.03%)</title><rect x="60.8" y="373" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="63.84" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (677,875 samples, 0.07%)</title><rect x="91.1" y="549" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="94.09" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (220,721 samples, 0.02%)</title><rect x="666.3" y="357" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="669.34" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,496,720 samples, 0.26%)</title><rect x="438.9" y="517" width="2.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="441.93" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::_M_range_check (228,068 samples, 0.02%)</title><rect x="210.3" y="469" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="213.26" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (816,661 samples, 0.08%)</title><rect x="166.1" y="453" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="169.13" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (2,631,944 samples, 0.27%)</title><rect x="273.3" y="469" width="2.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="276.34" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned short*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::__normal_iterator (153,496 samples, 0.02%)</title><rect x="218.1" y="437" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="221.13" y="447.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::ReadU16 (721,482 samples, 0.07%)</title><rect x="490.1" y="501" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="493.10" y="511.5" ></text>
</g>
<g >
<title>ns3::Buffer::~Buffer (1,257,420 samples, 0.13%)</title><rect x="545.7" y="117" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="548.71" y="127.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoReceivePdu (5,629,506 samples, 0.58%)</title><rect x="424.3" y="277" width="4.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="427.27" y="287.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::HigherLayerSelected_s, ns3::HigherLayerSelected_s const&amp;&gt; (241,929 samples, 0.02%)</title><rect x="593.4" y="181" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="596.38" y="191.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (152,182 samples, 0.02%)</title><rect x="112.0" y="389" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="115.02" y="399.5" ></text>
</g>
<g >
<title>ns3::Buffer::Create (1,901,878 samples, 0.20%)</title><rect x="31.2" y="357" width="1.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="34.17" y="367.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ScheduleWithContext (6,714,863 samples, 0.69%)</title><rect x="660.6" y="485" width="5.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="663.58" y="495.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__copy_move_a&lt;false, ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s*&gt; (394,051 samples, 0.04%)</title><rect x="206.9" y="453" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="209.94" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (368,766 samples, 0.04%)</title><rect x="594.4" y="245" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="597.43" y="255.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*&gt; (3,635,299 samples, 0.37%)</title><rect x="124.4" y="469" width="3.0" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="127.44" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (403,625 samples, 0.04%)</title><rect x="706.4" y="405" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="709.45" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::_M_lower_bound (904,347 samples, 0.09%)</title><rect x="570.2" y="293" width="0.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="573.24" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, double&gt; &gt;::_M_addr (198,698 samples, 0.02%)</title><rect x="292.6" y="469" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="295.62" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (269,240 samples, 0.03%)</title><rect x="120.0" y="325" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="122.96" y="335.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (534,449 samples, 0.06%)</title><rect x="521.1" y="293" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="524.06" y="303.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (388,419 samples, 0.04%)</title><rect x="113.2" y="485" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="116.18" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::at (431,395 samples, 0.04%)</title><rect x="488.0" y="501" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="490.98" y="511.5" ></text>
</g>
<g >
<title>ns3::Time::GetMilliSeconds (240,705 samples, 0.02%)</title><rect x="391.2" y="549" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="394.21" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::_S_key (240,787 samples, 0.02%)</title><rect x="185.6" y="437" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="188.61" y="447.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, unsigned short, unsigned short, double&gt; &gt;::_List_const_iterator (194,040 samples, 0.02%)</title><rect x="682.2" y="501" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="685.20" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_key (311,517 samples, 0.03%)</title><rect x="271.9" y="437" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="274.86" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (163,911 samples, 0.02%)</title><rect x="87.5" y="389" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="90.46" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt;::~_Vector_base (153,471 samples, 0.02%)</title><rect x="229.3" y="437" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="232.30" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::SbMeasResult_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::end (191,621 samples, 0.02%)</title><rect x="185.2" y="485" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="188.24" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::ByteTagListData* const*, std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt; &gt; (160,543 samples, 0.02%)</title><rect x="554.1" y="197" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="557.05" y="207.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlCqiInfoReq (4,461,995 samples, 0.46%)</title><rect x="134.3" y="501" width="3.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="137.31" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_get_insert_unique_pos (403,662 samples, 0.04%)</title><rect x="528.3" y="277" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="531.31" y="287.5" ></text>
</g>
<g >
<title>decltype  (351,931 samples, 0.04%)</title><rect x="658.8" y="405" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="661.79" y="415.5" ></text>
</g>
<g >
<title>ns3::RlcTag::GetTypeId (126,373 samples, 0.01%)</title><rect x="555.0" y="229" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="557.97" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (576,261 samples, 0.06%)</title><rect x="574.3" y="341" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="577.32" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::deallocate (158,232 samples, 0.02%)</title><rect x="501.2" y="501" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="504.20" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::LteSpectrumSignalParametersDataFrame (6,515,982 samples, 0.67%)</title><rect x="67.6" y="485" width="5.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="70.61" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;::_M_valptr (233,529 samples, 0.02%)</title><rect x="170.4" y="389" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="173.40" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (2,105,662 samples, 0.22%)</title><rect x="15.5" y="821" width="1.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="18.45" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (712,112 samples, 0.07%)</title><rect x="718.4" y="453" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="721.35" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::~LteSpectrumSignalParametersDlCtrlFrame (656,172 samples, 0.07%)</title><rect x="775.9" y="405" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="778.88" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_check_len (226,478 samples, 0.02%)</title><rect x="459.7" y="245" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="462.70" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; &gt; (293,879 samples, 0.03%)</title><rect x="206.2" y="453" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="209.19" y="463.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (102,241,082 samples, 10.54%)</title><rect x="137.9" y="501" width="82.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="140.93" y="511.5" >ns3::PfFf..</text>
</g>
<g >
<title>ns3::Simulator::ScheduleWithContext (179,532 samples, 0.02%)</title><rect x="614.1" y="501" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="617.14" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_deallocate (126,977 samples, 0.01%)</title><rect x="521.8" y="309" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="524.75" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::back (197,417 samples, 0.02%)</title><rect x="610.9" y="501" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="613.89" y="511.5" ></text>
</g>
<g >
<title> (309,905 samples, 0.03%)</title><rect x="652.2" y="501" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="655.18" y="511.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ProcessEventsWithContext (229,456 samples, 0.02%)</title><rect x="37.8" y="725" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="40.82" y="735.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::ByteTagList (194,885 samples, 0.02%)</title><rect x="624.5" y="485" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="627.53" y="495.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (356,896 samples, 0.04%)</title><rect x="442.3" y="277" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="445.31" y="287.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (19,853,193 samples, 2.05%)</title><rect x="551.5" y="293" width="16.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="554.49" y="303.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::ConstValuesEnd (330,602 samples, 0.03%)</title><rect x="589.5" y="277" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="592.55" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (189,435 samples, 0.02%)</title><rect x="203.5" y="373" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="206.51" y="383.5" ></text>
</g>
<g >
<title>ns3::TypeId::SetUid (156,879 samples, 0.02%)</title><rect x="436.5" y="213" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="439.46" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::_M_valptr (265,616 samples, 0.03%)</title><rect x="178.2" y="453" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="181.20" y="463.5" ></text>
</g>
<g >
<title>ns3::Object::Object (1,324,951 samples, 0.14%)</title><rect x="446.3" y="277" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="449.26" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::clear (272,736 samples, 0.03%)</title><rect x="379.4" y="309" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="382.42" y="319.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (360,886 samples, 0.04%)</title><rect x="519.3" y="293" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="522.28" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_put_node (124,434 samples, 0.01%)</title><rect x="545.2" y="213" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="548.24" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::deallocate (237,323 samples, 0.02%)</title><rect x="233.3" y="245" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="236.30" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::find (1,377,498 samples, 0.14%)</title><rect x="28.1" y="325" width="1.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="31.09" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_S_key (613,816 samples, 0.06%)</title><rect x="650.3" y="453" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="653.31" y="463.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*&gt; (1,085,784 samples, 0.11%)</title><rect x="92.1" y="421" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="95.06" y="431.5" ></text>
</g>
<g >
<title>ns3::RlcTag::Serialize (343,838 samples, 0.04%)</title><rect x="13.9" y="389" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="16.86" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;::_M_valptr (240,787 samples, 0.02%)</title><rect x="185.6" y="421" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="188.61" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_M_key (128,223 samples, 0.01%)</title><rect x="82.2" y="469" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="85.22" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~_Vector_base (242,999 samples, 0.03%)</title><rect x="473.3" y="277" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="476.29" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (964,623 samples, 0.10%)</title><rect x="432.0" y="309" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="435.01" y="319.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::GetDouble (246,625 samples, 0.03%)</title><rect x="605.9" y="485" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="608.93" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (282,732 samples, 0.03%)</title><rect x="64.7" y="437" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="67.70" y="447.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (2,803,402 samples, 0.29%)</title><rect x="451.6" y="149" width="2.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="454.64" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_allocate (238,842 samples, 0.02%)</title><rect x="476.4" y="261" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="479.41" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_ptr (201,235 samples, 0.02%)</title><rect x="188.5" y="405" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="191.50" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt;::at (311,692 samples, 0.03%)</title><rect x="213.2" y="485" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="216.22" y="495.5" ></text>
</g>
<g >
<title>ns3::DlDciLteControlMessage::SetDci (501,657 samples, 0.05%)</title><rect x="147.9" y="453" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="150.88" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator*= (412,379 samples, 0.04%)</title><rect x="493.2" y="549" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="496.24" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, false&gt;::_M_head (146,531 samples, 0.02%)</title><rect x="755.4" y="549" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="758.37" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (466,245 samples, 0.05%)</title><rect x="776.0" y="389" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="779.03" y="399.5" ></text>
</g>
<g >
<title>decltype  (127,066 samples, 0.01%)</title><rect x="88.3" y="341" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="91.28" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;::_M_valptr (128,223 samples, 0.01%)</title><rect x="82.2" y="437" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="85.22" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (555,396 samples, 0.06%)</title><rect x="486.1" y="533" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="489.06" y="543.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (384,276 samples, 0.04%)</title><rect x="119.9" y="389" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="122.86" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::get_allocator (277,666 samples, 0.03%)</title><rect x="350.4" y="389" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="353.45" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (159,855 samples, 0.02%)</title><rect x="722.4" y="501" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="725.39" y="511.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt;::operator (618,076 samples, 0.06%)</title><rect x="79.9" y="517" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="82.92" y="527.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoReportBufferStatus (1,019,985 samples, 0.11%)</title><rect x="17.9" y="373" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="20.88" y="383.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (2,253,374 samples, 0.23%)</title><rect x="549.2" y="245" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="552.20" y="255.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (152,096 samples, 0.02%)</title><rect x="642.9" y="501" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="645.91" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (1,373,897 samples, 0.14%)</title><rect x="179.8" y="453" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="182.83" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (224,964 samples, 0.02%)</title><rect x="97.3" y="437" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="100.35" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::end (167,215 samples, 0.02%)</title><rect x="554.2" y="197" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="557.22" y="207.5" ></text>
</g>
<g >
<title>int* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (268,424 samples, 0.03%)</title><rect x="91.1" y="517" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="94.12" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::_M_lower_bound (893,620 samples, 0.09%)</title><rect x="437.8" y="293" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="440.80" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt;::Ptr (301,451 samples, 0.03%)</title><rect x="388.2" y="533" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="391.24" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;::operator (160,344 samples, 0.02%)</title><rect x="431.8" y="325" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="434.79" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (154,567 samples, 0.02%)</title><rect x="117.8" y="421" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="120.78" y="431.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Add (1,876,916 samples, 0.19%)</title><rect x="29.5" y="405" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="32.50" y="415.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*&gt; (411,592 samples, 0.04%)</title><rect x="107.3" y="453" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="110.29" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (324,769 samples, 0.03%)</title><rect x="611.9" y="373" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="614.94" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (276,695 samples, 0.03%)</title><rect x="71.7" y="405" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="74.69" y="415.5" ></text>
</g>
<g >
<title>int const* std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (149,777 samples, 0.02%)</title><rect x="399.1" y="453" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="402.06" y="463.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Unref (635,403 samples, 0.07%)</title><rect x="308.1" y="485" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="311.07" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::_Rb_tree_iterator (128,201 samples, 0.01%)</title><rect x="80.9" y="485" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="83.93" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleUeComponentCarrierManager::DoNotifyTxOpportunity (21,809,279 samples, 2.25%)</title><rect x="551.2" y="309" width="17.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="554.22" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair (186,508 samples, 0.02%)</title><rect x="243.7" y="437" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="246.67" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, false&gt;::_M_head (163,671 samples, 0.02%)</title><rect x="754.6" y="549" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="757.64" y="559.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; (1,015,028 samples, 0.10%)</title><rect x="505.5" y="469" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="508.46" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void  (891,744,980 samples, 91.95%)</title><rect x="41.0" y="693" width="717.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="43.97" y="703.5" >std::function&lt;void </text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (1,522,938 samples, 0.16%)</title><rect x="512.4" y="517" width="1.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="515.43" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="677" width="1.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="18.45" y="687.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (232,709 samples, 0.02%)</title><rect x="136.5" y="437" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="139.50" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (297,048 samples, 0.03%)</title><rect x="666.3" y="389" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="669.27" y="399.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (460,732 samples, 0.05%)</title><rect x="166.4" y="389" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="169.42" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::lower_bound (455,631 samples, 0.05%)</title><rect x="192.6" y="469" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="195.63" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::find (198,041 samples, 0.02%)</title><rect x="104.3" y="453" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="107.29" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (124,898 samples, 0.01%)</title><rect x="706.2" y="453" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="709.19" y="463.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (535,246 samples, 0.06%)</title><rect x="14.1" y="373" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="17.13" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (347,387 samples, 0.04%)</title><rect x="241.2" y="453" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="244.25" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::clear (2,200,745 samples, 0.23%)</title><rect x="505.0" y="533" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="508.05" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (186,424 samples, 0.02%)</title><rect x="397.0" y="533" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="399.97" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_check_len (162,250 samples, 0.02%)</title><rect x="595.1" y="261" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="598.12" y="271.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::PhichListElement_s*&gt; (154,556 samples, 0.02%)</title><rect x="229.4" y="421" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="232.42" y="431.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (4,921,016 samples, 0.51%)</title><rect x="377.4" y="373" width="4.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="380.45" y="383.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::SetTxPowerSpectralDensity (252,668 samples, 0.03%)</title><rect x="61.3" y="533" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="64.27" y="543.5" ></text>
</g>
<g >
<title>ns3::operator&lt; (151,762 samples, 0.02%)</title><rect x="676.4" y="421" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="679.36" y="431.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::SimpleRefCount (283,524 samples, 0.03%)</title><rect x="446.6" y="261" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="449.64" y="271.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::RemoveNext (12,466,528 samples, 1.29%)</title><rect x="758.3" y="725" width="10.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="761.34" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::deallocate (276,642 samples, 0.03%)</title><rect x="233.3" y="277" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="236.27" y="287.5" ></text>
</g>
<g >
<title>ns3::TimeStep (151,604 samples, 0.02%)</title><rect x="665.2" y="469" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="668.20" y="479.5" ></text>
</g>
<g >
<title>ns3::Packet::Copy (1,194,409 samples, 0.12%)</title><rect x="67.8" y="453" width="1.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="70.80" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (155,456 samples, 0.02%)</title><rect x="341.2" y="453" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="344.24" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned short*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::base (158,533 samples, 0.02%)</title><rect x="218.5" y="421" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="221.50" y="431.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Unref (565,943 samples, 0.06%)</title><rect x="727.4" y="485" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="730.39" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (126,370 samples, 0.01%)</title><rect x="585.7" y="197" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="588.72" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_create_storage (403,537 samples, 0.04%)</title><rect x="444.8" y="293" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="447.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::size (288,898 samples, 0.03%)</title><rect x="546.4" y="85" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="549.38" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_get_insert_unique_pos (357,360 samples, 0.04%)</title><rect x="385.9" y="469" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="388.90" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (562,566 samples, 0.06%)</title><rect x="437.0" y="293" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="440.02" y="303.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (447,796 samples, 0.05%)</title><rect x="525.0" y="277" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="527.98" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_insert_node (194,473 samples, 0.02%)</title><rect x="527.8" y="277" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="530.80" y="287.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::CqiListElement_s&gt; (154,796 samples, 0.02%)</title><rect x="131.1" y="421" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="134.12" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_base (443,709 samples, 0.05%)</title><rect x="476.3" y="293" width="0.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="479.31" y="303.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (8,154,602 samples, 0.84%)</title><rect x="544.6" y="277" width="6.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="547.56" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;&gt; (331,552 samples, 0.03%)</title><rect x="528.4" y="261" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="531.37" y="271.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt; &gt;::find (184,813 samples, 0.02%)</title><rect x="99.1" y="469" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="102.05" y="479.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__copy_move_a2&lt;false, ns3::HigherLayerSelected_s const*, ns3::HigherLayerSelected_s*&gt; (193,644 samples, 0.02%)</title><rect x="134.9" y="405" width="0.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="137.86" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_put_node (199,431 samples, 0.02%)</title><rect x="393.5" y="501" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="396.47" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::begin (148,580 samples, 0.02%)</title><rect x="178.6" y="453" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="181.56" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (270,636 samples, 0.03%)</title><rect x="239.6" y="149" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="242.59" y="159.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (407,207 samples, 0.04%)</title><rect x="115.9" y="437" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="118.94" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (392,648 samples, 0.04%)</title><rect x="612.9" y="405" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="615.90" y="415.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; &gt; (317,071 samples, 0.03%)</title><rect x="26.4" y="261" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="29.42" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_M_create_storage (253,158 samples, 0.03%)</title><rect x="142.5" y="421" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="145.52" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;void  (495,402 samples, 0.05%)</title><rect x="340.8" y="453" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="343.78" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (155,136 samples, 0.02%)</title><rect x="116.7" y="501" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="119.66" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (266,378 samples, 0.03%)</title><rect x="300.6" y="405" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="303.60" y="415.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (979,447 samples, 0.10%)</title><rect x="412.2" y="453" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="415.17" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumConverter::Convert (724,879 samples, 0.07%)</title><rect x="79.1" y="517" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="82.07" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list&lt;std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (1,329,282 samples, 0.14%)</title><rect x="721.3" y="501" width="1.0" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="724.27" y="511.5" ></text>
</g>
<g >
<title>ns3::LteChunkProcessor::End (22,516,339 samples, 2.32%)</title><rect x="467.2" y="533" width="18.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="470.18" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::allocate (158,386 samples, 0.02%)</title><rect x="202.5" y="437" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="205.48" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::push_back (307,397 samples, 0.03%)</title><rect x="118.4" y="485" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="121.41" y="495.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (685,962 samples, 0.07%)</title><rect x="687.7" y="453" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="690.70" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::back (161,548 samples, 0.02%)</title><rect x="620.4" y="485" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="623.39" y="495.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (14,431,856 samples, 1.49%)</title><rect x="472.2" y="357" width="11.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="475.17" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_M_erase_at_end (1,267,352 samples, 0.13%)</title><rect x="255.9" y="501" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="258.92" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr&lt;ns3::SpectrumModel&gt; (555,656 samples, 0.06%)</title><rect x="298.8" y="469" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="301.84" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (869,023 samples, 0.09%)</title><rect x="606.4" y="501" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="609.39" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (155,299 samples, 0.02%)</title><rect x="35.5" y="757" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="38.54" y="767.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ScheduleWithContext (179,532 samples, 0.02%)</title><rect x="614.1" y="485" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="617.14" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::vector (261,998 samples, 0.03%)</title><rect x="117.4" y="469" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="120.37" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_key (191,540 samples, 0.02%)</title><rect x="661.8" y="405" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="664.83" y="415.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="677" width="18.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="20.17" y="687.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (185,369 samples, 0.02%)</title><rect x="117.4" y="421" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="120.37" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node&gt; (294,404 samples, 0.03%)</title><rect x="60.1" y="421" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="63.14" y="431.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, ns3::SpectrumValue const&amp;&gt;::operator (20,037,682 samples, 2.07%)</title><rect x="467.7" y="501" width="16.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="470.67" y="511.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*, unsigned short&gt; (192,062 samples, 0.02%)</title><rect x="147.7" y="421" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="150.69" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::deallocate (164,554 samples, 0.02%)</title><rect x="777.0" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="779.97" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::operator= (1,223,540 samples, 0.13%)</title><rect x="216.9" y="485" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="219.93" y="495.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (165,400 samples, 0.02%)</title><rect x="68.0" y="421" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="71.03" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Ptr (189,531 samples, 0.02%)</title><rect x="643.9" y="501" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="646.89" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_get_Node_allocator (204,937 samples, 0.02%)</title><rect x="190.9" y="405" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="193.86" y="415.5" ></text>
</g>
<g >
<title>double* std::fill_n&lt;double*, unsigned long, double&gt; (550,124 samples, 0.06%)</title><rect x="403.7" y="405" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="406.71" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~vector (153,009 samples, 0.02%)</title><rect x="93.4" y="485" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="96.42" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; (229,505 samples, 0.02%)</title><rect x="125.0" y="293" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="128.01" y="303.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (19,285,336 samples, 1.99%)</title><rect x="19.6" y="517" width="15.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="22.60" y="527.5" ></text>
</g>
<g >
<title> (157,592 samples, 0.02%)</title><rect x="743.7" y="533" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="746.73" y="543.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoReceivePdu (7,688,560 samples, 0.79%)</title><rect x="424.1" y="309" width="6.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="427.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_drop_node (1,378,012 samples, 0.14%)</title><rect x="505.2" y="501" width="1.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="508.24" y="511.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (280,915 samples, 0.03%)</title><rect x="519.3" y="261" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="522.35" y="271.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (279,737 samples, 0.03%)</title><rect x="10.0" y="773" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (153,635 samples, 0.02%)</title><rect x="457.2" y="277" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="460.19" y="287.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::operator= (986,836 samples, 0.10%)</title><rect x="585.4" y="261" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="588.42" y="271.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters::~SchedUlCqiInfoReqParameters (544,597 samples, 0.06%)</title><rect x="263.6" y="405" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="266.62" y="415.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a2&lt;false, double const*, double*&gt; (157,987 samples, 0.02%)</title><rect x="325.1" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="328.10" y="367.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (829,393 samples, 0.09%)</title><rect x="72.1" y="437" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="75.11" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;ns3::Scheduler::EventKey&gt;::operator (678,555 samples, 0.07%)</title><rect x="274.9" y="421" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="277.91" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::list (568,564 samples, 0.06%)</title><rect x="630.2" y="485" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="633.15" y="495.5" ></text>
</g>
<g >
<title>unsigned short* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (575,480 samples, 0.06%)</title><rect x="521.0" y="309" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="524.02" y="319.5" ></text>
</g>
<g >
<title>ns3::SimpleUeCcmMacSapUser::NotifyTxOpportunity (21,852,046 samples, 2.25%)</title><rect x="551.2" y="325" width="17.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="554.19" y="335.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*, ns3::CqiListElement_s&gt; (183,284 samples, 0.02%)</title><rect x="128.1" y="485" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="131.14" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_M_deallocate (158,001 samples, 0.02%)</title><rect x="262.4" y="501" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="265.36" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_move_assign (524,495 samples, 0.05%)</title><rect x="357.2" y="405" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="360.22" y="415.5" ></text>
</g>
<g >
<title>ns3::Node::DoDispose (238,924 samples, 0.02%)</title><rect x="36.6" y="517" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="39.64" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (150,187 samples, 0.02%)</title><rect x="718.4" y="421" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="721.35" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,713,426 samples, 0.18%)</title><rect x="283.1" y="501" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="286.13" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetDevice (383,185 samples, 0.04%)</title><rect x="313.0" y="501" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="316.01" y="511.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s* std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlInfoListElement_s const*, std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt; &gt; &gt; (1,018,809 samples, 0.11%)</title><rect x="266.1" y="501" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="269.11" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::~_Vector_base (233,349 samples, 0.02%)</title><rect x="472.9" y="261" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="475.94" y="271.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (2,126,604 samples, 0.22%)</title><rect x="562.8" y="197" width="1.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="565.79" y="207.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::PacketMetadata (262,148 samples, 0.03%)</title><rect x="624.7" y="485" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="627.69" y="495.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::ReportUlHarqFeedback (652,539 samples, 0.07%)</title><rect x="440.3" y="373" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="443.31" y="383.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (41,165,130 samples, 4.24%)</title><rect x="140.8" y="485" width="33.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="143.77" y="495.5" >ns..</text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::~vector (470,466 samples, 0.05%)</title><rect x="207.8" y="485" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="210.78" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (235,913 samples, 0.02%)</title><rect x="159.6" y="405" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="162.56" y="415.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t const* std::__niter_base&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; (200,788 samples, 0.02%)</title><rect x="513.0" y="453" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="515.96" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_impl_data::_Vector_impl_data (146,004 samples, 0.02%)</title><rect x="413.5" y="453" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="416.46" y="463.5" ></text>
</g>
<g >
<title>unsigned char* std::__fill_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (268,012 samples, 0.03%)</title><rect x="216.1" y="389" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="219.06" y="399.5" ></text>
</g>
<g >
<title>ns3::Time::GetSeconds (693,056 samples, 0.07%)</title><rect x="605.6" y="517" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="608.57" y="527.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::Remove (349,447 samples, 0.04%)</title><rect x="435.3" y="309" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="438.25" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_drop_node (496,453 samples, 0.05%)</title><rect x="193.2" y="437" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="196.18" y="447.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (199,761 samples, 0.02%)</title><rect x="703.7" y="549" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="706.68" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::at (589,794 samples, 0.06%)</title><rect x="525.6" y="341" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="528.59" y="351.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::DlDciListElement_s (3,299,485 samples, 0.34%)</title><rect x="518.8" y="357" width="2.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="521.83" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (4,247,837 samples, 0.44%)</title><rect x="160.7" y="453" width="3.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="163.66" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (19,263,971 samples, 1.99%)</title><rect x="423.2" y="405" width="15.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="426.21" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst const&gt;::~Ptr (148,119 samples, 0.02%)</title><rect x="720.5" y="517" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="723.45" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (503,437 samples, 0.05%)</title><rect x="170.2" y="405" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="173.19" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (572,667 samples, 0.06%)</title><rect x="285.6" y="485" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="288.64" y="495.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (162,694 samples, 0.02%)</title><rect x="550.3" y="165" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="553.29" y="175.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (153,002 samples, 0.02%)</title><rect x="53.7" y="469" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="56.75" y="479.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::ReceiveLteControlMessageList (71,922,230 samples, 7.42%)</title><rect x="518.2" y="373" width="57.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="521.18" y="383.5" >ns3::L..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (179,945 samples, 0.02%)</title><rect x="699.2" y="533" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="702.15" y="543.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::QueueSubChannelsForTransmission (714,483 samples, 0.07%)</title><rect x="530.5" y="357" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="533.52" y="367.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a1&lt;false, ns3::DlInfoListElement_s::HarqStatus_e const*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (158,174 samples, 0.02%)</title><rect x="510.0" y="421" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="513.04" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (1,174,367 samples, 0.12%)</title><rect x="672.8" y="533" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="675.85" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteUeMac::LcInfo, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::find (1,463,058 samples, 0.15%)</title><rect x="690.8" y="501" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="693.81" y="511.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (2,715,978 samples, 0.28%)</title><rect x="17.2" y="421" width="2.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="20.17" y="431.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (1,607,547 samples, 0.17%)</title><rect x="634.5" y="373" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="637.53" y="383.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::~PacketTagList (184,330 samples, 0.02%)</title><rect x="653.5" y="229" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="656.51" y="239.5" ></text>
</g>
<g >
<title>unsigned short* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (649,960 samples, 0.07%)</title><rect x="474.9" y="229" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="477.87" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;::_M_valptr (243,580 samples, 0.03%)</title><rect x="458.6" y="213" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="461.61" y="223.5" ></text>
</g>
<g >
<title> (247,279 samples, 0.03%)</title><rect x="534.1" y="341" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="537.14" y="351.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (194,175 samples, 0.02%)</title><rect x="17.4" y="293" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="20.39" y="303.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt;, std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt;, 0ul, 3ul&gt;::__eq (2,160,599 samples, 0.22%)</title><rect x="747.3" y="501" width="1.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="750.31" y="511.5" ></text>
</g>
<g >
<title>double* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (156,421 samples, 0.02%)</title><rect x="484.8" y="453" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="487.85" y="463.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Run (2,105,662 samples, 0.22%)</title><rect x="15.5" y="757" width="1.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="18.45" y="767.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (1,174,204 samples, 0.12%)</title><rect x="625.9" y="485" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="628.93" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (206,860 samples, 0.02%)</title><rect x="83.5" y="373" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.54" y="383.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t&amp;&amp; std::forward&lt;ns3::tbInfo_t&gt; (124,354 samples, 0.01%)</title><rect x="527.0" y="197" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="529.98" y="207.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (10,219,715 samples, 1.05%)</title><rect x="150.7" y="453" width="8.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="153.73" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;&gt; (236,989 samples, 0.02%)</title><rect x="340.6" y="325" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="343.59" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::_M_lower_bound (1,154,434 samples, 0.12%)</title><rect x="158.0" y="373" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="160.95" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (150,187 samples, 0.02%)</title><rect x="718.4" y="357" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="721.35" y="367.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s::UlInfoListElement_s (561,715 samples, 0.06%)</title><rect x="439.4" y="437" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="442.38" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_get_Node_allocator (124,773 samples, 0.01%)</title><rect x="503.2" y="453" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="506.21" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (261,746 samples, 0.03%)</title><rect x="109.8" y="485" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="112.79" y="495.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;::operator (350,639 samples, 0.04%)</title><rect x="321.8" y="421" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="324.80" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_lower_bound (193,840 samples, 0.02%)</title><rect x="156.6" y="373" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="159.62" y="383.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (869,324 samples, 0.09%)</title><rect x="283.8" y="453" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="286.81" y="463.5" ></text>
</g>
<g >
<title>double const&amp; const&amp; std::__get_helper&lt;2ul, double const&amp;&gt; (303,442 samples, 0.03%)</title><rect x="747.9" y="437" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="750.87" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_insert_node (220,811 samples, 0.02%)</title><rect x="661.7" y="389" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="664.65" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_drop_node (193,911 samples, 0.02%)</title><rect x="104.0" y="389" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="106.96" y="399.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::~SbMeasResult_s (493,524 samples, 0.05%)</title><rect x="461.1" y="293" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="464.07" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_base (414,980 samples, 0.04%)</title><rect x="162.4" y="389" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="165.42" y="399.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy*&amp; std::forward&lt;ns3::LteSpectrumPhy*&amp;&gt; (192,441 samples, 0.02%)</title><rect x="638.4" y="469" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="641.36" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::BuildDataListElement_s*&gt; (793,632 samples, 0.08%)</title><rect x="145.6" y="405" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="148.63" y="415.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (213,295 samples, 0.02%)</title><rect x="583.7" y="213" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="586.69" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::operator+ (151,748 samples, 0.02%)</title><rect x="376.4" y="517" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="379.42" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_M_end (156,504 samples, 0.02%)</title><rect x="235.5" y="453" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="238.54" y="463.5" ></text>
</g>
<g >
<title>decltype  (1,840,875 samples, 0.19%)</title><rect x="211.7" y="437" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="214.74" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt; &gt; &gt;::begin (158,211 samples, 0.02%)</title><rect x="80.0" y="501" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="82.99" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (160,592 samples, 0.02%)</title><rect x="498.9" y="501" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="501.86" y="511.5" ></text>
</g>
<g >
<title>pow (358,907 samples, 0.04%)</title><rect x="302.6" y="485" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="305.56" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::lower_bound (431,721 samples, 0.04%)</title><rect x="243.9" y="453" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="246.94" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Acquire (419,529 samples, 0.04%)</title><rect x="360.8" y="469" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="363.80" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::~Ptr (312,525 samples, 0.03%)</title><rect x="315.6" y="405" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="318.56" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_base (1,053,971 samples, 0.11%)</title><rect x="260.6" y="373" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="263.64" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::allocate (493,183 samples, 0.05%)</title><rect x="563.8" y="101" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="566.80" y="111.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (158,356 samples, 0.02%)</title><rect x="646.6" y="341" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="649.62" y="351.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;double*, double&gt; (344,019 samples, 0.04%)</title><rect x="301.5" y="341" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="304.46" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (372,854 samples, 0.04%)</title><rect x="72.2" y="389" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="75.24" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*&gt; (160,848 samples, 0.02%)</title><rect x="146.1" y="293" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="149.14" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::push_back (452,241 samples, 0.05%)</title><rect x="230.2" y="405" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="233.16" y="415.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (419,766 samples, 0.04%)</title><rect x="591.5" y="245" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="594.49" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt;::vector (813,912 samples, 0.08%)</title><rect x="227.4" y="453" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="230.44" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (1,848,808 samples, 0.19%)</title><rect x="336.6" y="421" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="339.60" y="431.5" ></text>
</g>
<g >
<title>ns3::operator&lt; (204,834 samples, 0.02%)</title><rect x="707.5" y="373" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="710.51" y="383.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::SimpleRefCount (573,224 samples, 0.06%)</title><rect x="537.7" y="277" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="540.71" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; (569,357 samples, 0.06%)</title><rect x="503.5" y="421" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="506.53" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;::operator+ (155,822 samples, 0.02%)</title><rect x="352.1" y="501" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="355.08" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (408,168 samples, 0.04%)</title><rect x="303.6" y="437" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="306.59" y="447.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (2,983,151 samples, 0.31%)</title><rect x="17.2" y="517" width="2.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="20.17" y="527.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::SetTxPowerSpectralDensity (266,358 samples, 0.03%)</title><rect x="112.2" y="501" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="115.18" y="511.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::~SbMeasResult_s (340,024 samples, 0.04%)</title><rect x="106.8" y="357" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="109.80" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::map (934,328 samples, 0.10%)</title><rect x="189.9" y="485" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="192.89" y="495.5" ></text>
</g>
<g >
<title>ns3::UniformRandomVariable::GetValue (1,052,360 samples, 0.11%)</title><rect x="608.7" y="549" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="611.66" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (505,904 samples, 0.05%)</title><rect x="198.3" y="437" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="201.32" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUeNetDevice&gt; ns3::Object::GetObject&lt;ns3::LteUeNetDevice&gt; (242,422 samples, 0.02%)</title><rect x="599.7" y="309" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="602.66" y="319.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (180,536 samples, 0.02%)</title><rect x="697.8" y="501" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="700.79" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::~map (934,712 samples, 0.10%)</title><rect x="776.5" y="437" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="779.47" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (923,730,017 samples, 95.25%)</title><rect x="35.5" y="821" width="743.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="38.54" y="831.5" >__libc_start_main</text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::__relocate_a&lt;ns3::BuildDataListElement_s*, ns3::BuildDataListElement_s*, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; (268,184 samples, 0.03%)</title><rect x="203.0" y="437" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="205.97" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (162,629 samples, 0.02%)</title><rect x="189.0" y="453" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="192.03" y="463.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::UlInfoListElementHarqFeedback (486,223 samples, 0.05%)</title><rect x="440.3" y="357" width="0.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="443.35" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::vector (634,130 samples, 0.07%)</title><rect x="350.7" y="389" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="353.67" y="399.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (396,468 samples, 0.04%)</title><rect x="666.2" y="469" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="669.19" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MatrixArray&lt;std::complex&lt;double&gt; &gt; const&gt;::operator= (149,159 samples, 0.02%)</title><rect x="645.4" y="453" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="648.40" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::_M_valptr (164,987 samples, 0.02%)</title><rect x="568.9" y="309" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="571.88" y="319.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::__copy_move_a2&lt;false, std::_Bit_const_iterator, std::_Bit_iterator&gt; (267,552 samples, 0.03%)</title><rect x="199.4" y="373" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="202.39" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (1,826,902 samples, 0.19%)</title><rect x="647.0" y="421" width="1.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="650.00" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_node (493,361 samples, 0.05%)</title><rect x="334.3" y="357" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="337.34" y="367.5" ></text>
</g>
<g >
<title>double&amp; std::forward&lt;double&amp;&gt; (125,210 samples, 0.01%)</title><rect x="48.7" y="581" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="51.66" y="591.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::MobilityModel const&gt;, ns3::Ptr&lt;ns3::MobilityModel const&gt;, double, double, double, double&gt; &gt;::_List_const_iterator (158,162 samples, 0.02%)</title><rect x="746.4" y="517" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="749.44" y="527.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_List_const_iterator (161,744 samples, 0.02%)</title><rect x="491.7" y="517" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="494.66" y="527.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="581" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="18.45" y="591.5" ></text>
</g>
<g >
<title>ns3::operator&lt; (654,418 samples, 0.07%)</title><rect x="337.6" y="357" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="340.56" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_create_storage (160,120 samples, 0.02%)</title><rect x="443.1" y="277" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="446.10" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::end (125,572 samples, 0.01%)</title><rect x="676.5" y="453" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="679.48" y="463.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (500,842 samples, 0.05%)</title><rect x="214.2" y="453" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="217.21" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_M_key (154,486 samples, 0.02%)</title><rect x="659.3" y="469" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="662.28" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (151,942 samples, 0.02%)</title><rect x="99.2" y="453" width="0.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="102.20" y="463.5" ></text>
</g>
<g >
<title>ns3::Buffer::Initialize (198,909 samples, 0.02%)</title><rect x="19.0" y="357" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="21.95" y="367.5" ></text>
</g>
<g >
<title>decltype  (189,091 samples, 0.02%)</title><rect x="100.8" y="421" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="103.84" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::~SpectrumSignalParameters (150,807 samples, 0.02%)</title><rect x="775.9" y="389" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="778.91" y="399.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::~ByteTagList (286,110 samples, 0.03%)</title><rect x="76.3" y="229" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="79.28" y="239.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator= (275,587 samples, 0.03%)</title><rect x="316.7" y="405" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="319.72" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator++ (129,245 samples, 0.01%)</title><rect x="54.4" y="501" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="57.40" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (997,034 samples, 0.10%)</title><rect x="462.8" y="357" width="0.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="465.81" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;::_M_ptr (221,148 samples, 0.02%)</title><rect x="650.6" y="421" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="653.60" y="431.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (558,175 samples, 0.06%)</title><rect x="271.1" y="389" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="274.10" y="399.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (659,540 samples, 0.07%)</title><rect x="166.3" y="421" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="169.26" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::pair&lt;unsigned short const&amp;, 0ul&gt; (363,578 samples, 0.04%)</title><rect x="243.0" y="357" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="245.96" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_begin (473,969 samples, 0.05%)</title><rect x="171.1" y="421" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="174.05" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (304,113 samples, 0.03%)</title><rect x="370.2" y="517" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="373.17" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;ns3::LteSpectrumModelId&gt;::operator (304,181 samples, 0.03%)</title><rect x="676.2" y="437" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="679.23" y="447.5" ></text>
</g>
<g >
<title>ns3::Time::~Time (126,395 samples, 0.01%)</title><rect x="86.7" y="469" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="89.68" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::push_back (2,043,951 samples, 0.21%)</title><rect x="249.3" y="485" width="1.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="252.28" y="495.5" ></text>
</g>
<g >
<title>ns3::Angles::NormalizeAngles (187,861 samples, 0.02%)</title><rect x="65.9" y="485" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="68.93" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::_M_lower_bound (462,671 samples, 0.05%)</title><rect x="27.0" y="277" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="30.01" y="287.5" ></text>
</g>
<g >
<title>malloc (249,753 samples, 0.03%)</title><rect x="72.8" y="469" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="75.85" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Add (189,127 samples, 0.02%)</title><rect x="405.5" y="501" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="408.47" y="511.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, ns3::DlInfoListElement_s&gt;::Callback&lt;void  (3,583,306 samples, 0.37%)</title><rect x="418.5" y="469" width="2.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="421.51" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_fill_initialize (1,326,838 samples, 0.14%)</title><rect x="695.4" y="485" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="698.37" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (248,988 samples, 0.03%)</title><rect x="61.7" y="501" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="64.70" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::back (194,530 samples, 0.02%)</title><rect x="479.1" y="277" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="482.09" y="287.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (147,743 samples, 0.02%)</title><rect x="107.3" y="341" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="110.33" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (145,405 samples, 0.01%)</title><rect x="308.5" y="389" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="311.46" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::_M_lower_bound (805,256 samples, 0.08%)</title><rect x="691.2" y="469" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="694.25" y="479.5" ></text>
</g>
<g >
<title>ns3::Object::Construct (2,205,090 samples, 0.23%)</title><rect x="33.3" y="453" width="1.8" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="36.34" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (3,061,806 samples, 0.32%)</title><rect x="411.4" y="517" width="2.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="414.42" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt; &gt;::_S_key (155,594 samples, 0.02%)</title><rect x="241.3" y="437" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="244.34" y="447.5" ></text>
</g>
<g >
<title>ns3::LteInterference::DoSubtractSignal (20,555,876 samples, 2.12%)</title><rect x="400.6" y="565" width="16.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="403.64" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;::_M_valptr (158,324 samples, 0.02%)</title><rect x="177.5" y="453" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="180.48" y="463.5" ></text>
</g>
<g >
<title>operator new (152,076 samples, 0.02%)</title><rect x="270.7" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="273.73" y="351.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters* ns3::PeekPointer&lt;ns3::SpectrumSignalParameters&gt; (126,810 samples, 0.01%)</title><rect x="74.9" y="501" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="77.92" y="511.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;2ul, std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt; &gt;::type const&amp; std::get&lt;2ul, double const&amp;, double const&amp;, double const&amp;&gt; (498,549 samples, 0.05%)</title><rect x="747.7" y="453" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="750.72" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartRx (40,953,039 samples, 4.22%)</title><rect x="705.2" y="549" width="33.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="708.24" y="559.5" >ns..</text>
</g>
<g >
<title>double std::reduce&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double, std::plus&lt;void&gt; &gt; (163,427 samples, 0.02%)</title><rect x="725.9" y="309" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="728.92" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned short&gt;, true&gt;::_Rb_tree_impl (238,331 samples, 0.02%)</title><rect x="195.0" y="453" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="197.99" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (372,854 samples, 0.04%)</title><rect x="72.2" y="405" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="75.24" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;void  (20,037,682 samples, 2.07%)</title><rect x="467.7" y="485" width="16.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="470.67" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_impl_data::_Vector_impl_data (152,701 samples, 0.02%)</title><rect x="514.4" y="501" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="517.38" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::~LteSpectrumSignalParametersDataFrame (2,628,658 samples, 0.27%)</title><rect x="773.8" y="421" width="2.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="776.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (266,121 samples, 0.03%)</title><rect x="502.5" y="373" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="505.53" y="383.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (4,680,368 samples, 0.48%)</title><rect x="545.3" y="197" width="3.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="548.34" y="207.5" ></text>
</g>
<g >
<title>__dynamic_cast (254,736 samples, 0.03%)</title><rect x="89.9" y="517" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="92.91" y="527.5" ></text>
</g>
<g >
<title>unsigned int* std::fill_n&lt;unsigned int*, unsigned long, unsigned int&gt; (716,615 samples, 0.07%)</title><rect x="695.9" y="421" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="698.86" y="431.5" ></text>
</g>
<g >
<title>unsigned char* std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (682,457 samples, 0.07%)</title><rect x="460.4" y="197" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="463.39" y="207.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::UlDciLteControlMessage&gt;::operator* (176,788 samples, 0.02%)</title><rect x="391.6" y="549" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="394.65" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel const&gt;::Acquire (164,722 samples, 0.02%)</title><rect x="740.8" y="501" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="743.82" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (125,979 samples, 0.01%)</title><rect x="440.6" y="245" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="443.57" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (297,291 samples, 0.03%)</title><rect x="130.8" y="501" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="133.79" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::vector (2,570,731 samples, 0.27%)</title><rect x="694.8" y="501" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="697.83" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::list (4,322,765 samples, 0.45%)</title><rect x="285.4" y="533" width="3.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="288.38" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (148,226 samples, 0.02%)</title><rect x="125.3" y="229" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="128.35" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_M_addr (195,800 samples, 0.02%)</title><rect x="723.7" y="437" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="726.66" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (5,410,131 samples, 0.56%)</title><rect x="544.8" y="229" width="4.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="547.75" y="239.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (18,776,737 samples, 1.94%)</title><rect x="468.7" y="421" width="15.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="471.68" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (200,664 samples, 0.02%)</title><rect x="64.8" y="405" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="67.77" y="415.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (495,402 samples, 0.05%)</title><rect x="340.8" y="437" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="343.78" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp;&gt; (997,289 samples, 0.10%)</title><rect x="71.2" y="437" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="74.24" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,211,161 samples, 0.12%)</title><rect x="440.0" y="421" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="442.96" y="431.5" ></text>
</g>
<g >
<title>ns3::MemberLteFfrSapProvider&lt;ns3::LteFrNoOpAlgorithm&gt;::ReportUlCqiInfo (231,712 samples, 0.02%)</title><rect x="103.9" y="469" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="106.93" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_integer&lt;int&gt;::__value, double&gt;::__type std::sqrt&lt;int&gt; (152,846 samples, 0.02%)</title><rect x="486.9" y="517" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="489.92" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (344,519 samples, 0.04%)</title><rect x="592.8" y="229" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="595.76" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;* std::__niter_base&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; (393,544 samples, 0.04%)</title><rect x="351.7" y="469" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="354.67" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator*= (1,505,163 samples, 0.16%)</title><rect x="745.1" y="549" width="1.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="748.13" y="559.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int, unsigned long&gt; &gt;::_List_const_iterator (203,852 samples, 0.02%)</title><rect x="428.4" y="229" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="431.37" y="239.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, ns3::UlInfoListElement_s&gt;::operator (2,539,404 samples, 0.26%)</title><rect x="438.9" y="533" width="2.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="441.90" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (187,036 samples, 0.02%)</title><rect x="718.4" y="437" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="721.35" y="447.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (675,431 samples, 0.07%)</title><rect x="307.4" y="453" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="310.38" y="463.5" ></text>
</g>
<g >
<title>std::operator== (189,080 samples, 0.02%)</title><rect x="665.6" y="469" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="668.62" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_lower_bound (193,007 samples, 0.02%)</title><rect x="109.0" y="421" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="112.03" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator* (277,433 samples, 0.03%)</title><rect x="713.5" y="501" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="716.49" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (160,457 samples, 0.02%)</title><rect x="71.8" y="389" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="74.78" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (156,128 samples, 0.02%)</title><rect x="667.1" y="197" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="670.07" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::~list (234,294 samples, 0.02%)</title><rect x="291.8" y="469" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="294.83" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy* ns3::PeekPointer&lt;ns3::LteEnbPhy&gt; (151,158 samples, 0.02%)</title><rect x="469.2" y="389" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="472.19" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::operator[] (2,456,594 samples, 0.25%)</title><rect x="242.5" y="485" width="2.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="245.49" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::max_size (153,400 samples, 0.02%)</title><rect x="202.7" y="437" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="205.67" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Rb_tree (4,812,209 samples, 0.50%)</title><rect x="236.7" y="469" width="3.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="239.73" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::resize (149,910 samples, 0.02%)</title><rect x="176.1" y="453" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="179.10" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3,263,000 samples, 0.34%)</title><rect x="418.8" y="437" width="2.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="421.77" y="447.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s&gt; (860,392 samples, 0.09%)</title><rect x="124.9" y="357" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="127.86" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteSpectrumPhy*&gt;::_Tuple_impl&lt;ns3::LteSpectrumPhy*&amp;&gt; (205,546 samples, 0.02%)</title><rect x="63.4" y="437" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="66.35" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (177,537 samples, 0.02%)</title><rect x="699.8" y="485" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="702.81" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::allocate (195,540 samples, 0.02%)</title><rect x="83.1" y="357" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="86.06" y="367.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetControlMessages[abi:cxx11] (517,990 samples, 0.05%)</title><rect x="117.6" y="533" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="120.58" y="543.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (1,365,624 samples, 0.14%)</title><rect x="389.9" y="517" width="1.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="392.92" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteSpectrumModelId, ns3::Ptr&lt;ns3::SpectrumModel&gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (220,015 samples, 0.02%)</title><rect x="111.4" y="453" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="114.45" y="463.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::ReportBufferStatus (1,286,769 samples, 0.13%)</title><rect x="552.0" y="261" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="554.98" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_clear (433,351 samples, 0.04%)</title><rect x="290.9" y="373" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="293.89" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_M_head (204,180 samples, 0.02%)</title><rect x="752.1" y="565" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="755.08" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (34,696,291 samples, 3.58%)</title><rect x="577.5" y="469" width="27.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="580.46" y="479.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_ptr (200,206 samples, 0.02%)</title><rect x="455.3" y="277" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="458.31" y="287.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedDlConfigIndParameters::SchedDlConfigIndParameters (5,344,608 samples, 0.55%)</title><rect x="140.8" y="469" width="4.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="143.80" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel const&gt;::Ptr&lt;ns3::MobilityModel&gt; (387,700 samples, 0.04%)</title><rect x="742.5" y="549" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="745.46" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;::_M_valptr (157,233 samples, 0.02%)</title><rect x="503.3" y="453" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="506.31" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (241,920 samples, 0.02%)</title><rect x="491.9" y="533" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="494.95" y="543.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (1,376,216 samples, 0.14%)</title><rect x="15.9" y="453" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="18.88" y="463.5" ></text>
</g>
<g >
<title>ns3::TypeId::~TypeId (294,683 samples, 0.03%)</title><rect x="544.0" y="293" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="547.03" y="303.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::GetTypeId (197,030 samples, 0.02%)</title><rect x="490.7" y="501" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="493.71" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (183,612 samples, 0.02%)</title><rect x="688.9" y="421" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="691.88" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (350,826 samples, 0.04%)</title><rect x="345.2" y="485" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="348.24" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (202,197 samples, 0.02%)</title><rect x="728.9" y="453" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="731.89" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (146,523 samples, 0.02%)</title><rect x="155.1" y="389" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="158.07" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp; std::__get_helper&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (236,255 samples, 0.02%)</title><rect x="756.9" y="581" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="759.93" y="591.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="645" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="18.45" y="655.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::SetDownlinkSubChannels (9,637,583 samples, 0.99%)</title><rect x="296.8" y="533" width="7.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="299.76" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (223,783 samples, 0.02%)</title><rect x="396.0" y="501" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="399.03" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUePhy&gt;::Ptr (764,206 samples, 0.08%)</title><rect x="578.9" y="405" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="581.88" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_create_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (669,703 samples, 0.07%)</title><rect x="331.6" y="437" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="334.57" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (940,707 samples, 0.10%)</title><rect x="660.9" y="405" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="663.89" y="415.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::CreateUlTxPowerSpectralDensity (5,829,900 samples, 0.60%)</title><rect x="674.4" y="517" width="4.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="677.41" y="527.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetParent (309,404 samples, 0.03%)</title><rect x="449.8" y="229" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="452.76" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::lower_bound (308,342 samples, 0.03%)</title><rect x="659.6" y="485" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="662.62" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_S_check_init_len (269,236 samples, 0.03%)</title><rect x="302.1" y="437" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="305.09" y="447.5" ></text>
</g>
<g >
<title>ns3::Time::GetSeconds (2,106,405 samples, 0.22%)</title><rect x="405.6" y="517" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="408.62" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::back (308,674 samples, 0.03%)</title><rect x="396.6" y="517" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="399.58" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (242,157 samples, 0.02%)</title><rect x="633.3" y="533" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="636.34" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::at (160,105 samples, 0.02%)</title><rect x="621.0" y="533" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="623.97" y="543.5" ></text>
</g>
<g >
<title>ns3::RarLteControlMessage::RarLteControlMessage (154,430 samples, 0.02%)</title><rect x="166.9" y="437" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="169.88" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (201,377 samples, 0.02%)</title><rect x="717.7" y="421" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="720.73" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Node&gt;::Ptr (264,636 samples, 0.03%)</title><rect x="643.4" y="501" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="646.36" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (1,273,753 samples, 0.13%)</title><rect x="75.7" y="341" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="78.68" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (396,148 samples, 0.04%)</title><rect x="304.2" y="517" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="307.19" y="527.5" ></text>
</g>
<g >
<title>ns3::EnbMemberLteEnbPhySapProvider::SendLteControlMessage (3,042,329 samples, 0.31%)</title><rect x="148.3" y="453" width="2.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="151.28" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (324,769 samples, 0.03%)</title><rect x="611.9" y="469" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="614.94" y="479.5" ></text>
</g>
<g >
<title>ns3::Object::Check (206,111 samples, 0.02%)</title><rect x="450.5" y="261" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="453.52" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (159,018 samples, 0.02%)</title><rect x="192.4" y="437" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="195.44" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,161,332 samples, 0.12%)</title><rect x="454.0" y="229" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="456.99" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (181,482 samples, 0.02%)</title><rect x="680.6" y="517" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="683.63" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet&gt; &gt;::Callback&lt;void  (426,263 samples, 0.04%)</title><rect x="422.0" y="485" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="424.97" y="495.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy_a&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*, unsigned short&gt; (728,775 samples, 0.08%)</title><rect x="253.1" y="437" width="0.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="256.06" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,475,273 samples, 0.15%)</title><rect x="76.7" y="373" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="79.70" y="383.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (235,829 samples, 0.02%)</title><rect x="656.0" y="485" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="659.02" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; &gt;::construct&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters, ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const&amp;&gt; (480,241 samples, 0.05%)</title><rect x="473.8" y="277" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="476.84" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (2,631,944 samples, 0.27%)</title><rect x="273.3" y="453" width="2.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="276.34" y="463.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (162,428 samples, 0.02%)</title><rect x="425.6" y="213" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="428.63" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (573,784 samples, 0.06%)</title><rect x="274.2" y="421" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="277.16" y="431.5" ></text>
</g>
<g >
<title>ns3::Now (284,192 samples, 0.03%)</title><rect x="607.3" y="517" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="610.35" y="527.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (889,944 samples, 0.09%)</title><rect x="44.1" y="645" width="0.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="47.14" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, double&gt; &gt; std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;int, double&gt; &gt; (385,367 samples, 0.04%)</title><rect x="110.9" y="485" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="113.86" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (277,435 samples, 0.03%)</title><rect x="188.9" y="485" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="191.94" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::AntennaModel&gt;::Acquire (338,066 samples, 0.03%)</title><rect x="669.0" y="517" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="671.99" y="527.5" ></text>
</g>
<g >
<title>cfree (157,707 samples, 0.02%)</title><rect x="716.8" y="325" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="719.83" y="335.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,034,007 samples, 0.11%)</title><rect x="191.2" y="421" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="194.20" y="431.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::int64x64_t (150,413 samples, 0.02%)</title><rect x="121.0" y="485" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="123.99" y="495.5" ></text>
</g>
<g >
<title>std::operator== (196,279 samples, 0.02%)</title><rect x="166.0" y="357" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="168.97" y="367.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned char*, unsigned char&gt; (220,248 samples, 0.02%)</title><rect x="255.2" y="325" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="258.22" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (170,871 samples, 0.02%)</title><rect x="591.2" y="245" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="594.22" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (1,490,594 samples, 0.15%)</title><rect x="507.2" y="533" width="1.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="510.16" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (603,213 samples, 0.06%)</title><rect x="357.2" y="437" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="360.16" y="447.5" ></text>
</g>
<g >
<title>ns3::Time::GetTimeStep (222,929 samples, 0.02%)</title><rect x="664.8" y="469" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="667.80" y="479.5" ></text>
</g>
<g >
<title>unsigned int&amp; std::__get_helper&lt;2ul, unsigned int&gt; (546,981 samples, 0.06%)</title><rect x="755.8" y="581" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="758.83" y="591.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_M_const_cast (177,400 samples, 0.02%)</title><rect x="197.1" y="453" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="200.08" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_S_key (463,094 samples, 0.05%)</title><rect x="171.5" y="405" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="174.52" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt; &gt; &gt;::begin (162,620 samples, 0.02%)</title><rect x="90.4" y="517" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="93.42" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::~pair (198,551 samples, 0.02%)</title><rect x="233.0" y="357" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="235.95" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::back (166,101 samples, 0.02%)</title><rect x="590.0" y="245" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="593.05" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (282,929 samples, 0.03%)</title><rect x="466.2" y="485" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="469.16" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::vector (154,721 samples, 0.02%)</title><rect x="461.6" y="229" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="464.55" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (2,992,854 samples, 0.31%)</title><rect x="526.3" y="325" width="2.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="529.26" y="335.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::SpectrumSignalParameters (580,700 samples, 0.06%)</title><rect x="113.8" y="437" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="116.83" y="447.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (1,607,547 samples, 0.17%)</title><rect x="634.5" y="389" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="637.53" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (1,506,714 samples, 0.16%)</title><rect x="143.9" y="453" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="146.89" y="463.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (19,358,790 samples, 2.00%)</title><rect x="19.6" y="565" width="15.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="22.57" y="575.5" ></text>
</g>
<g >
<title>malloc (197,254 samples, 0.02%)</title><rect x="446.4" y="261" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="449.36" y="271.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::NoOpComponentCarrierManager&gt;::ReportBufferStatus (747,299 samples, 0.08%)</title><rect x="12.5" y="389" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="15.49" y="399.5" ></text>
</g>
<g >
<title>operator new (372,038 samples, 0.04%)</title><rect x="557.9" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="560.93" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::empty (324,331 samples, 0.03%)</title><rect x="488.9" y="533" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="491.89" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; &gt; (1,076,159 samples, 0.11%)</title><rect x="357.0" y="485" width="0.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="360.03" y="495.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; (230,973 samples, 0.02%)</title><rect x="207.6" y="421" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="210.60" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_M_lower_bound (464,204 samples, 0.05%)</title><rect x="186.7" y="453" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="189.66" y="463.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (347,263 samples, 0.04%)</title><rect x="511.3" y="469" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="514.33" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_S_key (208,515 samples, 0.02%)</title><rect x="568.2" y="245" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="571.22" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; (3,099,663 samples, 0.32%)</title><rect x="349.6" y="501" width="2.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="352.59" y="511.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters::SchedDlCqiInfoReqParameters (527,752 samples, 0.05%)</title><rect x="130.6" y="517" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="133.61" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::max_size (189,176 samples, 0.02%)</title><rect x="102.2" y="405" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="105.23" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (925,594 samples, 0.10%)</title><rect x="170.1" y="421" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="173.09" y="431.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::ReceivePss (833,626 samples, 0.09%)</title><rect x="725.9" y="341" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="728.89" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (3,222,559 samples, 0.33%)</title><rect x="451.3" y="213" width="2.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="454.30" y="223.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::operator (237,842 samples, 0.02%)</title><rect x="741.1" y="517" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="744.05" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_lower_bound (1,279,264 samples, 0.13%)</title><rect x="663.3" y="405" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="666.31" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;ns3::RlcPduListElement_s&gt;::allocate (190,161 samples, 0.02%)</title><rect x="212.9" y="341" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="215.85" y="351.5" ></text>
</g>
<g >
<title>ns3::LteChunkProcessor::Start (1,058,141 samples, 0.11%)</title><rect x="716.2" y="501" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="719.22" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const&amp;&gt; (406,463 samples, 0.04%)</title><rect x="623.6" y="517" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="626.61" y="527.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (1,131,340 samples, 0.12%)</title><rect x="65.5" y="501" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="68.52" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumPhy&gt;::operator* (166,039 samples, 0.02%)</title><rect x="605.1" y="341" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="608.13" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (152,705 samples, 0.02%)</title><rect x="116.1" y="389" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="119.06" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (212,001 samples, 0.02%)</title><rect x="595.9" y="117" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="598.89" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::vector (2,102,576 samples, 0.22%)</title><rect x="352.6" y="485" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="355.61" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::push_back (691,803 samples, 0.07%)</title><rect x="419.6" y="341" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="422.65" y="351.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartFrame (38,351,386 samples, 3.95%)</title><rect x="91.7" y="565" width="30.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="94.67" y="575.5" >ns..</text>
</g>
<g >
<title>ns3::SimpleUeComponentCarrierManager::DoTransmitPdu (7,667,549 samples, 0.79%)</title><rect x="560.7" y="245" width="6.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="563.65" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, unsigned int, false&gt;::_Head_base&lt;unsigned int&amp;&gt; (281,440 samples, 0.03%)</title><rect x="710.0" y="373" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="712.95" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_Auto_node::_M_key (372,232 samples, 0.04%)</title><rect x="385.5" y="485" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="388.51" y="495.5" ></text>
</g>
<g >
<title>ns3::Object::GetInstanceTypeId (156,330 samples, 0.02%)</title><rect x="372.7" y="469" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="375.65" y="479.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::~CqiListElement_s (894,967 samples, 0.09%)</title><rect x="255.0" y="389" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="258.00" y="399.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="709" width="1.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="18.45" y="719.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_move_data (305,258 samples, 0.03%)</title><rect x="196.2" y="469" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="199.20" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (145,405 samples, 0.01%)</title><rect x="308.5" y="373" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="311.46" y="383.5" ></text>
</g>
<g >
<title>cfree (124,394 samples, 0.01%)</title><rect x="776.2" y="277" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="779.16" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;::_M_valptr (232,350 samples, 0.02%)</title><rect x="187.3" y="421" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="190.35" y="431.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::CqiListElement_s*&gt; (933,761 samples, 0.10%)</title><rect x="255.0" y="437" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="257.97" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_begin (244,771 samples, 0.03%)</title><rect x="73.4" y="469" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="76.41" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (569,510 samples, 0.06%)</title><rect x="392.1" y="517" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="395.05" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Acquire (169,425 samples, 0.02%)</title><rect x="559.0" y="213" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="562.01" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::erase (2,631,164 samples, 0.27%)</title><rect x="356.4" y="533" width="2.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="359.38" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::lower_bound (431,721 samples, 0.04%)</title><rect x="243.9" y="469" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="246.94" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt; ns3::DynamicCast&lt;ns3::DlDciLteControlMessage, ns3::LteControlMessage&gt; (458,846 samples, 0.05%)</title><rect x="533.8" y="357" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="536.77" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::cbegin (469,030 samples, 0.05%)</title><rect x="623.2" y="517" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="626.20" y="527.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::SbMeasResult_s (365,319 samples, 0.04%)</title><rect x="92.2" y="373" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="95.25" y="383.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (165,840 samples, 0.02%)</title><rect x="543.6" y="277" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="546.64" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (139,584 samples, 0.01%)</title><rect x="648.3" y="405" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="651.30" y="415.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet&gt; &gt;::Callback&lt;void  (20,138,435 samples, 2.08%)</title><rect x="422.5" y="453" width="16.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="425.51" y="463.5" ></text>
</g>
<g >
<title>ns3::EnbMemberLteEnbPhySapProvider::SendLteControlMessage (498,633 samples, 0.05%)</title><rect x="95.8" y="437" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="98.80" y="447.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet&gt; &gt;::Callback&lt;void  (20,180,449 samples, 2.08%)</title><rect x="422.5" y="469" width="16.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="425.47" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::clear (2,445,979 samples, 0.25%)</title><rect x="501.0" y="549" width="1.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="503.96" y="559.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (530,447 samples, 0.05%)</title><rect x="611.1" y="501" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="614.12" y="511.5" ></text>
</g>
<g >
<title>unsigned short* std::uninitialized_copy&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*&gt; (728,775 samples, 0.08%)</title><rect x="253.1" y="421" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="256.06" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (1,620,533 samples, 0.17%)</title><rect x="384.1" y="485" width="1.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="387.11" y="495.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (206,491 samples, 0.02%)</title><rect x="400.8" y="549" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="403.80" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::at (1,778,082 samples, 0.18%)</title><rect x="428.8" y="293" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="431.82" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::TxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (1,213,331 samples, 0.13%)</title><rect x="73.3" y="501" width="1.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="76.28" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt; (2,130,125 samples, 0.22%)</title><rect x="503.1" y="517" width="1.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="506.08" y="527.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (227,190 samples, 0.02%)</title><rect x="112.2" y="469" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="115.21" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PropagationLossModel&gt;::operator bool (286,148 samples, 0.03%)</title><rect x="743.4" y="549" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="746.44" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::operator= (324,739 samples, 0.03%)</title><rect x="593.3" y="277" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="596.31" y="287.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_allocate (148,686 samples, 0.02%)</title><rect x="247.3" y="437" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="250.26" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (724,942 samples, 0.07%)</title><rect x="671.3" y="517" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="674.33" y="527.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__relocate_a_1&lt;ns3::RlcPduListElement_s*, ns3::RlcPduListElement_s*, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; (159,106 samples, 0.02%)</title><rect x="210.0" y="421" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="213.04" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDataFrame&gt; ns3::Create&lt;ns3::LteSpectrumSignalParametersDataFrame&gt; (1,120,807 samples, 0.12%)</title><rect x="88.5" y="533" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="91.55" y="543.5" ></text>
</g>
<g >
<title>ns3::EventImpl::EventImpl (155,310 samples, 0.02%)</title><rect x="616.8" y="501" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="619.76" y="511.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::__do_uninit_copy&lt;std::move_iterator&lt;ns3::MacCeListElement_s*&gt;, ns3::MacCeListElement_s*&gt; (193,178 samples, 0.02%)</title><rect x="129.7" y="421" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="132.71" y="431.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (574,266 samples, 0.06%)</title><rect x="618.6" y="485" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="621.57" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::operator= (154,933 samples, 0.02%)</title><rect x="672.0" y="533" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="675.04" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (263,603 samples, 0.03%)</title><rect x="357.4" y="373" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="360.43" y="383.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (980,052 samples, 0.10%)</title><rect x="718.9" y="485" width="0.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="721.93" y="495.5" ></text>
</g>
<g >
<title>ns3::operator* (125,769 samples, 0.01%)</title><rect x="601.8" y="325" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="604.75" y="335.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (1,713,044 samples, 0.18%)</title><rect x="634.4" y="405" width="1.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="637.44" y="415.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (127,422 samples, 0.01%)</title><rect x="61.4" y="501" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="64.37" y="511.5" ></text>
</g>
<g >
<title>ns3::operator*= (321,020 samples, 0.03%)</title><rect x="389.7" y="501" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="392.66" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, double&gt; &gt;::_M_valptr (275,175 samples, 0.03%)</title><rect x="292.6" y="501" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="295.56" y="511.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedUlConfigIndParameters::~SchedUlConfigIndParameters (876,854 samples, 0.09%)</title><rect x="229.3" y="469" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="232.30" y="479.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator (188,098 samples, 0.02%)</title><rect x="188.7" y="421" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="191.66" y="431.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (322,925 samples, 0.03%)</title><rect x="718.5" y="389" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="721.54" y="399.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Allocate (678,878 samples, 0.07%)</title><rect x="32.7" y="357" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="35.70" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::allocate (126,498 samples, 0.01%)</title><rect x="81.8" y="405" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="84.85" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, ns3::Ptr&lt;ns3::PacketBurst&gt; const&amp;&gt; (389,168 samples, 0.04%)</title><rect x="724.8" y="469" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="727.80" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::_M_range_check (245,588 samples, 0.03%)</title><rect x="532.0" y="325" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="535.05" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_Rb_tree_iterator (629,732 samples, 0.06%)</title><rect x="276.4" y="469" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="279.40" y="479.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (605,341 samples, 0.06%)</title><rect x="729.7" y="405" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="732.73" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (153,672 samples, 0.02%)</title><rect x="355.5" y="485" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="358.45" y="495.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a&lt;true, ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (267,517 samples, 0.03%)</title><rect x="511.4" y="437" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="514.40" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet const&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::Packet const&gt; &gt; &gt; &gt;::end (205,687 samples, 0.02%)</title><rect x="494.6" y="533" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="497.57" y="543.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (1,567,317 samples, 0.16%)</title><rect x="352.7" y="453" width="1.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="355.73" y="463.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::DlInfoListElement_s, ns3::DlInfoListElement_s&amp;&gt; (313,569 samples, 0.03%)</title><rect x="206.7" y="405" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="209.69" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_erase_at_end (416,767 samples, 0.04%)</title><rect x="106.8" y="469" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="109.77" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::erase[abi:cxx11] (6,953,857 samples, 0.72%)</title><rect x="762.4" y="693" width="5.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="765.39" y="703.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::CqiListElement_s (3,330,355 samples, 0.34%)</title><rect x="124.7" y="405" width="2.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="127.65" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (152,827 samples, 0.02%)</title><rect x="667.8" y="261" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="670.83" y="271.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; (156,843 samples, 0.02%)</title><rect x="228.7" y="373" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="231.73" y="383.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (2,031,472 samples, 0.21%)</title><rect x="773.8" y="373" width="1.7" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="776.83" y="383.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::~ByteTagList (336,743 samples, 0.03%)</title><rect x="653.2" y="229" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="656.21" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (166,916 samples, 0.02%)</title><rect x="574.8" y="341" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="577.78" y="351.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator[] (472,196 samples, 0.05%)</title><rect x="488.0" y="517" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="490.95" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt; ns3::Object::GetObject&lt;ns3::SpectrumPhy&gt; (1,654,930 samples, 0.17%)</title><rect x="344.5" y="517" width="1.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="347.52" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::operator= (1,124,799 samples, 0.12%)</title><rect x="290.4" y="421" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="293.37" y="431.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (15,576,788 samples, 1.61%)</title><rect x="267.8" y="517" width="12.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="270.84" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::allocate (265,191 samples, 0.03%)</title><rect x="262.0" y="469" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="265.02" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::size (154,036 samples, 0.02%)</title><rect x="525.5" y="325" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="528.47" y="335.5" ></text>
</g>
<g >
<title>decltype  (181,678 samples, 0.02%)</title><rect x="636.4" y="485" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="639.43" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (127,066 samples, 0.01%)</title><rect x="88.3" y="357" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="91.28" y="367.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,782,590 samples, 0.18%)</title><rect x="164.7" y="373" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="167.70" y="383.5" ></text>
</g>
<g >
<title>malloc (429,586 samples, 0.04%)</title><rect x="325.4" y="341" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="328.42" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt; &gt; &gt;::begin (232,164 samples, 0.02%)</title><rect x="328.1" y="485" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="331.13" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::SimpleRefCount (222,949 samples, 0.02%)</title><rect x="361.3" y="485" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="364.28" y="495.5" ></text>
</g>
<g >
<title>ns3::Buffer::Initialize (1,790,059 samples, 0.18%)</title><rect x="555.8" y="213" width="1.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="558.80" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_base (124,541 samples, 0.01%)</title><rect x="69.9" y="389" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="72.91" y="399.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Iterator::Iterator (236,079 samples, 0.02%)</title><rect x="436.6" y="213" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="439.62" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::at (190,175 samples, 0.02%)</title><rect x="327.2" y="469" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="330.15" y="479.5" ></text>
</g>
<g >
<title>ns3::DlHarqFeedbackLteControlMessage::SetDlHarqFeedback (234,084 samples, 0.02%)</title><rect x="419.3" y="357" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="422.30" y="367.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (148,793 samples, 0.02%)</title><rect x="195.5" y="421" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="198.48" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::begin (160,992 samples, 0.02%)</title><rect x="70.4" y="453" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="73.40" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::IidManager::IidInformation, std::allocator&lt;ns3::IidManager::IidInformation&gt; &gt;::size (157,042 samples, 0.02%)</title><rect x="631.5" y="421" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="634.46" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_List_base (209,616 samples, 0.02%)</title><rect x="538.8" y="277" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="541.79" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::begin (156,943 samples, 0.02%)</title><rect x="207.3" y="469" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="210.32" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_impl::_List_impl (410,572 samples, 0.04%)</title><rect x="619.8" y="501" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="622.83" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::VendorSpecificListElement_s*&gt; (234,807 samples, 0.02%)</title><rect x="263.9" y="341" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="266.87" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_mbegin (191,851 samples, 0.02%)</title><rect x="171.3" y="405" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="174.28" y="415.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetAttributeN (942,736 samples, 0.10%)</title><rect x="448.9" y="245" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="451.88" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::vector (1,851,121 samples, 0.19%)</title><rect x="141.5" y="453" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="144.54" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (635,025 samples, 0.07%)</title><rect x="699.4" y="517" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="702.45" y="527.5" ></text>
</g>
<g >
<title>bool std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (159,062 samples, 0.02%)</title><rect x="639.1" y="469" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="642.14" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;::_Rb_tree_iterator (189,556 samples, 0.02%)</title><rect x="192.8" y="421" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="195.85" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator (157,592 samples, 0.02%)</title><rect x="743.7" y="549" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="746.73" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::~Ptr (167,870 samples, 0.02%)</title><rect x="576.5" y="293" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="579.46" y="303.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::Remove (1,461,431 samples, 0.15%)</title><rect x="430.5" y="309" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="433.48" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (157,586 samples, 0.02%)</title><rect x="746.0" y="501" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="749.04" y="511.5" ></text>
</g>
<g >
<title>std::operator== (190,947 samples, 0.02%)</title><rect x="331.2" y="501" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="334.19" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt;::operator (247,279 samples, 0.03%)</title><rect x="534.1" y="357" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="537.14" y="367.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (231,188 samples, 0.02%)</title><rect x="654.7" y="405" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="657.74" y="415.5" ></text>
</g>
<g >
<title>decltype (238,924 samples, 0.02%)</title><rect x="36.6" y="709" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="39.64" y="719.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (4,924,388 samples, 0.51%)</title><rect x="451.1" y="293" width="4.0" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="454.12" y="303.5" ></text>
</g>
<g >
<title>ns3::Simulator::Run (5,321,712 samples, 0.55%)</title><rect x="11.2" y="789" width="4.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="14.17" y="799.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::CqiListElement_s, ns3::CqiListElement_s&amp;&gt; (3,446,655 samples, 0.36%)</title><rect x="124.6" y="421" width="2.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="127.59" y="431.5" ></text>
</g>
<g >
<title>ns3::Simulator::Destroy (238,924 samples, 0.02%)</title><rect x="36.6" y="773" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="39.64" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::find (353,675 samples, 0.04%)</title><rect x="508.8" y="533" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="511.84" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::deallocate (199,701 samples, 0.02%)</title><rect x="716.8" y="341" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="719.83" y="351.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (2,326,898 samples, 0.24%)</title><rect x="164.3" y="421" width="1.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="167.26" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (2,428,249 samples, 0.25%)</title><rect x="660.8" y="437" width="2.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="663.83" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::~_Vector_base (148,819 samples, 0.02%)</title><rect x="255.5" y="341" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="258.45" y="351.5" ></text>
</g>
<g >
<title>ns3::UlDciLteControlMessage&amp; std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::emplace_back&lt;ns3::UlDciLteControlMessage const&amp;&gt; (139,939 samples, 0.01%)</title><rect x="110.3" y="485" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="113.27" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::GetSpectrumModel (192,465 samples, 0.02%)</title><rect x="327.6" y="501" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="330.62" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt; &gt;::allocate (228,044 samples, 0.02%)</title><rect x="191.0" y="405" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="194.02" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_deallocate (124,900 samples, 0.01%)</title><rect x="605.4" y="469" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="608.43" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_deallocate (393,825 samples, 0.04%)</title><rect x="697.0" y="469" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="700.04" y="479.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::ReadU8 (242,549 samples, 0.03%)</title><rect x="490.5" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="493.48" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::push_back (376,292 samples, 0.04%)</title><rect x="102.2" y="469" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="105.17" y="479.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (401,487 samples, 0.04%)</title><rect x="475.8" y="245" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="478.80" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; const&amp;&gt; (3,565,957 samples, 0.37%)</title><rect x="237.4" y="373" width="2.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="240.45" y="383.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (126,671 samples, 0.01%)</title><rect x="563.8" y="85" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="566.80" y="95.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::CqiListElement_s (892,722 samples, 0.09%)</title><rect x="92.2" y="389" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="95.22" y="399.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::operator (75,554,587 samples, 7.79%)</title><rect x="515.9" y="533" width="60.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="518.86" y="543.5" >ns3::C..</text>
</g>
<g >
<title>ns3::Object::Construct (2,912,216 samples, 0.30%)</title><rect x="372.2" y="501" width="2.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="375.23" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (153,542 samples, 0.02%)</title><rect x="398.8" y="469" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="401.81" y="479.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::insert&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (804,377 samples, 0.08%)</title><rect x="318.7" y="421" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="321.72" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::~vector (530,782 samples, 0.05%)</title><rect x="351.2" y="389" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="354.18" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_begin (452,338 samples, 0.05%)</title><rect x="567.8" y="261" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="570.83" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Temporary_value::_Temporary_value&lt;unsigned short const&amp;&gt; (610,808 samples, 0.06%)</title><rect x="251.4" y="453" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="254.43" y="463.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; &gt; (201,318 samples, 0.02%)</title><rect x="26.5" y="245" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="29.51" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (159,033 samples, 0.02%)</title><rect x="727.7" y="373" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="730.72" y="383.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (165,918 samples, 0.02%)</title><rect x="78.3" y="437" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="81.32" y="447.5" ></text>
</g>
<g >
<title>decltype  (2,931,196 samples, 0.30%)</title><rect x="238.0" y="325" width="2.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="240.96" y="335.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*&gt; (3,635,299 samples, 0.37%)</title><rect x="124.4" y="453" width="3.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="127.44" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::back (207,937 samples, 0.02%)</title><rect x="596.6" y="261" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="599.62" y="271.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (314,249 samples, 0.03%)</title><rect x="11.2" y="453" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="14.17" y="463.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (2,784,150 samples, 0.29%)</title><rect x="419.2" y="389" width="2.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="422.15" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_mbegin (202,221 samples, 0.02%)</title><rect x="84.6" y="389" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="87.57" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (186,796 samples, 0.02%)</title><rect x="736.0" y="501" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="738.96" y="511.5" ></text>
</g>
<g >
<title>ns3::operator- (162,725 samples, 0.02%)</title><rect x="740.2" y="485" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="743.18" y="495.5" ></text>
</g>
<g >
<title>decltype  (290,705 samples, 0.03%)</title><rect x="623.6" y="501" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="626.61" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_impl::_Vector_impl (271,897 samples, 0.03%)</title><rect x="503.8" y="357" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="506.77" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (235,300 samples, 0.02%)</title><rect x="677.3" y="437" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="680.28" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (205,079 samples, 0.02%)</title><rect x="596.8" y="261" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="599.79" y="271.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (532,874 samples, 0.05%)</title><rect x="355.6" y="485" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="358.58" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy (527,289 samples, 0.05%)</title><rect x="668.4" y="469" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="671.41" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_ptr (246,841 samples, 0.03%)</title><rect x="522.2" y="309" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="525.21" y="319.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;&gt; (238,924 samples, 0.02%)</title><rect x="36.6" y="645" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="39.64" y="655.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a2&lt;false, unsigned char const*, unsigned char*&gt; (225,178 samples, 0.02%)</title><rect x="688.0" y="357" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="691.00" y="367.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::UlCqiReport (1,913,367 samples, 0.20%)</title><rect x="472.7" y="325" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="475.69" y="335.5" ></text>
</g>
<g >
<title>unsigned char* std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (144,727 samples, 0.01%)</title><rect x="686.2" y="437" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="689.23" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (208,946 samples, 0.02%)</title><rect x="61.3" y="517" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="64.30" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (500,080 samples, 0.05%)</title><rect x="380.2" y="277" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="383.23" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::end (168,242 samples, 0.02%)</title><rect x="556.1" y="165" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="559.10" y="175.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::~Ptr (261,450 samples, 0.03%)</title><rect x="769.3" y="725" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="772.32" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (286,765 samples, 0.03%)</title><rect x="213.8" y="453" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="216.79" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (185,556 samples, 0.02%)</title><rect x="692.4" y="469" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="695.39" y="479.5" ></text>
</g>
<g >
<title>malloc (125,582 samples, 0.01%)</title><rect x="70.0" y="421" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="73.04" y="431.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (198,957 samples, 0.02%)</title><rect x="228.7" y="421" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="231.70" y="431.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (239,715 samples, 0.02%)</title><rect x="715.5" y="501" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="718.47" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::end (143,255 samples, 0.01%)</title><rect x="623.1" y="501" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="626.05" y="511.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapProvider&lt;ns3::LteEnbMac&gt;::ReportMacCeToScheduler (280,173 samples, 0.03%)</title><rect x="457.6" y="277" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="460.63" y="287.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::uninitialized_copy&lt;std::move_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (347,263 samples, 0.04%)</title><rect x="511.3" y="485" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="514.33" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::~Ptr (269,841 samples, 0.03%)</title><rect x="497.4" y="485" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="500.37" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::_M_ptr (279,342 samples, 0.03%)</title><rect x="566.1" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="569.12" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (489,292 samples, 0.05%)</title><rect x="680.1" y="517" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="683.09" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (539,424 samples, 0.06%)</title><rect x="620.4" y="501" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="623.36" y="511.5" ></text>
</g>
<g >
<title>unsigned char&amp; std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::emplace_back&lt;unsigned char&gt; (1,837,360 samples, 0.19%)</title><rect x="596.6" y="277" width="1.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="599.59" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_addr (160,217 samples, 0.02%)</title><rect x="362.8" y="421" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="365.84" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::~Ptr (3,444,708 samples, 0.36%)</title><rect x="75.3" y="517" width="2.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="78.31" y="527.5" ></text>
</g>
<g >
<title>ns3::Simulator::ScheduleWithContext (6,833,554 samples, 0.70%)</title><rect x="660.5" y="501" width="5.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="663.52" y="511.5" ></text>
</g>
<g >
<title>ns3::AttributeConstructionList::AttributeConstructionList (1,330,457 samples, 0.14%)</title><rect x="539.0" y="293" width="1.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="541.99" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_S_key (393,630 samples, 0.04%)</title><rect x="24.0" y="341" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="26.97" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;* std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (217,068 samples, 0.02%)</title><rect x="615.6" y="421" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="618.57" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::push_back (2,730,012 samples, 0.28%)</title><rect x="361.8" y="501" width="2.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="364.77" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (692,819 samples, 0.07%)</title><rect x="300.4" y="437" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="303.35" y="447.5" ></text>
</g>
<g >
<title>ns3::LteEnbRrcProtocolIdeal::DoSendSystemInformation (188,903 samples, 0.02%)</title><rect x="400.5" y="533" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="403.49" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (185,676 samples, 0.02%)</title><rect x="141.3" y="421" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="144.33" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_addr (305,390 samples, 0.03%)</title><rect x="348.3" y="485" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="351.32" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt; ns3::DynamicCast&lt;ns3::DlDciLteControlMessage, ns3::LteControlMessage&gt; (478,172 samples, 0.05%)</title><rect x="388.1" y="549" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="391.10" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (153,882 samples, 0.02%)</title><rect x="23.6" y="357" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="26.63" y="367.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (192,930 samples, 0.02%)</title><rect x="112.5" y="469" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="115.51" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (414,441 samples, 0.04%)</title><rect x="201.2" y="453" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="204.16" y="463.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (165,541 samples, 0.02%)</title><rect x="88.9" y="485" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="91.92" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (294,424 samples, 0.03%)</title><rect x="615.9" y="453" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="618.93" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (1,634,801 samples, 0.17%)</title><rect x="654.5" y="485" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="657.53" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (154,831 samples, 0.02%)</title><rect x="22.1" y="325" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="25.07" y="335.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::~DlDciListElement_s (280,667 samples, 0.03%)</title><rect x="610.0" y="405" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="612.97" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_addr (280,432 samples, 0.03%)</title><rect x="545.0" y="181" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="547.98" y="191.5" ></text>
</g>
<g >
<title>ns3::Time::To (989,300 samples, 0.10%)</title><rect x="406.0" y="485" width="0.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="409.03" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Acquire (160,796 samples, 0.02%)</title><rect x="402.7" y="469" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="405.72" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::at (426,836 samples, 0.04%)</title><rect x="694.5" y="501" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="697.49" y="511.5" ></text>
</g>
<g >
<title>ns3::Time::Time (201,450 samples, 0.02%)</title><rect x="343.5" y="469" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="346.53" y="479.5" ></text>
</g>
<g >
<title>malloc (147,798 samples, 0.02%)</title><rect x="319.4" y="453" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="322.42" y="463.5" ></text>
</g>
<g >
<title>ns3::RarLteControlMessage::~RarLteControlMessage (509,242 samples, 0.05%)</title><rect x="167.1" y="405" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="170.06" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (539,442 samples, 0.06%)</title><rect x="325.4" y="453" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="328.35" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::cbegin (346,916 samples, 0.04%)</title><rect x="358.2" y="517" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="361.22" y="527.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a1&lt;false, ns3::DlInfoListElement_s::HarqStatus_e const*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (749,922 samples, 0.08%)</title><rect x="259.9" y="293" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="262.91" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned long&gt;::allocate (271,783 samples, 0.03%)</title><rect x="198.0" y="405" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="201.04" y="415.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::DoSendLteControlMessage (773,102 samples, 0.08%)</title><rect x="230.2" y="437" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="233.16" y="447.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;double*, double&gt; (203,543 samples, 0.02%)</title><rect x="730.0" y="341" width="0.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="732.99" y="351.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (239,848 samples, 0.02%)</title><rect x="16.7" y="357" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="19.70" y="367.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::Copy (7,176,472 samples, 0.74%)</title><rect x="67.3" y="517" width="5.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="70.34" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::_M_lower_bound (709,426 samples, 0.07%)</title><rect x="244.7" y="453" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="247.71" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::at (232,011 samples, 0.02%)</title><rect x="173.2" y="453" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="176.25" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_fill_initialize (189,712 samples, 0.02%)</title><rect x="102.0" y="453" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="104.98" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (759,561 samples, 0.08%)</title><rect x="53.3" y="533" width="0.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="56.26" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteSpectrumPhy*&gt;::_Tuple_impl (202,993 samples, 0.02%)</title><rect x="64.2" y="405" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="67.18" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (193,810 samples, 0.02%)</title><rect x="482.8" y="293" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="485.79" y="303.5" ></text>
</g>
<g >
<title>ns3::Packet::~Packet (319,925 samples, 0.03%)</title><rect x="502.1" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="505.08" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::at (322,129 samples, 0.03%)</title><rect x="420.2" y="341" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="423.20" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (423,703 samples, 0.04%)</title><rect x="270.5" y="357" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="273.51" y="367.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (4,824,055 samples, 0.50%)</title><rect x="280.6" y="517" width="3.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="283.62" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::~Ptr (199,934 samples, 0.02%)</title><rect x="150.4" y="421" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="153.38" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::ChangeSign (1,192,502 samples, 0.12%)</title><rect x="410.5" y="517" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="413.46" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (160,262 samples, 0.02%)</title><rect x="282.6" y="405" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="285.62" y="415.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a2&lt;false, ns3::DlInfoListElement_s::HarqStatus_e const*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (243,097 samples, 0.03%)</title><rect x="444.4" y="213" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="447.40" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (293,521 samples, 0.03%)</title><rect x="589.6" y="261" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="592.58" y="271.5" ></text>
</g>
<g >
<title>ns3::Time::operator= (180,257 samples, 0.02%)</title><rect x="318.4" y="437" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="321.42" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::erase (3,797,469 samples, 0.39%)</title><rect x="349.3" y="533" width="3.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="352.31" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::insert (5,134,912 samples, 0.53%)</title><rect x="196.9" y="469" width="4.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="199.91" y="479.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (384,287 samples, 0.04%)</title><rect x="155.5" y="389" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="158.47" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_Tuple_impl (474,767 samples, 0.05%)</title><rect x="284.0" y="421" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="287.03" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; &gt; (603,286 samples, 0.06%)</title><rect x="25.7" y="261" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="28.74" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (429,586 samples, 0.04%)</title><rect x="325.4" y="421" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="328.42" y="431.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (955,890 samples, 0.10%)</title><rect x="626.1" y="469" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="629.10" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt; &gt;::allocate (264,767 samples, 0.03%)</title><rect x="384.5" y="437" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="387.48" y="447.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned int&gt;::max (161,154 samples, 0.02%)</title><rect x="562.6" y="149" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="565.56" y="159.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (507,948 samples, 0.05%)</title><rect x="612.8" y="485" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="615.84" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (220,732 samples, 0.02%)</title><rect x="644.9" y="437" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="647.94" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (194,998 samples, 0.02%)</title><rect x="165.3" y="309" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="168.29" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (152,754 samples, 0.02%)</title><rect x="104.9" y="469" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="107.92" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (2,663,179 samples, 0.27%)</title><rect x="384.1" y="501" width="2.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="387.11" y="511.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::~MacCeValue_u (408,728 samples, 0.04%)</title><rect x="265.1" y="373" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="268.12" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::SbMeasResult_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::find (873,028 samples, 0.09%)</title><rect x="185.4" y="485" width="0.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="188.39" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumModel* ns3::PeekPointer&lt;ns3::SpectrumModel&gt; (148,477 samples, 0.02%)</title><rect x="299.2" y="453" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="302.17" y="463.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::ByteTagListData* const*, std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt; &gt; (357,081 samples, 0.04%)</title><rect x="30.2" y="357" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="33.15" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;::_M_valptr (255,360 samples, 0.03%)</title><rect x="168.7" y="389" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="171.66" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::ByteTagListData**, std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt; &gt;::operator* (164,625 samples, 0.02%)</title><rect x="553.6" y="197" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="556.58" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (198,211 samples, 0.02%)</title><rect x="667.1" y="293" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="670.07" y="303.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::GeneratePowerAllocationMap (650,842 samples, 0.07%)</title><rect x="110.8" y="533" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="113.83" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::operator= (230,262 samples, 0.02%)</title><rect x="154.9" y="389" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="157.89" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_List_base (159,271 samples, 0.02%)</title><rect x="447.4" y="261" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="450.35" y="271.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;true&gt;::__destroy&lt;ns3::RlcPduListElement_s*&gt; (151,388 samples, 0.02%)</title><rect x="209.2" y="421" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="212.16" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::find (1,290,271 samples, 0.13%)</title><rect x="221.2" y="485" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="224.25" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_fill_insert (343,043 samples, 0.04%)</title><rect x="106.1" y="453" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="109.10" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (242,221 samples, 0.02%)</title><rect x="729.5" y="437" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="732.54" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (2,555,713 samples, 0.26%)</title><rect x="164.1" y="453" width="2.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="167.07" y="463.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s::UlInfoListElement_s (526,168 samples, 0.05%)</title><rect x="494.8" y="549" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="497.77" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::vector (1,840,875 samples, 0.19%)</title><rect x="211.7" y="421" width="1.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="214.74" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::back (305,905 samples, 0.03%)</title><rect x="498.6" y="501" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="501.61" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (429,586 samples, 0.04%)</title><rect x="325.4" y="389" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="328.42" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (1,164,278 samples, 0.12%)</title><rect x="136.8" y="469" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="139.81" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (242,130 samples, 0.02%)</title><rect x="409.8" y="501" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="412.84" y="511.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (181,887 samples, 0.02%)</title><rect x="120.3" y="517" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="123.30" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;::operator* (341,636 samples, 0.04%)</title><rect x="184.3" y="485" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="187.29" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::~Ptr (156,455 samples, 0.02%)</title><rect x="571.9" y="341" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="574.94" y="351.5" ></text>
</g>
<g >
<title>std::operator== (191,748 samples, 0.02%)</title><rect x="279.6" y="501" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="282.56" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::operator= (1,296,028 samples, 0.13%)</title><rect x="266.0" y="517" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="269.01" y="527.5" ></text>
</g>
<g >
<title>std::function&lt;void  (235,820 samples, 0.02%)</title><rect x="727.7" y="421" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="730.66" y="431.5" ></text>
</g>
<g >
<title>operator new (159,293 samples, 0.02%)</title><rect x="352.5" y="485" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="355.48" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Ptr (283,469 samples, 0.03%)</title><rect x="742.8" y="549" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="745.84" y="559.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (356,896 samples, 0.04%)</title><rect x="442.3" y="261" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="445.31" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::back (542,975 samples, 0.06%)</title><rect x="31.4" y="341" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="34.39" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_mbegin (125,248 samples, 0.01%)</title><rect x="58.9" y="453" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="61.91" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (317,763 samples, 0.03%)</title><rect x="340.5" y="373" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="343.52" y="383.5" ></text>
</g>
<g >
<title>decltype  (389,168 samples, 0.04%)</title><rect x="724.8" y="453" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="727.80" y="463.5" ></text>
</g>
<g >
<title>unsigned int* std::uninitialized_fill_n&lt;unsigned int*, unsigned long, unsigned int&gt; (1,094,828 samples, 0.11%)</title><rect x="695.6" y="453" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="698.56" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::construct&lt;ns3::HigherLayerSelected_s, ns3::HigherLayerSelected_s&gt; (545,065 samples, 0.06%)</title><rect x="595.7" y="197" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="598.69" y="207.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::DlInfoListElement_s::HarqStatus_e const, ns3::DlInfoListElement_s::HarqStatus_e&gt; (158,174 samples, 0.02%)</title><rect x="510.0" y="389" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="513.04" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_M_insert (162,012 samples, 0.02%)</title><rect x="332.1" y="453" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="335.10" y="463.5" ></text>
</g>
<g >
<title>decltype  (353,605 samples, 0.04%)</title><rect x="149.6" y="341" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="152.56" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::TxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (2,900,479 samples, 0.30%)</title><rect x="320.3" y="485" width="2.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="323.28" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::at (200,222 samples, 0.02%)</title><rect x="400.2" y="549" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="403.18" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::deallocate (124,394 samples, 0.01%)</title><rect x="776.2" y="309" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="779.16" y="319.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (2,940,550 samples, 0.30%)</title><rect x="419.0" y="405" width="2.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="422.03" y="415.5" ></text>
</g>
<g >
<title>[libm.so.6] (153,007 samples, 0.02%)</title><rect x="603.6" y="293" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="606.62" y="303.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (742,462 samples, 0.08%)</title><rect x="315.8" y="405" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="318.81" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (263,666 samples, 0.03%)</title><rect x="236.4" y="437" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="239.39" y="447.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::~CqiListElement_s (293,386 samples, 0.03%)</title><rect x="585.1" y="293" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="588.12" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_base (293,130 samples, 0.03%)</title><rect x="610.4" y="533" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="613.36" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; &gt; (183,538 samples, 0.02%)</title><rect x="18.0" y="261" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="21.01" y="271.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Ptr (567,669 samples, 0.06%)</title><rect x="368.0" y="517" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="371.02" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::empty (391,139 samples, 0.04%)</title><rect x="265.7" y="517" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="268.70" y="527.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ProcessOneEvent (5,321,712 samples, 0.55%)</title><rect x="11.2" y="757" width="4.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="14.17" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (448,730 samples, 0.05%)</title><rect x="575.1" y="357" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="578.07" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;* std::__addressof&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; (320,226 samples, 0.03%)</title><rect x="723.8" y="453" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="726.85" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (6,819,282 samples, 0.70%)</title><rect x="771.7" y="613" width="5.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="774.74" y="623.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e&gt; (147,743 samples, 0.02%)</title><rect x="107.3" y="357" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="110.33" y="367.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (232,547 samples, 0.02%)</title><rect x="91.2" y="469" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="94.15" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::pair (150,672 samples, 0.02%)</title><rect x="616.2" y="485" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="619.23" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (194,816 samples, 0.02%)</title><rect x="402.7" y="485" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="405.69" y="495.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::~tbInfo_t (271,160 samples, 0.03%)</title><rect x="530.2" y="325" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="533.23" y="335.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (447,972 samples, 0.05%)</title><rect x="598.4" y="245" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="601.37" y="255.5" ></text>
</g>
<g >
<title>std::operator== (294,846 samples, 0.03%)</title><rect x="524.6" y="309" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="527.64" y="319.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt; &gt; (4,898,473 samples, 0.51%)</title><rect x="124.3" y="501" width="4.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="127.35" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::push_back (2,561,414 samples, 0.26%)</title><rect x="217.9" y="485" width="2.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="220.91" y="495.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (522,481 samples, 0.05%)</title><rect x="661.2" y="373" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="664.23" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::empty (283,670 samples, 0.03%)</title><rect x="778.1" y="709" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="781.12" y="719.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (861,873 samples, 0.09%)</title><rect x="270.9" y="405" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="273.85" y="415.5" ></text>
</g>
<g >
<title>ns3::Object::Object (977,100 samples, 0.10%)</title><rect x="629.0" y="501" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="632.00" y="511.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt;::operator (208,208 samples, 0.02%)</title><rect x="81.4" y="453" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="84.38" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (158,119 samples, 0.02%)</title><rect x="340.6" y="213" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="343.65" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; &gt; (231,948 samples, 0.02%)</title><rect x="134.8" y="437" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="137.83" y="447.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (314,249 samples, 0.03%)</title><rect x="11.2" y="501" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="14.17" y="511.5" ></text>
</g>
<g >
<title>ns3::Time::operator= (268,567 samples, 0.03%)</title><rect x="346.2" y="517" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="349.16" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_List_base (945,418 samples, 0.10%)</title><rect x="285.4" y="517" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="288.43" y="527.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Unref (152,343 samples, 0.02%)</title><rect x="715.7" y="485" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="718.69" y="495.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (4,041,567 samples, 0.42%)</title><rect x="258.7" y="405" width="3.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="261.68" y="415.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;std::_Bit_iterator, bool&gt; (391,811 samples, 0.04%)</title><rect x="200.6" y="421" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="203.59" y="431.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, ns3::SpectrumValue const&amp;&gt;::operator (324,769 samples, 0.03%)</title><rect x="611.9" y="501" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="614.94" y="511.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (155,530 samples, 0.02%)</title><rect x="758.2" y="725" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="761.21" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::deallocate (154,926 samples, 0.02%)</title><rect x="484.0" y="453" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="486.97" y="463.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (149,635 samples, 0.02%)</title><rect x="398.3" y="501" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="401.29" y="511.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters::SchedUlCqiInfoReqParameters (569,767 samples, 0.06%)</title><rect x="477.9" y="309" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="480.85" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, unsigned int, false&gt;::_Head_base&lt;unsigned int&amp;&gt; (390,794 samples, 0.04%)</title><rect x="617.6" y="421" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="620.62" y="431.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (973,754 samples, 0.10%)</title><rect x="698.4" y="533" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="701.37" y="543.5" ></text>
</g>
<g >
<title>ns3::Seconds (258,846 samples, 0.03%)</title><rect x="120.9" y="533" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="123.90" y="543.5" ></text>
</g>
<g >
<title>double const* std::__niter_base&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (181,230 samples, 0.02%)</title><rect x="238.7" y="197" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="241.69" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_M_get_Tp_allocator (236,458 samples, 0.02%)</title><rect x="350.5" y="373" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="353.48" y="383.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (819,716 samples, 0.08%)</title><rect x="667.3" y="437" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="670.29" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (1,930,472 samples, 0.20%)</title><rect x="459.4" y="261" width="1.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="462.45" y="271.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::HarqProcessInfoElement_t*&gt; (288,179 samples, 0.03%)</title><rect x="515.0" y="517" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="518.03" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (158,119 samples, 0.02%)</title><rect x="340.6" y="293" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="343.65" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (3,158,900 samples, 0.33%)</title><rect x="75.3" y="437" width="2.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="78.35" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::empty (1,091,313 samples, 0.11%)</title><rect x="556.2" y="181" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="559.23" y="191.5" ></text>
</g>
<g >
<title>ns3::LteMiErrorModel::Mib (946,675 samples, 0.10%)</title><rect x="588.7" y="261" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="591.65" y="271.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::LteRadioBearerTag (416,698 samples, 0.04%)</title><rect x="489.1" y="549" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="492.15" y="559.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (149,519 samples, 0.02%)</title><rect x="467.8" y="469" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="470.78" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (429,586 samples, 0.04%)</title><rect x="325.4" y="405" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="328.42" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::begin (152,476 samples, 0.02%)</title><rect x="264.4" y="501" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="267.43" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (578,299 samples, 0.06%)</title><rect x="443.5" y="325" width="0.4" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="446.48" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::begin (290,983 samples, 0.03%)</title><rect x="550.4" y="229" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="553.42" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7,010,506 samples, 0.72%)</title><rect x="771.6" y="629" width="5.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="774.59" y="639.5" ></text>
</g>
<g >
<title>ns3::operator/ (752,804 samples, 0.08%)</title><rect x="484.5" y="517" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="487.49" y="527.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (190,282 samples, 0.02%)</title><rect x="99.5" y="405" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="102.50" y="415.5" ></text>
</g>
<g >
<title>std::operator== (198,006 samples, 0.02%)</title><rect x="339.6" y="453" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="342.59" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::construct&lt;ns3::UlInfoListElement_s, ns3::UlInfoListElement_s const&amp;&gt; (331,199 samples, 0.03%)</title><rect x="440.4" y="309" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="443.44" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (125,474 samples, 0.01%)</title><rect x="557.5" y="213" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="560.50" y="223.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (314,249 samples, 0.03%)</title><rect x="11.2" y="485" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="14.17" y="495.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::Mul (269,603 samples, 0.03%)</title><rect x="682.8" y="485" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="685.85" y="495.5" ></text>
</g>
<g >
<title>ns3::MemberLteFfrSapProvider&lt;ns3::LteFrNoOpAlgorithm&gt;::ReportUlCqiInfo (378,546 samples, 0.04%)</title><rect x="220.7" y="485" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="223.65" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="613" width="4.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="14.17" y="623.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::~Ptr (165,191 samples, 0.02%)</title><rect x="481.6" y="325" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="484.64" y="335.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (280,175 samples, 0.03%)</title><rect x="10.0" y="789" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (538,288 samples, 0.06%)</title><rect x="108.5" y="453" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="111.50" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::operator= (156,275 samples, 0.02%)</title><rect x="251.2" y="485" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="254.16" y="495.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (163,126 samples, 0.02%)</title><rect x="491.1" y="517" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="494.10" y="527.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a2&lt;false, ns3::HarqProcessInfoElement_t const*, ns3::HarqProcessInfoElement_t*&gt; (363,923 samples, 0.04%)</title><rect x="353.4" y="373" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="356.45" y="383.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a1&lt;false, int*, int*&gt; (153,996 samples, 0.02%)</title><rect x="304.3" y="469" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="307.32" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (3,608,007 samples, 0.37%)</title><rect x="237.4" y="389" width="2.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="240.42" y="399.5" ></text>
</g>
<g >
<title>[libm.so.6] (271,870 samples, 0.03%)</title><rect x="678.7" y="485" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="681.67" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (156,875 samples, 0.02%)</title><rect x="172.0" y="405" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="174.96" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, false&gt;::_M_head (197,720 samples, 0.02%)</title><rect x="757.2" y="549" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="760.24" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (165,413 samples, 0.02%)</title><rect x="581.7" y="309" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="584.70" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::MultiModelSpectrumChannel*&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (714,235 samples, 0.07%)</title><rect x="666.7" y="421" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="669.69" y="431.5" ></text>
</g>
<g >
<title>ns3::Simulator::Run (2,105,662 samples, 0.22%)</title><rect x="15.5" y="773" width="1.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="18.45" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::allocate (428,661 samples, 0.04%)</title><rect x="724.5" y="453" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="727.45" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (277,435 samples, 0.03%)</title><rect x="188.9" y="469" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="191.94" y="479.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (147,743 samples, 0.02%)</title><rect x="107.3" y="325" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="110.33" y="335.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ObjectBase (222,732 samples, 0.02%)</title><rect x="365.4" y="453" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="368.42" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (324,769 samples, 0.03%)</title><rect x="611.9" y="453" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="614.94" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (230,884 samples, 0.02%)</title><rect x="398.4" y="517" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="401.41" y="527.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartFrame (415,834 samples, 0.04%)</title><rect x="15.5" y="565" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="18.45" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::insert (572,036 samples, 0.06%)</title><rect x="100.2" y="453" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="103.16" y="463.5" ></text>
</g>
<g >
<title>ns3::Time::GetSeconds (495,841 samples, 0.05%)</title><rect x="484.1" y="517" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="487.10" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (272,688 samples, 0.03%)</title><rect x="130.8" y="469" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="133.81" y="479.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::DlInfoListElement_s::HarqStatus_e const, ns3::DlInfoListElement_s::HarqStatus_e&gt; (593,050 samples, 0.06%)</title><rect x="260.0" y="261" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="263.04" y="271.5" ></text>
</g>
<g >
<title>unsigned short* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (485,137 samples, 0.05%)</title><rect x="475.0" y="213" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="478.00" y="223.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteUeMac::LcInfo, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::find (1,135,998 samples, 0.12%)</title><rect x="437.6" y="325" width="0.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="440.60" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_base (198,899 samples, 0.02%)</title><rect x="354.0" y="469" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="356.99" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator[] (316,514 samples, 0.03%)</title><rect x="302.3" y="485" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="305.31" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::SpectrumValue const&amp;&gt; (186,604 samples, 0.02%)</title><rect x="481.5" y="325" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="484.49" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (345,577 samples, 0.04%)</title><rect x="114.0" y="389" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="117.02" y="399.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Subtract (2,558,547 samples, 0.26%)</title><rect x="415.1" y="533" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="418.11" y="543.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,132,572 samples, 0.12%)</title><rect x="634.9" y="357" width="0.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="637.88" y="367.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::SimpleRefCount (246,179 samples, 0.03%)</title><rect x="559.2" y="229" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="562.15" y="239.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (356,634 samples, 0.04%)</title><rect x="442.7" y="277" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="445.72" y="287.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ObjectBase (229,496 samples, 0.02%)</title><rect x="489.3" y="517" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="492.30" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (353,605 samples, 0.04%)</title><rect x="149.6" y="357" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="152.56" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt;::pair&lt;unsigned short&amp;, ns3::DlInfoListElement_s&amp;&gt; (647,715 samples, 0.07%)</title><rect x="509.8" y="549" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="512.85" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (200,380 samples, 0.02%)</title><rect x="159.4" y="373" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="162.40" y="383.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (3,367,904 samples, 0.35%)</title><rect x="451.2" y="245" width="2.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="454.22" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_ptr (208,839 samples, 0.02%)</title><rect x="429.0" y="245" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="432.02" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Object&gt;::~Ptr (152,955 samples, 0.02%)</title><rect x="743.3" y="549" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="746.26" y="559.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s&gt; (317,071 samples, 0.03%)</title><rect x="26.4" y="277" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="29.42" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (782,981 samples, 0.08%)</title><rect x="505.7" y="405" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="508.65" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlCqiLteControlMessage&gt; ns3::Create&lt;ns3::DlCqiLteControlMessage&gt; (1,129,510 samples, 0.12%)</title><rect x="592.3" y="293" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="595.26" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (271,168 samples, 0.03%)</title><rect x="174.3" y="437" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="177.28" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (393,630 samples, 0.04%)</title><rect x="24.0" y="373" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="26.97" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::list (1,123,852 samples, 0.12%)</title><rect x="539.2" y="277" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="542.15" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::back (511,487 samples, 0.05%)</title><rect x="29.6" y="373" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="32.59" y="383.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (392,648 samples, 0.04%)</title><rect x="612.9" y="421" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="615.90" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (925,680 samples, 0.10%)</title><rect x="658.4" y="469" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="661.42" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void  (856,730 samples, 0.09%)</title><rect x="667.3" y="469" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="670.27" y="479.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::__allocated_ptr (363,344 samples, 0.04%)</title><rect x="723.8" y="469" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="726.81" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (946,469 samples, 0.10%)</title><rect x="685.8" y="453" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="688.78" y="463.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::LteRadioBearerTag (235,722 samples, 0.02%)</title><rect x="20.3" y="357" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="23.33" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::pair (194,069 samples, 0.02%)</title><rect x="104.6" y="293" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="107.61" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_valptr (245,098 samples, 0.03%)</title><rect x="528.0" y="261" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="531.05" y="271.5" ></text>
</g>
<g >
<title>ns3::RlcTag::GetInstanceTypeId (165,086 samples, 0.02%)</title><rect x="554.9" y="245" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="557.94" y="255.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (1,796,083 samples, 0.19%)</title><rect x="501.5" y="437" width="1.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="504.48" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (195,540 samples, 0.02%)</title><rect x="83.1" y="341" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="86.06" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (5,924,813 samples, 0.61%)</title><rect x="446.1" y="309" width="4.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="449.13" y="319.5" ></text>
</g>
<g >
<title>void std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (917,956 samples, 0.09%)</title><rect x="590.3" y="245" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="593.31" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (271,061 samples, 0.03%)</title><rect x="775.7" y="357" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="778.66" y="367.5" ></text>
</g>
<g >
<title>decltype  (338,177 samples, 0.03%)</title><rect x="117.3" y="485" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="120.31" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;::_Rb_tree_const_iterator (163,290 samples, 0.02%)</title><rect x="331.4" y="485" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="334.37" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (589,946 samples, 0.06%)</title><rect x="667.5" y="373" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="670.48" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (326,142 samples, 0.03%)</title><rect x="88.2" y="453" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="91.19" y="463.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__copy_move_a1&lt;false, ns3::HigherLayerSelected_s const*, ns3::HigherLayerSelected_s*&gt; (231,948 samples, 0.02%)</title><rect x="134.8" y="421" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="137.83" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (316,703 samples, 0.03%)</title><rect x="416.9" y="517" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="419.92" y="527.5" ></text>
</g>
<g >
<title> (233,577 samples, 0.02%)</title><rect x="344.0" y="501" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="347.01" y="511.5" ></text>
</g>
<g >
<title>ns3::Scheduler::EventKey&amp;&amp; std::forward&lt;ns3::Scheduler::EventKey&gt; (159,059 samples, 0.02%)</title><rect x="271.4" y="341" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="274.42" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt;::_M_create_storage (276,341 samples, 0.03%)</title><rect x="141.1" y="421" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="144.11" y="431.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (1,840,989 samples, 0.19%)</title><rect x="444.0" y="341" width="1.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="446.98" y="351.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlMacCtrlInfoReqParameters::~SchedUlMacCtrlInfoReqParameters (274,453 samples, 0.03%)</title><rect x="133.3" y="517" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="136.29" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (411,266 samples, 0.04%)</title><rect x="87.6" y="389" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="90.62" y="399.5" ></text>
</g>
<g >
<title>ns3::LteFrNoOpAlgorithm::DoReportUlCqiInfo (261,636 samples, 0.03%)</title><rect x="220.7" y="469" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="223.75" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (326,828 samples, 0.03%)</title><rect x="87.7" y="341" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="90.69" y="351.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (235,829 samples, 0.02%)</title><rect x="656.0" y="501" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="659.02" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::list (480,104 samples, 0.05%)</title><rect x="110.0" y="517" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="113.00" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base*&amp; std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (209,016 samples, 0.02%)</title><rect x="528.5" y="245" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="531.47" y="255.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetRxSpectrumModel (176,892 samples, 0.02%)</title><rect x="644.0" y="517" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="647.05" y="527.5" ></text>
</g>
<g >
<title>ns3::Packet::GetByteTagIterator (1,295,465 samples, 0.13%)</title><rect x="426.1" y="245" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="429.14" y="255.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::MacCeListElement_s (339,065 samples, 0.03%)</title><rect x="688.8" y="469" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="691.76" y="479.5" ></text>
</g>
<g >
<title>std::operator== (124,937 samples, 0.01%)</title><rect x="611.7" y="517" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="614.74" y="527.5" ></text>
</g>
<g >
<title>pow (310,695 samples, 0.03%)</title><rect x="227.1" y="469" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="230.10" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (148,897 samples, 0.02%)</title><rect x="347.2" y="533" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="350.19" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (5,277,768 samples, 0.54%)</title><rect x="371.0" y="517" width="4.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="374.04" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;ns3::Scheduler::EventKey&gt;::operator (414,791 samples, 0.04%)</title><rect x="85.8" y="389" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="88.78" y="399.5" ></text>
</g>
<g >
<title>cfree (124,845 samples, 0.01%)</title><rect x="76.7" y="357" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="79.70" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (1,777,558 samples, 0.18%)</title><rect x="652.6" y="437" width="1.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="655.59" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1,437,343 samples, 0.15%)</title><rect x="711.4" y="421" width="1.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="714.39" y="431.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::operator (75,636,826 samples, 7.80%)</title><rect x="515.8" y="549" width="60.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="518.83" y="559.5" >ns3::C..</text>
</g>
<g >
<title>ns3::LteFrNoOpAlgorithm::DoGetAvailableDlRbg (848,072 samples, 0.09%)</title><rect x="175.5" y="469" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="178.54" y="479.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::ReceivePdu (1,587,883 samples, 0.16%)</title><rect x="435.7" y="293" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="438.74" y="303.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (390,089 samples, 0.04%)</title><rect x="483.8" y="517" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="486.78" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator[] (186,851 samples, 0.02%)</title><rect x="678.5" y="469" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="681.46" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_Rb_tree_iterator (160,302 samples, 0.02%)</title><rect x="348.9" y="501" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="351.88" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::PacketTagList (222,450 samples, 0.02%)</title><rect x="153.9" y="357" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="156.87" y="367.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (238,924 samples, 0.02%)</title><rect x="36.6" y="581" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="39.64" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::at (196,396 samples, 0.02%)</title><rect x="173.7" y="453" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="176.72" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::emplace_hint&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (1,489,049 samples, 0.15%)</title><rect x="331.5" y="485" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="334.51" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::~_Vector_impl (125,125 samples, 0.01%)</title><rect x="216.6" y="453" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="219.65" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::~Ptr (200,126 samples, 0.02%)</title><rect x="672.2" y="533" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="675.17" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (578,265 samples, 0.06%)</title><rect x="576.1" y="373" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="579.13" y="383.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (932,942 samples, 0.10%)</title><rect x="615.4" y="485" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="618.45" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteUePhy::UeMeasurementsElement, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt; &gt;::find (242,538 samples, 0.03%)</title><rect x="726.4" y="325" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="729.36" y="335.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Run (22,443,594 samples, 2.31%)</title><rect x="17.2" y="789" width="18.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="20.17" y="799.5" ></text>
</g>
<g >
<title>operator new (201,409 samples, 0.02%)</title><rect x="547.4" y="37" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="550.41" y="47.5" ></text>
</g>
<g >
<title>ns3::LteUePhy*&amp; std::_Mu&lt;ns3::LteUePhy*, false, false&gt;::operator (226,205 samples, 0.02%)</title><rect x="49.6" y="597" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="52.55" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move_a2&lt;true, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (154,567 samples, 0.02%)</title><rect x="117.8" y="437" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="120.78" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::key_comp (125,297 samples, 0.01%)</title><rect x="84.2" y="421" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="87.20" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_erase (2,288,506 samples, 0.24%)</title><rect x="634.1" y="517" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="637.11" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (919,396 samples, 0.09%)</title><rect x="732.9" y="437" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="735.95" y="447.5" ></text>
</g>
<g >
<title>operator new (156,584 samples, 0.02%)</title><rect x="154.6" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="157.60" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt;::operator (168,179 samples, 0.02%)</title><rect x="731.6" y="517" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="734.56" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const* std::__addressof&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const&gt; (186,584 samples, 0.02%)</title><rect x="685.9" y="437" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="688.91" y="447.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::DlInfoListElement_s&gt; (652,447 samples, 0.07%)</title><rect x="132.6" y="421" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="135.56" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned int&gt;, true&gt;::_Rb_tree_impl (236,125 samples, 0.02%)</title><rect x="329.5" y="469" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="332.55" y="479.5" ></text>
</g>
<g >
<title> (160,485 samples, 0.02%)</title><rect x="368.5" y="501" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="371.48" y="511.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::~MacCeListElement_s (599,086 samples, 0.06%)</title><rect x="265.0" y="389" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="267.96" y="399.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt;::Delete (2,421,676 samples, 0.25%)</title><rect x="652.5" y="485" width="1.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="655.49" y="495.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::PhyPduReceived (4,557,849 samples, 0.47%)</title><rect x="434.9" y="373" width="3.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="437.94" y="383.5" ></text>
</g>
<g >
<title>void  (200,340 samples, 0.02%)</title><rect x="423.0" y="389" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="426.05" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (490,258 samples, 0.05%)</title><rect x="239.4" y="197" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="242.41" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_M_init (156,589 samples, 0.02%)</title><rect x="162.1" y="357" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="165.11" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (5,201,507 samples, 0.54%)</title><rect x="450.9" y="309" width="4.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="453.90" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_erase (270,189 samples, 0.03%)</title><rect x="506.3" y="501" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="509.35" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleUeCcmMacSapUser::ReceivePdu (2,333,945 samples, 0.24%)</title><rect x="435.6" y="325" width="1.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="438.60" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::_S_key (312,442 samples, 0.03%)</title><rect x="177.0" y="421" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="179.97" y="431.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (884,239,690 samples, 91.18%)</title><rect x="47.0" y="613" width="711.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="50.01" y="623.5" >void std::_Bind&lt;void </text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (1,074,226 samples, 0.11%)</title><rect x="621.6" y="437" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="624.64" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_Vector_base (431,145 samples, 0.04%)</title><rect x="131.7" y="485" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="134.68" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::allocate (143,335 samples, 0.01%)</title><rect x="499.5" y="421" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="502.52" y="431.5" ></text>
</g>
<g >
<title>ns3::EventImpl::EventImpl (158,256 samples, 0.02%)</title><rect x="340.0" y="453" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="343.02" y="463.5" ></text>
</g>
<g >
<title>ns3::LteControlMessage::LteControlMessage (271,693 samples, 0.03%)</title><rect x="288.2" y="405" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="291.18" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::push_back (148,059 samples, 0.02%)</title><rect x="101.4" y="469" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="104.41" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::operator* (233,448 samples, 0.02%)</title><rect x="745.5" y="517" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="748.50" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned short const&amp;&gt;::tuple (200,653 samples, 0.02%)</title><rect x="243.3" y="373" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="246.26" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::~vector (399,447 samples, 0.04%)</title><rect x="145.9" y="341" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="148.95" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (125,411 samples, 0.01%)</title><rect x="584.5" y="261" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="587.52" y="271.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt;::Delete (233,861 samples, 0.02%)</title><rect x="344.2" y="485" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="347.23" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (368,770 samples, 0.04%)</title><rect x="87.7" y="373" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="90.66" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (309,432 samples, 0.03%)</title><rect x="630.4" y="437" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="633.36" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Auto_node::_M_insert (233,734 samples, 0.02%)</title><rect x="293.5" y="485" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="296.50" y="495.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetAntenna (524,985 samples, 0.05%)</title><rect x="703.8" y="549" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="706.84" y="559.5" ></text>
</g>
<g >
<title>std::operator== (467,378 samples, 0.05%)</title><rect x="768.0" y="709" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="770.99" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_erase (1,008,706 samples, 0.10%)</title><rect x="254.9" y="501" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="257.91" y="511.5" ></text>
</g>
<g >
<title>ns3::BuildRarListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildRarListElement_s const*, std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt; &gt;, ns3::BuildRarListElement_s*&gt; (198,569 samples, 0.02%)</title><rect x="143.1" y="405" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="146.13" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__copy_move_a2&lt;true, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*&gt; (1,149,860 samples, 0.12%)</title><rect x="621.6" y="453" width="0.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="624.61" y="463.5" ></text>
</g>
<g >
<title>unsigned short* std::__copy_move_a&lt;true, unsigned short*, unsigned short*&gt; (251,127 samples, 0.03%)</title><rect x="253.4" y="373" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="256.45" y="383.5" ></text>
</g>
<g >
<title>ns3::GetImpl (158,305 samples, 0.02%)</title><rect x="280.4" y="517" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="283.37" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt;::deallocate (152,095 samples, 0.02%)</title><rect x="256.6" y="309" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="259.57" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_impl::_Vector_impl (391,527 samples, 0.04%)</title><rect x="366.0" y="437" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="369.04" y="447.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::operator (569,042 samples, 0.06%)</title><rect x="481.8" y="325" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="484.77" y="335.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::MacCeListElement_s (153,635 samples, 0.02%)</title><rect x="457.2" y="309" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="460.19" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::back (388,694 samples, 0.04%)</title><rect x="382.9" y="501" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="385.86" y="511.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (334,764 samples, 0.03%)</title><rect x="591.6" y="213" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="594.56" y="223.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel&gt;&amp;&gt; (650,459 samples, 0.07%)</title><rect x="111.6" y="469" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="114.62" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;&amp; std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (551,584 samples, 0.06%)</title><rect x="636.1" y="517" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="639.13" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_M_erase_at_end (127,447 samples, 0.01%)</title><rect x="549.6" y="197" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="552.60" y="207.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::ReceivePdu (7,833,319 samples, 0.81%)</title><rect x="424.0" y="325" width="6.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="426.95" y="335.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s const* std::__niter_base&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; (192,328 samples, 0.02%)</title><rect x="25.9" y="245" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="28.90" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (156,542 samples, 0.02%)</title><rect x="163.8" y="421" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="166.80" y="431.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (142,224 samples, 0.01%)</title><rect x="634.7" y="309" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="637.73" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Object&gt;::Acquire (269,784 samples, 0.03%)</title><rect x="704.0" y="517" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="707.05" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (357,028 samples, 0.04%)</title><rect x="233.3" y="309" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="236.27" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (1,336,444 samples, 0.14%)</title><rect x="213.6" y="485" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="216.57" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::AntennaModel&gt;::Ptr (201,269 samples, 0.02%)</title><rect x="742.0" y="533" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="745.03" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; (278,789 samples, 0.03%)</title><rect x="633.8" y="517" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="636.79" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider::ReportBufferStatusParameters, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::find (1,503,084 samples, 0.15%)</title><rect x="569.8" y="325" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="572.79" y="335.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt; &gt;::type const&amp; std::get&lt;1ul, double const&amp;, double const&amp;, double const&amp;&gt; (407,082 samples, 0.04%)</title><rect x="748.1" y="469" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="751.12" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (1,766,493 samples, 0.18%)</title><rect x="168.0" y="437" width="1.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="171.04" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Acquire (154,647 samples, 0.02%)</title><rect x="628.2" y="501" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="631.16" y="511.5" ></text>
</g>
<g >
<title>void  (614,254 samples, 0.06%)</title><rect x="580.3" y="357" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="583.33" y="367.5" ></text>
</g>
<g >
<title>std::modf (232,865 samples, 0.02%)</title><rect x="684.0" y="485" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="687.02" y="495.5" ></text>
</g>
<g >
<title>ns3::int64x64_t::MulByInvert (163,855 samples, 0.02%)</title><rect x="605.6" y="469" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="608.60" y="479.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,432,110 samples, 0.15%)</title><rect x="10.0" y="805" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::erase (456,537 samples, 0.05%)</title><rect x="106.7" y="501" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="109.74" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters*&gt; (1,058,935 samples, 0.11%)</title><rect x="263.2" y="469" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="266.21" y="479.5" ></text>
</g>
<g >
<title>exit (155,299 samples, 0.02%)</title><rect x="35.5" y="789" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="38.54" y="799.5" ></text>
</g>
<g >
<title>ns3::Buffer::~Buffer (206,160 samples, 0.02%)</title><rect x="76.1" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="79.11" y="239.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::operator= (147,762 samples, 0.02%)</title><rect x="363.1" y="453" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="366.13" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_allocate (191,041 samples, 0.02%)</title><rect x="695.2" y="453" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="698.16" y="463.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (3,074,446 samples, 0.32%)</title><rect x="75.4" y="405" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="78.42" y="415.5" ></text>
</g>
<g >
<title>ns3::Time::ToDouble (1,825,393 samples, 0.19%)</title><rect x="405.8" y="501" width="1.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="408.85" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;::_M_ptr (243,580 samples, 0.03%)</title><rect x="458.6" y="197" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="461.61" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (1,599,149 samples, 0.16%)</title><rect x="317.1" y="405" width="1.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="320.14" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (1,126,228 samples, 0.12%)</title><rect x="73.3" y="485" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="76.35" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::PacketTagList (159,488 samples, 0.02%)</title><rect x="624.9" y="485" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="627.90" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt; &gt;::_M_mbegin (155,860 samples, 0.02%)</title><rect x="241.0" y="437" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="244.03" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;* std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (1,386,943 samples, 0.14%)</title><rect x="384.3" y="469" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="387.30" y="479.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedUlCqiInfoReq (821,265 samples, 0.08%)</title><rect x="102.6" y="485" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="105.56" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (199,813 samples, 0.02%)</title><rect x="610.0" y="389" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="612.97" y="399.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::DlInfoListElement_s, ns3::DlInfoListElement_s const&amp;&gt; (4,273,011 samples, 0.44%)</title><rect x="258.5" y="421" width="3.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="261.49" y="431.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="661" width="4.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="14.17" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::_M_lower_bound (228,291 samples, 0.02%)</title><rect x="135.6" y="453" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="138.63" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_realloc_insert&lt;unsigned char&gt; (1,385,167 samples, 0.14%)</title><rect x="597.0" y="261" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="599.96" y="271.5" ></text>
</g>
<g >
<title>ns3::Time::Time (156,551 samples, 0.02%)</title><rect x="408.7" y="469" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="411.69" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (427,278 samples, 0.04%)</title><rect x="399.4" y="533" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="402.40" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const&amp;&gt; (252,039 samples, 0.03%)</title><rect x="101.6" y="437" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="104.59" y="447.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::Ref (330,055 samples, 0.03%)</title><rect x="499.9" y="405" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="502.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::pop_back (158,310 samples, 0.02%)</title><rect x="32.6" y="341" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="35.57" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_M_clear (124,335 samples, 0.01%)</title><rect x="540.2" y="245" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="543.23" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;signed char&gt; &gt;::construct&lt;signed char, signed char&gt; (169,019 samples, 0.02%)</title><rect x="533.4" y="309" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="536.42" y="319.5" ></text>
</g>
<g >
<title>_start (923,730,017 samples, 95.25%)</title><rect x="35.5" y="837" width="743.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="38.54" y="847.5" >_start</text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator[] (196,931 samples, 0.02%)</title><rect x="488.2" y="485" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="491.17" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (150,383 samples, 0.02%)</title><rect x="41.4" y="677" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="44.44" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::begin (240,498 samples, 0.02%)</title><rect x="481.8" y="309" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="484.83" y="319.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (833,626 samples, 0.09%)</title><rect x="725.9" y="357" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="728.89" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (306,410 samples, 0.03%)</title><rect x="29.3" y="373" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="32.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::push_back (1,103,607 samples, 0.11%)</title><rect x="209.3" y="485" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="212.28" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; ns3::Create&lt;ns3::Packet, unsigned int&amp;&gt; (5,253,542 samples, 0.54%)</title><rect x="555.6" y="261" width="4.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="558.60" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_ptr (158,837 samples, 0.02%)</title><rect x="675.2" y="437" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="678.24" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::max_size (276,398 samples, 0.03%)</title><rect x="250.2" y="437" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="253.17" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_M_get_Tp_allocator (314,467 samples, 0.03%)</title><rect x="513.7" y="533" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="516.69" y="543.5" ></text>
</g>
<g >
<title>ns3::LteEnbRrc::AddUe (285,958 samples, 0.03%)</title><rect x="130.4" y="485" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="133.38" y="495.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_Bvector_impl_data::_M_reset (156,996 samples, 0.02%)</title><rect x="202.1" y="437" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="205.13" y="447.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__niter_wrap&lt;ns3::HarqProcessInfoElement_t*&gt; (274,590 samples, 0.03%)</title><rect x="353.8" y="389" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="356.77" y="399.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a2&lt;false, ns3::DlInfoListElement_s::HarqStatus_e const*, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (158,174 samples, 0.02%)</title><rect x="510.0" y="405" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="513.04" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_copy_aligned (653,505 samples, 0.07%)</title><rect x="248.0" y="437" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="250.98" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (126,951 samples, 0.01%)</title><rect x="408.1" y="453" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="411.14" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::operator bool (157,451 samples, 0.02%)</title><rect x="361.6" y="501" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="364.65" y="511.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (362,265 samples, 0.04%)</title><rect x="728.3" y="453" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="731.27" y="463.5" ></text>
</g>
<g >
<title>ns3::UlDciListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlDciListElement_s const*, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, ns3::UlDciListElement_s*, ns3::UlDciListElement_s&gt; (196,365 samples, 0.02%)</title><rect x="228.2" y="437" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="231.16" y="447.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; const&amp;&gt; (127,066 samples, 0.01%)</title><rect x="88.3" y="373" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="91.28" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::begin (157,097 samples, 0.02%)</title><rect x="205.1" y="389" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="208.13" y="399.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (19,358,790 samples, 2.00%)</title><rect x="19.6" y="581" width="15.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="22.57" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (205,185 samples, 0.02%)</title><rect x="343.7" y="485" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="346.70" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_M_allocate (198,391 samples, 0.02%)</title><rect x="202.4" y="453" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="205.45" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (270,008 samples, 0.03%)</title><rect x="17.7" y="373" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="20.67" y="383.5" ></text>
</g>
<g >
<title>ns3::operator+ (149,473 samples, 0.02%)</title><rect x="339.5" y="453" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="342.47" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,505,468 samples, 0.16%)</title><rect x="190.8" y="453" width="1.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="193.82" y="463.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Create (796,815 samples, 0.08%)</title><rect x="32.7" y="373" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="35.70" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDataFrame&gt; ns3::Create&lt;ns3::LteSpectrumSignalParametersDataFrame, ns3::LteSpectrumSignalParametersDataFrame const&amp;&gt; (6,974,208 samples, 0.72%)</title><rect x="67.4" y="501" width="5.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="70.44" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NetDevice&gt;::Ptr (158,827 samples, 0.02%)</title><rect x="643.7" y="501" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="646.67" y="511.5" ></text>
</g>
<g >
<title>ns3::UniformRandomVariable::GetValue (910,934 samples, 0.09%)</title><rect x="495.2" y="549" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="498.19" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_ptr (165,849 samples, 0.02%)</title><rect x="55.5" y="405" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="58.46" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_allocate (364,814 samples, 0.04%)</title><rect x="444.8" y="277" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="447.82" y="287.5" ></text>
</g>
<g >
<title>ns3::LteHarqPhy::SubframeIndication (778,194 samples, 0.08%)</title><rect x="117.0" y="533" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="119.96" y="543.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (415,834 samples, 0.04%)</title><rect x="15.5" y="469" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="18.45" y="479.5" ></text>
</g>
<g >
<title>double const* std::__niter_base&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (157,559 samples, 0.02%)</title><rect x="730.7" y="421" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="733.70" y="431.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::tbInfo_t (653,622 samples, 0.07%)</title><rect x="527.1" y="197" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="530.08" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (261,288 samples, 0.03%)</title><rect x="635.5" y="325" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="638.53" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (487,568 samples, 0.05%)</title><rect x="494.8" y="533" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="497.80" y="543.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::RefreshDlCqiMaps (1,254,491 samples, 0.13%)</title><rect x="177.9" y="485" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="180.88" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::_M_valptr (258,528 samples, 0.03%)</title><rect x="656.9" y="485" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="659.92" y="495.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;2ul, std::tuple&lt;ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; &gt;::type&amp; std::get&lt;2ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; (960,298 samples, 0.10%)</title><rect x="755.5" y="597" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="758.49" y="607.5" ></text>
</g>
<g >
<title>ns3::LteUeRrc::DoRecvMasterInformationBlock (193,516 samples, 0.02%)</title><rect x="533.6" y="341" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="536.59" y="351.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (193,911 samples, 0.02%)</title><rect x="104.0" y="341" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="106.96" y="351.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::WriteU8 (197,148 samples, 0.02%)</title><rect x="31.0" y="373" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="34.01" y="383.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (418,403 samples, 0.04%)</title><rect x="654.6" y="469" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="657.59" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::at (276,726 samples, 0.03%)</title><rect x="459.2" y="277" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="462.19" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (818,048 samples, 0.08%)</title><rect x="394.1" y="517" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.10" y="527.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlRlcBufferReq (605,673 samples, 0.06%)</title><rect x="17.9" y="325" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="20.95" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::end (201,886 samples, 0.02%)</title><rect x="443.3" y="293" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="446.29" y="303.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s::HigherLayerSelected_s (202,804 samples, 0.02%)</title><rect x="593.4" y="165" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="596.38" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::~_Rb_tree (895,963 samples, 0.09%)</title><rect x="776.5" y="421" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="779.50" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::deallocate (154,926 samples, 0.02%)</title><rect x="484.0" y="421" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="486.97" y="431.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a2&lt;false, int const*, int*&gt; (162,673 samples, 0.02%)</title><rect x="531.3" y="277" width="0.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="534.29" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (195,862 samples, 0.02%)</title><rect x="335.5" y="357" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="338.48" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteCcmMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt; &gt;::find (1,417,571 samples, 0.15%)</title><rect x="458.0" y="277" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="461.05" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::_Tuple_impl (853,910 samples, 0.09%)</title><rect x="711.9" y="373" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="714.86" y="383.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (383,002 samples, 0.04%)</title><rect x="166.4" y="373" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="169.42" y="383.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::Ref (272,369 samples, 0.03%)</title><rect x="750.9" y="533" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="753.86" y="543.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (155,440 samples, 0.02%)</title><rect x="220.5" y="485" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="223.50" y="495.5" ></text>
</g>
<g >
<title>operator delete (153,527 samples, 0.02%)</title><rect x="764.9" y="581" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="767.92" y="591.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, ns3::Ptr&lt;ns3::MibLteControlMessage&gt;&amp;&gt; (151,782 samples, 0.02%)</title><rect x="122.4" y="501" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="125.36" y="511.5" ></text>
</g>
<g >
<title> (240,645 samples, 0.02%)</title><rect x="160.2" y="437" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="163.15" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::VendorSpecificListElement_s*, ns3::VendorSpecificListElement_s&gt; (234,807 samples, 0.02%)</title><rect x="263.9" y="373" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="266.87" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_lower_bound (500,820 samples, 0.05%)</title><rect x="568.2" y="261" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="571.19" y="271.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (888,679 samples, 0.09%)</title><rect x="62.2" y="501" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="65.21" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::EndRxData (121,921,584 samples, 12.57%)</title><rect x="417.2" y="565" width="98.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="420.20" y="575.5" >ns3::LteSpe..</text>
</g>
<g >
<title>modff64x (241,188 samples, 0.02%)</title><rect x="390.8" y="469" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="393.79" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::max_size (465,751 samples, 0.05%)</title><rect x="211.1" y="437" width="0.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="214.11" y="447.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedUlConfigInd (1,937,481 samples, 0.20%)</title><rect x="230.0" y="469" width="1.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="233.01" y="479.5" ></text>
</g>
<g >
<title>ns3::WrapToPi (196,497 samples, 0.02%)</title><rect x="311.2" y="453" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="314.20" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::_M_begin (182,609 samples, 0.02%)</title><rect x="244.5" y="453" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="247.50" y="463.5" ></text>
</g>
<g >
<title>ns3::LteFfrAlgorithm::GetRbgSize (314,835 samples, 0.03%)</title><rect x="175.8" y="453" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="178.85" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (647,164 samples, 0.07%)</title><rect x="729.7" y="437" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="732.73" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (2,749,650 samples, 0.28%)</title><rect x="522.7" y="325" width="2.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="525.67" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*&gt; (145,758 samples, 0.02%)</title><rect x="110.6" y="421" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="113.56" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::operator[] (152,525 samples, 0.02%)</title><rect x="172.9" y="437" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="175.90" y="447.5" ></text>
</g>
<g >
<title>int&amp; std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (931,649 samples, 0.10%)</title><rect x="572.5" y="341" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="575.50" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (279,109 samples, 0.03%)</title><rect x="382.1" y="469" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="385.09" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::allocate (313,319 samples, 0.03%)</title><rect x="626.6" y="405" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="629.59" y="415.5" ></text>
</g>
<g >
<title>unsigned char* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (280,915 samples, 0.03%)</title><rect x="519.3" y="277" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="522.35" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Ptr (218,155 samples, 0.02%)</title><rect x="363.8" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="366.77" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (155,456 samples, 0.02%)</title><rect x="341.2" y="389" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="344.24" y="399.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::Unref (127,064 samples, 0.01%)</title><rect x="576.5" y="277" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="579.49" y="287.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (943,939 samples, 0.10%)</title><rect x="75.9" y="277" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="78.94" y="287.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::Packet&gt;::Delete (359,163 samples, 0.04%)</title><rect x="502.1" y="309" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="505.05" y="319.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt; &gt; (324,739 samples, 0.03%)</title><rect x="593.3" y="261" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="596.31" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (891,714 samples, 0.09%)</title><rect x="377.9" y="325" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="380.91" y="335.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s&gt; (154,796 samples, 0.02%)</title><rect x="131.1" y="437" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="134.12" y="447.5" ></text>
</g>
<g >
<title>operator new (190,161 samples, 0.02%)</title><rect x="212.9" y="309" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="215.85" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::~Ptr (281,749 samples, 0.03%)</title><rect x="305.7" y="469" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="308.65" y="479.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (888,679 samples, 0.09%)</title><rect x="62.2" y="517" width="0.7" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="65.21" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (934,712 samples, 0.10%)</title><rect x="776.5" y="469" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="779.47" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_Rb_tree_iterator (163,346 samples, 0.02%)</title><rect x="242.4" y="437" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.36" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::BuildDataListElement_s*, ns3::BuildDataListElement_s&gt; (793,632 samples, 0.08%)</title><rect x="145.6" y="437" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="148.63" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;unsigned int&gt;::__value, void&gt;::__type std::__fill_a1&lt;unsigned int*, unsigned int&gt; (467,368 samples, 0.05%)</title><rect x="696.1" y="373" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="699.06" y="383.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::MacCeValue_u (153,635 samples, 0.02%)</title><rect x="457.2" y="293" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="460.19" y="303.5" ></text>
</g>
<g >
<title>decltype  (232,855 samples, 0.02%)</title><rect x="722.0" y="405" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="724.96" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (3,155,006 samples, 0.33%)</title><rect x="731.9" y="517" width="2.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="734.89" y="527.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Begin (1,259,994 samples, 0.13%)</title><rect x="426.2" y="229" width="1.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="429.17" y="239.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::~SbMeasResult_s (154,796 samples, 0.02%)</title><rect x="131.1" y="389" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="134.12" y="399.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (102,277,174 samples, 10.55%)</title><rect x="137.9" y="517" width="82.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="140.90" y="527.5" >ns3::Memb..</text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__copy_move_a1&lt;false, ns3::HigherLayerSelected_s const*, ns3::HigherLayerSelected_s*&gt; (126,567 samples, 0.01%)</title><rect x="585.8" y="197" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="588.82" y="207.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters* std::__addressof&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; (156,394 samples, 0.02%)</title><rect x="263.3" y="437" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="266.34" y="447.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::operator= (125,732 samples, 0.01%)</title><rect x="733.4" y="389" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="736.43" y="399.5" ></text>
</g>
<g >
<title>ns3::RlcTag::Serialize (356,272 samples, 0.04%)</title><rect x="16.4" y="373" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="19.41" y="383.5" ></text>
</g>
<g >
<title>ns3::Object::Construct (2,451,198 samples, 0.25%)</title><rect x="630.7" y="501" width="2.0" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="633.71" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_node (768,882 samples, 0.08%)</title><rect x="270.2" y="405" width="0.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="273.23" y="415.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a1&lt;false, int const*, int*&gt; (214,092 samples, 0.02%)</title><rect x="574.1" y="261" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="577.15" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (955,568 samples, 0.10%)</title><rect x="462.8" y="341" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="465.85" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Ptr&lt;ns3::SpectrumValue&gt; (191,031 samples, 0.02%)</title><rect x="737.7" y="533" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="740.71" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (146,912 samples, 0.02%)</title><rect x="303.7" y="421" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="306.68" y="431.5" ></text>
</g>
<g >
<title>ns3::GetImpl (242,375 samples, 0.02%)</title><rect x="779.5" y="837" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="782.49" y="847.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;, false&gt;::~_Head_base (934,712 samples, 0.10%)</title><rect x="776.5" y="453" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="779.47" y="463.5" ></text>
</g>
<g >
<title>int* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int const, int&gt; (162,673 samples, 0.02%)</title><rect x="531.3" y="261" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="534.29" y="271.5" ></text>
</g>
<g >
<title>[libm.so.6] (276,808 samples, 0.03%)</title><rect x="750.0" y="533" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="753.05" y="543.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, std::_Bind&lt;void  (888,830,008 samples, 91.65%)</title><rect x="43.3" y="661" width="714.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="46.31" y="671.5" >std::enable_if&lt;is_invocable_r_v&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp;&gt; (1,116,674 samples, 0.12%)</title><rect x="645.9" y="437" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="648.94" y="447.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::GetSpectrumModel (1,991,247 samples, 0.21%)</title><rect x="54.5" y="501" width="1.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="57.51" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned char, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::begin (434,661 samples, 0.04%)</title><rect x="193.8" y="485" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="196.82" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_S_relocate (371,811 samples, 0.04%)</title><rect x="202.9" y="453" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="205.89" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Ptr (292,715 samples, 0.03%)</title><rect x="558.9" y="229" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="561.92" y="239.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::SbMeasResult_s (154,721 samples, 0.02%)</title><rect x="461.6" y="245" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="464.55" y="255.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; &gt; (5,646,301 samples, 0.58%)</title><rect x="257.8" y="501" width="4.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="260.82" y="511.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::TagBuffer (206,219 samples, 0.02%)</title><rect x="13.1" y="373" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="16.10" y="383.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::SimpleRefCount (141,410 samples, 0.01%)</title><rect x="421.0" y="309" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="424.03" y="319.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (415,834 samples, 0.04%)</title><rect x="15.5" y="485" width="0.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="18.45" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::Packet&gt;, ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (247,590 samples, 0.03%)</title><rect x="564.2" y="133" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="567.20" y="143.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::EndRxUlSrs (363,240 samples, 0.04%)</title><rect x="611.9" y="565" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="614.94" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (156,263 samples, 0.02%)</title><rect x="248.8" y="469" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="251.84" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,016,178 samples, 0.10%)</title><rect x="635.0" y="341" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="637.98" y="351.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__is_bitwise_relocatable&lt;unsigned short, void&gt;::value, unsigned short*&gt;::type std::__relocate_a_1&lt;unsigned short, unsigned short&gt; (126,646 samples, 0.01%)</title><rect x="481.2" y="229" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="484.24" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_S_relocate (319,205 samples, 0.03%)</title><rect x="209.9" y="453" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="212.91" y="463.5" ></text>
</g>
<g >
<title>double* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (210,427 samples, 0.02%)</title><rect x="78.3" y="453" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="81.29" y="463.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ObjectBase (178,001 samples, 0.02%)</title><rect x="161.3" y="389" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="164.34" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (917,334 samples, 0.09%)</title><rect x="706.4" y="421" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="709.45" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_fill_insert (4,584,091 samples, 0.47%)</title><rect x="197.2" y="453" width="3.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="200.22" y="463.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,432,154 samples, 0.15%)</title><rect x="10.0" y="821" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (1,296,666 samples, 0.13%)</title><rect x="652.6" y="357" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="655.64" y="367.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ConstructSelf (2,205,090 samples, 0.23%)</title><rect x="33.3" y="437" width="1.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="36.34" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator-- (189,133 samples, 0.02%)</title><rect x="336.1" y="373" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="339.08" y="383.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetMacPdu (539,148 samples, 0.06%)</title><rect x="19.9" y="325" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="22.86" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::at (165,094 samples, 0.02%)</title><rect x="598.8" y="277" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="601.76" y="287.5" ></text>
</g>
<g >
<title>ns3::UeSelected_s::operator= (127,305 samples, 0.01%)</title><rect x="593.2" y="277" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="596.21" y="287.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Create (266,992 samples, 0.03%)</title><rect x="19.1" y="357" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="22.11" y="367.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ConstructSelf (185,707 samples, 0.02%)</title><rect x="119.4" y="469" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="122.44" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt; (1,129,994 samples, 0.12%)</title><rect x="503.1" y="501" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="506.11" y="511.5" ></text>
</g>
<g >
<title>[libm.so.6] (283,669 samples, 0.03%)</title><rect x="309.8" y="469" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="312.79" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::Ptr (126,810 samples, 0.01%)</title><rect x="74.9" y="517" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="77.92" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Acquire (196,949 samples, 0.02%)</title><rect x="319.1" y="277" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="322.11" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (1,328,190 samples, 0.14%)</title><rect x="675.5" y="469" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="678.51" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::push_back (234,373 samples, 0.02%)</title><rect x="17.4" y="325" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="20.39" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (162,616 samples, 0.02%)</title><rect x="457.7" y="229" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="460.72" y="239.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::SbMeasResult_s (1,765,679 samples, 0.18%)</title><rect x="124.7" y="389" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="127.68" y="399.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::LteEnbMac&gt;::ReportBufferStatus (3,928,142 samples, 0.41%)</title><rect x="24.3" y="373" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="27.28" y="383.5" ></text>
</g>
<g >
<title>pow (353,785 samples, 0.04%)</title><rect x="750.0" y="549" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="752.99" y="559.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_construct_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (395,726 samples, 0.04%)</title><rect x="331.8" y="421" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="334.79" y="431.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (238,535 samples, 0.02%)</title><rect x="153.2" y="357" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="156.17" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (141,816 samples, 0.01%)</title><rect x="718.1" y="469" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="721.15" y="479.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt;::operator (699,741 samples, 0.07%)</title><rect x="328.0" y="501" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="331.00" y="511.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetControlMessages[abi:cxx11] (5,917,079 samples, 0.61%)</title><rect x="619.2" y="549" width="4.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="622.18" y="559.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; const&amp;&gt; (2,931,196 samples, 0.30%)</title><rect x="238.0" y="341" width="2.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="240.96" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::push_back (155,710 samples, 0.02%)</title><rect x="101.9" y="469" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="104.86" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*&gt; (416,767 samples, 0.04%)</title><rect x="106.8" y="437" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="109.77" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (158,753 samples, 0.02%)</title><rect x="17.0" y="389" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="19.99" y="399.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::~CqiListElement_s (154,796 samples, 0.02%)</title><rect x="131.1" y="405" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="134.12" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::_M_begin (318,309 samples, 0.03%)</title><rect x="172.2" y="421" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="175.25" y="431.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;int*, int&gt; (161,562 samples, 0.02%)</title><rect x="575.3" y="341" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="578.30" y="351.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (1,860,884 samples, 0.19%)</title><rect x="259.1" y="325" width="1.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="262.11" y="335.5" ></text>
</g>
<g >
<title>ns3::Packet::~Packet (734,989 samples, 0.08%)</title><rect x="76.1" y="245" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="79.08" y="255.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (325,363 samples, 0.03%)</title><rect x="87.4" y="469" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="90.36" y="479.5" ></text>
</g>
<g >
<title>decltype  (240,418 samples, 0.02%)</title><rect x="611.3" y="453" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="614.35" y="463.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_insert&lt;ns3::UlDciLteControlMessage const&amp;&gt; (1,786,879 samples, 0.18%)</title><rect x="287.1" y="485" width="1.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="290.08" y="495.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (455,698 samples, 0.05%)</title><rect x="677.6" y="421" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="680.60" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;::_M_ptr (349,350 samples, 0.04%)</title><rect x="224.2" y="405" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="227.20" y="415.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::MakeEvent&lt;&gt; (238,924 samples, 0.02%)</title><rect x="36.6" y="661" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="39.64" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_lower_bound (420,439 samples, 0.04%)</title><rect x="73.7" y="469" width="0.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="76.75" y="479.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*&gt; (728,775 samples, 0.08%)</title><rect x="253.1" y="405" width="0.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="256.06" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_impl_data::_Vector_impl_data (157,537 samples, 0.02%)</title><rect x="130.9" y="453" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="133.91" y="463.5" ></text>
</g>
<g >
<title>ns3::LteAmc::GetMcsFromCqi (233,362 samples, 0.02%)</title><rect x="175.3" y="485" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="178.30" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; (188,301 samples, 0.02%)</title><rect x="381.7" y="485" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="384.72" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider::ReportBufferStatusParameters, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::end (158,274 samples, 0.02%)</title><rect x="569.7" y="325" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="572.66" y="335.5" ></text>
</g>
<g >
<title>ns3::Singleton&lt;ns3::IidManager&gt;::Get (145,954 samples, 0.02%)</title><rect x="373.8" y="453" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="376.77" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,985,670 samples, 0.20%)</title><rect x="465.1" y="517" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="468.11" y="527.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;3ul, std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; &gt;::type&amp; std::get&lt;3ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (236,255 samples, 0.02%)</title><rect x="756.9" y="597" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="759.93" y="607.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;unsigned short*&gt;::move_iterator (197,587 samples, 0.02%)</title><rect x="252.9" y="421" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="255.87" y="431.5" ></text>
</g>
<g >
<title>ns3::Object::Dispose (238,924 samples, 0.02%)</title><rect x="36.6" y="533" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="39.64" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (2,388,285 samples, 0.25%)</title><rect x="660.9" y="421" width="1.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="663.86" y="431.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (2,358,952 samples, 0.24%)</title><rect x="706.2" y="485" width="1.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="709.16" y="495.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (304,289 samples, 0.03%)</title><rect x="15.5" y="437" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="18.45" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider::ReportBufferStatusParameters, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::end (393,274 samples, 0.04%)</title><rect x="690.5" y="501" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="693.46" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::pfsFlowPerf_t, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::find (1,750,862 samples, 0.18%)</title><rect x="235.3" y="485" width="1.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="238.26" y="495.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::operator++ (196,897 samples, 0.02%)</title><rect x="628.5" y="517" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="631.50" y="527.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (217,399 samples, 0.02%)</title><rect x="367.5" y="517" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="370.52" y="527.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a2&lt;false, double const*, double*&gt; (125,420 samples, 0.01%)</title><rect x="72.4" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="75.44" y="367.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*&gt; (1,085,784 samples, 0.11%)</title><rect x="92.1" y="437" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="95.06" y="447.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (126,870 samples, 0.01%)</title><rect x="587.3" y="277" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="590.30" y="287.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt;, std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt;, 1ul, 3ul&gt;::__eq (1,304,506 samples, 0.13%)</title><rect x="747.4" y="485" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="750.40" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (310,760 samples, 0.03%)</title><rect x="524.1" y="293" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="527.11" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (1,339,418 samples, 0.14%)</title><rect x="433.6" y="293" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="436.58" y="303.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (1,991,119 samples, 0.21%)</title><rect x="501.3" y="517" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="504.32" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::begin (154,700 samples, 0.02%)</title><rect x="257.3" y="501" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="260.32" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::operator* (264,202 samples, 0.03%)</title><rect x="135.2" y="485" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="138.23" y="495.5" ></text>
</g>
<g >
<title> (234,452 samples, 0.02%)</title><rect x="297.6" y="453" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="300.59" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::~tuple (1,016,655 samples, 0.10%)</title><rect x="772.7" y="565" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="775.74" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::begin (414,271 samples, 0.04%)</title><rect x="657.6" y="501" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="660.61" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr (199,678 samples, 0.02%)</title><rect x="150.5" y="437" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="153.54" y="447.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::~MacCeValue_u (457,826 samples, 0.05%)</title><rect x="688.2" y="485" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="691.25" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt;::~vector (156,611 samples, 0.02%)</title><rect x="139.5" y="469" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="142.47" y="479.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (496,911 samples, 0.05%)</title><rect x="63.9" y="469" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="66.94" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::AntennaModel&gt;::Acquire (155,047 samples, 0.02%)</title><rect x="342.4" y="501" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="345.44" y="511.5" ></text>
</g>
<g >
<title>ns3::Packet::RemovePacketTag (1,745,173 samples, 0.18%)</title><rect x="430.3" y="325" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="433.25" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocate (169,207 samples, 0.02%)</title><rect x="574.6" y="277" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="577.55" y="287.5" ></text>
</g>
<g >
<title>[libm.so.6] (303,230 samples, 0.03%)</title><rect x="641.9" y="469" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="644.89" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::max_size (250,041 samples, 0.03%)</title><rect x="597.4" y="229" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="600.39" y="239.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (319,694 samples, 0.03%)</title><rect x="727.6" y="437" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="730.59" y="447.5" ></text>
</g>
<g >
<title> (164,113 samples, 0.02%)</title><rect x="70.7" y="453" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="73.69" y="463.5" ></text>
</g>
<g >
<title>ns3::CeBitmap_e* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CeBitmap_e const*, std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt; &gt;, ns3::CeBitmap_e*&gt; (414,390 samples, 0.04%)</title><rect x="203.9" y="357" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="206.90" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (1,354,660 samples, 0.14%)</title><rect x="324.8" y="469" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="327.79" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt; &gt; &gt;::operator (126,576 samples, 0.01%)</title><rect x="552.3" y="213" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="555.26" y="223.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Ptr (156,463 samples, 0.02%)</title><rect x="388.7" y="549" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="391.69" y="559.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (4,891,359 samples, 0.50%)</title><rect x="615.2" y="549" width="3.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="618.19" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (5,666,405 samples, 0.58%)</title><rect x="377.0" y="437" width="4.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="380.00" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_begin (155,598 samples, 0.02%)</title><rect x="455.6" y="277" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="458.59" y="287.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (127,422 samples, 0.01%)</title><rect x="61.4" y="469" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="64.37" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::RarLteControlMessage&gt;::~Ptr (538,741 samples, 0.06%)</title><rect x="167.0" y="453" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="170.03" y="463.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (1,912,352 samples, 0.20%)</title><rect x="555.7" y="229" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="558.70" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (330,607 samples, 0.03%)</title><rect x="531.2" y="309" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="534.19" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_mbegin (234,522 samples, 0.02%)</title><rect x="273.5" y="421" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="276.49" y="431.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (1,650,854 samples, 0.17%)</title><rect x="15.8" y="469" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="18.79" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (164,095 samples, 0.02%)</title><rect x="597.6" y="229" width="0.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="600.59" y="239.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::~PacketMetadata (559,336 samples, 0.06%)</title><rect x="453.1" y="101" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="456.12" y="111.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedUlTriggerReq (34,464,006 samples, 3.55%)</title><rect x="226.2" y="517" width="27.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="229.18" y="527.5" >n..</text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_check_len (545,573 samples, 0.06%)</title><rect x="215.1" y="437" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="218.10" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (277,205 samples, 0.03%)</title><rect x="140.1" y="469" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="143.05" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned int&gt;::operator (177,845 samples, 0.02%)</title><rect x="322.3" y="437" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="325.26" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt;::~pair (307,118 samples, 0.03%)</title><rect x="530.2" y="341" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="533.21" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt;::size (284,337 samples, 0.03%)</title><rect x="205.5" y="453" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="208.50" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (292,063 samples, 0.03%)</title><rect x="728.3" y="421" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="731.32" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (164,996 samples, 0.02%)</title><rect x="88.0" y="485" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="90.95" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumValue const&gt;&amp;, unsigned int&amp;, void&gt; (939,853 samples, 0.10%)</title><rect x="709.5" y="405" width="0.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="712.45" y="415.5" ></text>
</g>
<g >
<title>ns3::Object::SetTypeId (389,266 samples, 0.04%)</title><rect x="450.4" y="277" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="453.37" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::end (191,913 samples, 0.02%)</title><rect x="291.6" y="501" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="294.65" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Acquire (156,296 samples, 0.02%)</title><rect x="402.3" y="485" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="405.27" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::vector (485,819 samples, 0.05%)</title><rect x="510.0" y="517" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="512.98" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::list (496,879 samples, 0.05%)</title><rect x="162.4" y="405" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="165.36" y="415.5" ></text>
</g>
<g >
<title>decltype  (274,733 samples, 0.03%)</title><rect x="23.2" y="277" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="26.25" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::clear (2,281,160 samples, 0.24%)</title><rect x="505.0" y="549" width="1.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="507.98" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_S_check_init_len (245,728 samples, 0.03%)</title><rect x="404.5" y="469" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="407.54" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::erase[abi:cxx11] (7,110,876 samples, 0.73%)</title><rect x="762.3" y="709" width="5.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="765.27" y="719.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (192,930 samples, 0.02%)</title><rect x="112.5" y="485" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="115.51" y="495.5" ></text>
</g>
<g >
<title>ns3::LteUeMac::RefreshHarqProcessesPacketBuffer (953,324 samples, 0.10%)</title><rect x="684.5" y="517" width="0.8" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="687.49" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (126,483 samples, 0.01%)</title><rect x="606.9" y="437" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="609.92" y="447.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::MibLteControlMessage&gt;&amp;&gt; (190,229 samples, 0.02%)</title><rect x="122.3" y="533" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="125.33" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::emplace_hint&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (1,502,471 samples, 0.15%)</title><rect x="658.4" y="501" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="661.36" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::MibLteControlMessage&gt;&amp;&gt; (190,229 samples, 0.02%)</title><rect x="122.3" y="549" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="125.33" y="559.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (2,016,394 samples, 0.21%)</title><rect x="340.0" y="485" width="1.6" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="342.96" y="495.5" ></text>
</g>
<g >
<title>void std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__assign_one&lt;ns3::DlInfoListElement_s::HarqStatus_e, ns3::DlInfoListElement_s::HarqStatus_e const&gt; (390,278 samples, 0.04%)</title><rect x="260.2" y="245" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="263.20" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_create_storage (329,313 samples, 0.03%)</title><rect x="583.9" y="229" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="586.86" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (191,802 samples, 0.02%)</title><rect x="344.3" y="437" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="347.27" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::deallocate (124,394 samples, 0.01%)</title><rect x="776.2" y="325" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="779.16" y="335.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Allocate (1,800,803 samples, 0.19%)</title><rect x="29.5" y="389" width="1.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="32.50" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_List_impl::_List_impl (831,229 samples, 0.09%)</title><rect x="285.4" y="501" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="288.43" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::tuple&lt;ns3::LteEnbPhy*&amp;, ns3::Ptr&lt;ns3::PacketBurst&gt;&amp;, true&gt; (929,346 samples, 0.10%)</title><rect x="282.0" y="469" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="285.01" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::~_Tuple_impl (448,944 samples, 0.05%)</title><rect x="708.4" y="437" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="711.43" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Rb_tree (400,356 samples, 0.04%)</title><rect x="232.5" y="453" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="235.50" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;ns3::DlInfoListElement_s&gt;::allocate (265,191 samples, 0.03%)</title><rect x="262.0" y="437" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="265.02" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteSpectrumPhy*&gt;::tuple (285,575 samples, 0.03%)</title><rect x="64.1" y="421" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="67.11" y="431.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlTriggerReqParameters::~SchedDlTriggerReqParameters (1,122,238 samples, 0.12%)</title><rect x="132.2" y="517" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="135.24" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator* (316,524 samples, 0.03%)</title><rect x="272.8" y="469" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="275.83" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::_M_mbegin (159,315 samples, 0.02%)</title><rect x="172.4" y="405" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="175.37" y="415.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (415,834 samples, 0.04%)</title><rect x="15.5" y="549" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="18.45" y="559.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (28,232,039 samples, 2.91%)</title><rect x="441.2" y="485" width="22.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="444.23" y="495.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_lower_bound (1,144,795 samples, 0.12%)</title><rect x="168.4" y="421" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="171.38" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (143,473 samples, 0.01%)</title><rect x="120.3" y="501" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="123.30" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (782,663 samples, 0.08%)</title><rect x="667.3" y="421" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="670.32" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::_M_erase (1,544,641 samples, 0.16%)</title><rect x="356.9" y="517" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="359.94" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::_M_valptr (234,452 samples, 0.02%)</title><rect x="297.6" y="437" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="300.59" y="447.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (4,972,136 samples, 0.51%)</title><rect x="11.4" y="437" width="4.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="14.43" y="447.5" ></text>
</g>
<g >
<title>ns3::EnbMemberLteEnbPhySapProvider::SendMacPdu (783,721 samples, 0.08%)</title><rect x="19.7" y="357" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="22.70" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (1,203,918 samples, 0.12%)</title><rect x="136.8" y="485" width="0.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="139.78" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (154,775 samples, 0.02%)</title><rect x="366.2" y="421" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="369.23" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (3,285,580 samples, 0.34%)</title><rect x="451.3" y="229" width="2.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="454.28" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (775,418 samples, 0.08%)</title><rect x="442.0" y="309" width="0.6" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="444.97" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Ptr (395,681 samples, 0.04%)</title><rect x="625.0" y="485" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="628.02" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_byte&lt;unsigned char&gt;::__value, void&gt;::__type std::__fill_a1&lt;unsigned char&gt; (464,806 samples, 0.05%)</title><rect x="460.6" y="149" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="463.56" y="159.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (262,214 samples, 0.03%)</title><rect x="634.7" y="357" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="637.67" y="367.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator/= (127,965 samples, 0.01%)</title><rect x="601.3" y="325" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="604.34" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::Acquire (282,880 samples, 0.03%)</title><rect x="345.6" y="485" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="348.62" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator (236,363 samples, 0.02%)</title><rect x="375.3" y="533" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="378.34" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (4,562,243 samples, 0.47%)</title><rect x="773.6" y="533" width="3.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="776.56" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::_M_check_len (366,216 samples, 0.04%)</title><rect x="130.1" y="485" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="133.09" y="495.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt;::operator (284,159 samples, 0.03%)</title><rect x="90.4" y="533" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="93.38" y="543.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl&amp;&gt;::type&amp;&amp; std::move&lt;std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl&amp;&gt; (130,561 samples, 0.01%)</title><rect x="596.0" y="101" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="598.96" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_S_key (474,607 samples, 0.05%)</title><rect x="465.7" y="485" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="468.74" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::_M_erase (208,683 samples, 0.02%)</title><rect x="532.5" y="325" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="535.46" y="335.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_List_iterator (190,641 samples, 0.02%)</title><rect x="362.1" y="469" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="365.15" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;&gt; (163,911 samples, 0.02%)</title><rect x="87.5" y="341" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="90.46" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (206,637 samples, 0.02%)</title><rect x="87.4" y="405" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="90.42" y="415.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (470,391 samples, 0.05%)</title><rect x="717.5" y="485" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="720.55" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, double&gt; &gt; std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;int, double&gt; &gt; (1,269,252 samples, 0.13%)</title><rect x="293.1" y="501" width="1.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="296.09" y="511.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;2ul, std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; &gt;::type&amp; std::get&lt;2ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (473,819 samples, 0.05%)</title><rect x="756.5" y="597" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="759.55" y="607.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (292,785 samples, 0.03%)</title><rect x="584.9" y="197" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="587.88" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (167,250 samples, 0.02%)</title><rect x="605.4" y="485" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="608.40" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;::_M_ptr (151,492 samples, 0.02%)</title><rect x="182.0" y="389" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="185.02" y="399.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (3,267,652 samples, 0.34%)</title><rect x="378.7" y="357" width="2.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="381.69" y="367.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::HigherLayerSelected_s const*, ns3::HigherLayerSelected_s*&gt; (193,644 samples, 0.02%)</title><rect x="134.9" y="389" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="137.86" y="399.5" ></text>
</g>
<g >
<title>ns3::Time::ToDouble (693,056 samples, 0.07%)</title><rect x="605.6" y="501" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="608.57" y="511.5" ></text>
</g>
<g >
<title>int&amp; std::forward&lt;int&amp;&gt; (154,940 samples, 0.02%)</title><rect x="296.3" y="517" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="299.29" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (158,373 samples, 0.02%)</title><rect x="203.4" y="389" width="0.1" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="206.35" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned short&gt;::_M_ptr (275,914 samples, 0.03%)</title><rect x="395.6" y="469" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="398.59" y="479.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::tbInfo_t (509,350 samples, 0.05%)</title><rect x="384.9" y="389" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="387.91" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_erase (1,924,737 samples, 0.20%)</title><rect x="505.1" y="517" width="1.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="508.14" y="527.5" ></text>
</g>
<g >
<title>unsigned long* std::__copy_move_a&lt;false, unsigned long*, unsigned long*&gt; (190,049 samples, 0.02%)</title><rect x="248.3" y="405" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="251.33" y="415.5" ></text>
</g>
<g >
<title>ns3::LteUeMac::DoSubframeIndication (16,576,198 samples, 1.71%)</title><rect x="684.3" y="533" width="13.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="687.33" y="543.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, ns3::DlInfoListElement_s&gt;::Callback&lt;void  (3,542,887 samples, 0.37%)</title><rect x="418.5" y="453" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="421.54" y="463.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (229,110 samples, 0.02%)</title><rect x="477.6" y="309" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="480.60" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::~Ptr (390,370 samples, 0.04%)</title><rect x="39.7" y="709" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="42.74" y="719.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (458,200 samples, 0.05%)</title><rect x="119.8" y="421" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="122.80" y="431.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::~CqiListElement_s (377,731 samples, 0.04%)</title><rect x="106.8" y="373" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="109.80" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::clear (355,870 samples, 0.04%)</title><rect x="172.2" y="437" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="175.25" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (725,002 samples, 0.07%)</title><rect x="241.8" y="453" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="244.78" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::find (1,345,383 samples, 0.14%)</title><rect x="569.9" y="309" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="572.92" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;ns3::MakeEvent&lt;&gt; (238,924 samples, 0.02%)</title><rect x="36.6" y="677" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="39.64" y="687.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (161,302 samples, 0.02%)</title><rect x="368.9" y="501" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="371.86" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_valptr (352,479 samples, 0.04%)</title><rect x="496.9" y="533" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="499.86" y="543.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::DlDciListElement_s (500,791 samples, 0.05%)</title><rect x="203.3" y="405" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="206.32" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_Vector_base (447,425 samples, 0.05%)</title><rect x="695.0" y="485" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="698.01" y="495.5" ></text>
</g>
<g >
<title>operator delete[] (204,130 samples, 0.02%)</title><rect x="548.7" y="69" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="551.68" y="79.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (1,750,547 samples, 0.18%)</title><rect x="662.9" y="437" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="665.93" y="447.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a1&lt;false, unsigned char const*, unsigned char*&gt; (185,651 samples, 0.02%)</title><rect x="127.2" y="293" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="130.15" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt;::pair&lt;ns3::TbId_t&amp;, ns3::tbInfo_t&amp;&gt; (217,947 samples, 0.02%)</title><rect x="387.2" y="533" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="390.24" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (507,555 samples, 0.05%)</title><rect x="719.2" y="437" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="722.22" y="447.5" ></text>
</g>
<g >
<title>unsigned int const&amp; std::max&lt;unsigned int&gt; (238,645 samples, 0.02%)</title><rect x="547.7" y="85" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="550.73" y="95.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (495,883 samples, 0.05%)</title><rect x="245.9" y="485" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="248.88" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::vector (350,110 samples, 0.04%)</title><rect x="629.5" y="485" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="632.51" y="495.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, ns3::DlInfoListElement_s&gt;::operator (4,219,650 samples, 0.44%)</title><rect x="418.0" y="533" width="3.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="421.00" y="543.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (1,227,522 samples, 0.13%)</title><rect x="526.6" y="261" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="529.62" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (324,769 samples, 0.03%)</title><rect x="611.9" y="405" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="614.94" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_M_ptr (192,658 samples, 0.02%)</title><rect x="733.8" y="405" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="736.76" y="415.5" ></text>
</g>
<g >
<title>ns3::Buffer::Recycle (663,612 samples, 0.07%)</title><rect x="452.0" y="85" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="455.02" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (704,923 samples, 0.07%)</title><rect x="233.1" y="421" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="236.11" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_insert (391,675 samples, 0.04%)</title><rect x="271.5" y="437" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="274.55" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocate (127,251 samples, 0.01%)</title><rect x="573.4" y="309" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="576.38" y="319.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s::HigherLayerSelected_s (323,441 samples, 0.03%)</title><rect x="596.3" y="229" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="599.30" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;::_M_addr (155,689 samples, 0.02%)</title><rect x="184.0" y="437" width="0.1" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="187.01" y="447.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*&gt; (411,592 samples, 0.04%)</title><rect x="107.3" y="421" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="110.29" y="431.5" ></text>
</g>
<g >
<title>decltype  (240,540 samples, 0.02%)</title><rect x="83.3" y="341" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.31" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;::_M_valptr (221,148 samples, 0.02%)</title><rect x="650.6" y="437" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="653.60" y="447.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (411,266 samples, 0.04%)</title><rect x="87.6" y="453" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="90.62" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (299,849 samples, 0.03%)</title><rect x="105.1" y="453" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="108.07" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::operator= (572,810 samples, 0.06%)</title><rect x="64.5" y="517" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="67.47" y="527.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (128,525 samples, 0.01%)</title><rect x="90.0" y="501" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="93.02" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::Add (190,338 samples, 0.02%)</title><rect x="17.2" y="325" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="20.23" y="335.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt;::operator (312,772 samples, 0.03%)</title><rect x="656.5" y="517" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="659.52" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; (6,507,760 samples, 0.67%)</title><rect x="376.6" y="501" width="5.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="379.63" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::at (645,472 samples, 0.07%)</title><rect x="488.3" y="517" width="0.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="491.33" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_key_compare&lt;std::less&lt;unsigned short&gt; &gt;::_Rb_tree_key_compare (234,753 samples, 0.02%)</title><rect x="509.2" y="501" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="512.22" y="511.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (1,438,361 samples, 0.15%)</title><rect x="732.9" y="453" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="735.88" y="463.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::copy&lt;std::move_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (267,517 samples, 0.03%)</title><rect x="511.4" y="453" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="514.40" y="463.5" ></text>
</g>
<g >
<title>ns3::UniformRandomVariable::GetValue (789,202 samples, 0.08%)</title><rect x="495.3" y="533" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="498.29" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::clear (265,487 samples, 0.03%)</title><rect x="622.2" y="389" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="625.22" y="399.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::MacCeValue_u (858,457 samples, 0.09%)</title><rect x="441.9" y="325" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="444.90" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (216,051 samples, 0.02%)</title><rect x="697.8" y="533" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="700.79" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (2,140,117 samples, 0.22%)</title><rect x="162.2" y="437" width="1.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="165.24" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (154,782 samples, 0.02%)</title><rect x="164.5" y="373" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="167.51" y="383.5" ></text>
</g>
<g >
<title> (124,340 samples, 0.01%)</title><rect x="457.9" y="261" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="460.85" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (241,102 samples, 0.02%)</title><rect x="717.7" y="437" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="720.73" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::_S_relocate (199,707 samples, 0.02%)</title><rect x="211.5" y="453" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="214.55" y="463.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::HarqProcessInfoElement_t const, ns3::HarqProcessInfoElement_t&gt; (368,034 samples, 0.04%)</title><rect x="513.2" y="421" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="516.18" y="431.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s&gt; (933,761 samples, 0.10%)</title><rect x="255.0" y="421" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="257.97" y="431.5" ></text>
</g>
<g >
<title>ns3::LteInterference::EndRx (23,269,983 samples, 2.40%)</title><rect x="466.9" y="549" width="18.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="469.86" y="559.5" ></text>
</g>
<g >
<title>void std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (336,155 samples, 0.03%)</title><rect x="591.2" y="261" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="594.19" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt; &gt; &gt;::allocate (199,176 samples, 0.02%)</title><rect x="293.2" y="437" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="296.16" y="447.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (392,749 samples, 0.04%)</title><rect x="716.7" y="453" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="719.67" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (231,712 samples, 0.02%)</title><rect x="103.9" y="421" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="106.93" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_S_key (429,986 samples, 0.04%)</title><rect x="57.9" y="453" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="60.90" y="463.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartTxDlCtrlFrame (52,866,048 samples, 5.45%)</title><rect x="304.5" y="533" width="42.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="307.51" y="543.5" >ns3:..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (263,413 samples, 0.03%)</title><rect x="121.9" y="533" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="124.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::end (149,904 samples, 0.02%)</title><rect x="322.4" y="453" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="325.44" y="463.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*, ns3::RlcPduListElement_s&gt; (1,020,771 samples, 0.11%)</title><rect x="211.8" y="405" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="214.81" y="415.5" ></text>
</g>
<g >
<title> (353,348 samples, 0.04%)</title><rect x="717.2" y="485" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="720.23" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::_M_valptr (415,198 samples, 0.04%)</title><rect x="328.8" y="469" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="331.78" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Acquire (195,822 samples, 0.02%)</title><rect x="305.5" y="453" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="308.50" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, unsigned short, double&gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, unsigned short, double&gt; &gt; &gt;::begin (274,474 samples, 0.03%)</title><rect x="682.1" y="517" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="685.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::_S_key (775,617 samples, 0.08%)</title><rect x="158.1" y="357" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="161.11" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::Ptr (359,569 samples, 0.04%)</title><rect x="345.6" y="501" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="348.56" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt;::at (514,866 samples, 0.05%)</title><rect x="205.3" y="485" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="208.32" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1,733,420 samples, 0.18%)</title><rect x="708.8" y="453" width="1.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="711.85" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (152,703 samples, 0.02%)</title><rect x="481.5" y="309" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="484.49" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (307,652 samples, 0.03%)</title><rect x="114.0" y="373" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="117.02" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (19,740,362 samples, 2.04%)</title><rect x="467.9" y="469" width="15.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="470.90" y="479.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (4,972,136 samples, 0.51%)</title><rect x="11.4" y="453" width="4.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="14.43" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (512,892 samples, 0.05%)</title><rect x="717.5" y="501" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="720.51" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::at (139,701 samples, 0.01%)</title><rect x="464.7" y="533" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="467.70" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::_M_begin (234,350 samples, 0.02%)</title><rect x="570.0" y="293" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="572.98" y="303.5" ></text>
</g>
<g >
<title>std::operator== (210,233 samples, 0.02%)</title><rect x="80.2" y="501" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="83.24" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_base (420,986 samples, 0.04%)</title><rect x="447.0" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="449.99" y="255.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (456,050 samples, 0.05%)</title><rect x="238.7" y="213" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="241.66" y="223.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (1,191,133 samples, 0.12%)</title><rect x="75.7" y="309" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="78.74" y="319.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::destroy&lt;ns3::ByteTagListData*&gt; (350,982 samples, 0.04%)</title><rect x="30.7" y="357" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="33.67" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::end (207,421 samples, 0.02%)</title><rect x="482.0" y="309" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="485.03" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::empty (455,493 samples, 0.05%)</title><rect x="554.0" y="213" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="556.98" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::begin (189,841 samples, 0.02%)</title><rect x="679.5" y="501" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="682.51" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::__normal_iterator (229,352 samples, 0.02%)</title><rect x="687.5" y="437" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="690.51" y="447.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::operator (538,849 samples, 0.06%)</title><rect x="679.4" y="517" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="682.35" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_get_node (655,781 samples, 0.07%)</title><rect x="563.7" y="133" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="566.67" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_insert_node (196,868 samples, 0.02%)</title><rect x="293.5" y="469" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="296.53" y="479.5" ></text>
</g>
<g >
<title>double* std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (165,918 samples, 0.02%)</title><rect x="78.3" y="421" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="81.32" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy (4,538,330 samples, 0.47%)</title><rect x="236.8" y="453" width="3.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="239.76" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (347,372 samples, 0.04%)</title><rect x="104.5" y="405" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="107.52" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;, false&gt;::~_Head_base (220,721 samples, 0.02%)</title><rect x="666.3" y="341" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="669.34" y="351.5" ></text>
</g>
<g >
<title>unsigned short* std::__relocate_a&lt;unsigned short*, unsigned short*, std::allocator&lt;unsigned short&gt; &gt; (196,177 samples, 0.02%)</title><rect x="219.7" y="421" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="222.69" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_S_key (400,281 samples, 0.04%)</title><rect x="221.8" y="437" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="224.77" y="447.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (530,447 samples, 0.05%)</title><rect x="611.1" y="485" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="614.12" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::~_Tuple_impl (370,840 samples, 0.04%)</title><rect x="708.5" y="421" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="711.49" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::allocate (163,549 samples, 0.02%)</title><rect x="706.5" y="357" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="709.48" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (1,336,082 samples, 0.14%)</title><rect x="567.7" y="293" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="570.69" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (182,893 samples, 0.02%)</title><rect x="634.7" y="325" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="637.70" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (228,584 samples, 0.02%)</title><rect x="689.4" y="437" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="692.42" y="447.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (1,698,311 samples, 0.18%)</title><rect x="615.3" y="533" width="1.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="618.27" y="543.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Deallocate (267,431 samples, 0.03%)</title><rect x="653.2" y="213" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="656.23" y="223.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Divide (414,550 samples, 0.04%)</title><rect x="414.0" y="517" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="416.97" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (152,827 samples, 0.02%)</title><rect x="667.8" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="670.83" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_S_key (552,579 samples, 0.06%)</title><rect x="180.5" y="421" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="183.46" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned int&gt;::deallocate (227,074 samples, 0.02%)</title><rect x="697.2" y="437" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="700.18" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_create_storage (578,790 samples, 0.06%)</title><rect x="520.0" y="309" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="522.96" y="319.5" ></text>
</g>
<g >
<title>ns3::BuildRarListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildRarListElement_s const*, std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt; &gt;, ns3::BuildRarListElement_s*, ns3::BuildRarListElement_s&gt; (278,330 samples, 0.03%)</title><rect x="143.1" y="437" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="146.10" y="447.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedDlConfigIndParameters::SchedDlConfigIndParameters (155,354 samples, 0.02%)</title><rect x="98.0" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="101.02" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::_M_range_check (426,031 samples, 0.04%)</title><rect x="525.6" y="325" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="528.63" y="335.5" ></text>
</g>
<g >
<title>[libm.so.6] (277,109 samples, 0.03%)</title><rect x="65.7" y="469" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="68.71" y="479.5" ></text>
</g>
<g >
<title>ns3::ByteTagIterator::HasNext (236,780 samples, 0.02%)</title><rect x="424.4" y="245" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="427.43" y="255.5" ></text>
</g>
<g >
<title>double&amp; std::_Mu&lt;double, false, false&gt;::operator (202,203 samples, 0.02%)</title><rect x="48.6" y="597" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="51.60" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (530,824 samples, 0.05%)</title><rect x="239.4" y="213" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="242.38" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (211,429 samples, 0.02%)</title><rect x="78.5" y="469" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="81.49" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::end (201,936 samples, 0.02%)</title><rect x="254.6" y="501" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="257.59" y="511.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (223,250 samples, 0.02%)</title><rect x="92.8" y="357" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="95.76" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt; &gt; &gt; &gt;::begin (204,131 samples, 0.02%)</title><rect x="552.7" y="213" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="555.65" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (637,679 samples, 0.07%)</title><rect x="60.6" y="469" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="63.59" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::emplace_hint&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (838,836 samples, 0.09%)</title><rect x="81.8" y="501" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="84.78" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::deallocate (163,066 samples, 0.02%)</title><rect x="773.3" y="373" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="776.33" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy (878,011 samples, 0.09%)</title><rect x="341.6" y="453" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="344.64" y="463.5" ></text>
</g>
<g >
<title>ns3::RlcTag::GetInstanceTypeId (313,712 samples, 0.03%)</title><rect x="427.2" y="245" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="430.18" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel&gt;&amp;&gt; (1,854,475 samples, 0.19%)</title><rect x="56.1" y="501" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="59.11" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_addr (124,878 samples, 0.01%)</title><rect x="429.1" y="229" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="432.09" y="239.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::LteSpectrumSignalParametersDataFrame (1,082,844 samples, 0.11%)</title><rect x="88.6" y="517" width="0.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="91.58" y="527.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (495,532 samples, 0.05%)</title><rect x="627.1" y="501" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="630.06" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::cbegin (384,549 samples, 0.04%)</title><rect x="382.4" y="517" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="385.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt; &gt;::find (162,761 samples, 0.02%)</title><rect x="601.2" y="293" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="604.21" y="303.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy*&amp; std::_Mu&lt;ns3::LteSpectrumPhy*, false, false&gt;::operator (199,187 samples, 0.02%)</title><rect x="49.4" y="597" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="52.39" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (193,644 samples, 0.02%)</title><rect x="134.9" y="357" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="137.86" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::operator* (379,355 samples, 0.04%)</title><rect x="156.9" y="405" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="159.90" y="415.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt; (156,731 samples, 0.02%)</title><rect x="211.4" y="405" width="0.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="214.36" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;ns3::DlInfoListElement_s&gt;::allocate (265,191 samples, 0.03%)</title><rect x="262.0" y="453" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="265.02" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::~_Rb_tree (763,268 samples, 0.08%)</title><rect x="60.6" y="501" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="63.55" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt;::end (267,288 samples, 0.03%)</title><rect x="204.5" y="389" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="207.45" y="399.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoSchedule (1,482,842 samples, 0.15%)</title><rect x="108.3" y="517" width="1.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="111.32" y="527.5" ></text>
</g>
<g >
<title>ns3::BufferSizeLevelBsr::BsrId2BufferSize (237,172 samples, 0.02%)</title><rect x="225.6" y="485" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="228.58" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;::_M_valptr (126,162 samples, 0.01%)</title><rect x="568.3" y="229" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="571.26" y="239.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (1,453,727 samples, 0.15%)</title><rect x="352.8" y="437" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="355.82" y="447.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ScheduleWithContext (7,958,779 samples, 0.82%)</title><rect x="333.6" y="469" width="6.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="336.55" y="479.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::UlInfoListElement_s&gt;::Callback&lt;void  (249,755 samples, 0.03%)</title><rect x="439.1" y="469" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="442.08" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (567,494 samples, 0.06%)</title><rect x="707.2" y="421" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="710.21" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::empty (712,405 samples, 0.07%)</title><rect x="777.8" y="725" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="780.78" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::operator+ (160,323 samples, 0.02%)</title><rect x="356.8" y="517" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="359.81" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::max_size (230,324 samples, 0.02%)</title><rect x="219.4" y="421" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="222.36" y="431.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;true&gt;::__destroy&lt;unsigned short*&gt; (155,477 samples, 0.02%)</title><rect x="473.1" y="229" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="476.13" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (631,882 samples, 0.07%)</title><rect x="78.2" y="485" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="81.22" y="495.5" ></text>
</g>
<g >
<title>ns3::Vector3D::GetLength (361,586 samples, 0.04%)</title><rect x="703.2" y="517" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="706.23" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumChannel&gt;::operator bool (155,807 samples, 0.02%)</title><rect x="671.0" y="533" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="673.96" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (467,457 samples, 0.05%)</title><rect x="612.9" y="469" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="615.88" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::erase (616,017 samples, 0.06%)</title><rect x="119.7" y="517" width="0.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="122.71" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::_M_range_check (190,527 samples, 0.02%)</title><rect x="150.0" y="389" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="152.97" y="399.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (239,679 samples, 0.02%)</title><rect x="62.4" y="469" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="65.40" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy (155,456 samples, 0.02%)</title><rect x="341.2" y="437" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="344.24" y="447.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::~_Bvector_base (545,023 samples, 0.06%)</title><rect x="201.9" y="469" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="204.88" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_ptr (396,644 samples, 0.04%)</title><rect x="22.4" y="277" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="25.44" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::~map (148,912 samples, 0.02%)</title><rect x="99.7" y="469" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="102.75" y="479.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a1&lt;false, unsigned char const*, unsigned char*&gt; (149,127 samples, 0.02%)</title><rect x="442.4" y="213" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="445.44" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;* std::__copy_move_a2&lt;true, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*&gt; (1,623,419 samples, 0.17%)</title><rect x="290.1" y="453" width="1.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="293.09" y="463.5" ></text>
</g>
<g >
<title>main (2,105,662 samples, 0.22%)</title><rect x="15.5" y="789" width="1.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="18.45" y="799.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (521,712 samples, 0.05%)</title><rect x="501.9" y="373" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="504.92" y="383.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoUlReceiveMacCe (4,513,254 samples, 0.47%)</title><rect x="457.4" y="293" width="3.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="460.37" y="303.5" ></text>
</g>
<g >
<title>ns3::UeSelected_s::operator= (241,903 samples, 0.02%)</title><rect x="585.5" y="245" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="588.46" y="255.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::RlfDetection (610,186 samples, 0.06%)</title><rect x="599.0" y="309" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="602.00" y="319.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (598,518 samples, 0.06%)</title><rect x="475.6" y="277" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="478.64" y="287.5" ></text>
</g>
<g >
<title>ns3::LteEnbRrc::GetUeManager (297,730 samples, 0.03%)</title><rect x="18.4" y="341" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="21.43" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::deallocate (163,066 samples, 0.02%)</title><rect x="773.3" y="357" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="776.33" y="367.5" ></text>
</g>
<g >
<title>ns3::Time::To (446,431 samples, 0.05%)</title><rect x="605.6" y="485" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="608.57" y="495.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Deallocate (675,876 samples, 0.07%)</title><rect x="452.6" y="85" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="455.58" y="95.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Deallocate (241,216 samples, 0.02%)</title><rect x="453.4" y="69" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="456.38" y="79.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::construct&lt;ns3::ByteTagListData*, ns3::ByteTagListData* const&amp;&gt; (320,897 samples, 0.03%)</title><rect x="452.8" y="53" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="455.80" y="63.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters* ns3::PeekPointer&lt;ns3::SpectrumSignalParameters&gt; (161,138 samples, 0.02%)</title><rect x="735.3" y="517" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="738.26" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (159,560 samples, 0.02%)</title><rect x="233.0" y="341" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="235.98" y="351.5" ></text>
</g>
<g >
<title>unsigned char* std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (330,967 samples, 0.03%)</title><rect x="584.9" y="213" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="587.85" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (157,700 samples, 0.02%)</title><rect x="387.8" y="485" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="390.82" y="495.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::CqiListElement_s, ns3::CqiListElement_s&amp;&gt; (968,712 samples, 0.10%)</title><rect x="92.2" y="405" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="95.16" y="415.5" ></text>
</g>
<g >
<title>ns3::Simulator::Run (922,121,412 samples, 95.09%)</title><rect x="36.8" y="773" width="741.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="39.84" y="783.5" >ns3::Simulator::Run</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_M_ptr (315,999 samples, 0.03%)</title><rect x="500.4" y="485" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="503.42" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move_a2&lt;true, ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (1,973,200 samples, 0.20%)</title><rect x="634.3" y="453" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="637.27" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::MultiModelSpectrumChannel*&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (206,637 samples, 0.02%)</title><rect x="87.4" y="421" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="90.42" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (162,839 samples, 0.02%)</title><rect x="606.9" y="453" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="609.89" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (1,461,013 samples, 0.15%)</title><rect x="83.0" y="437" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="85.99" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (155,513 samples, 0.02%)</title><rect x="134.6" y="421" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="137.58" y="431.5" ></text>
</g>
<g >
<title>ns3::Buffer::~Buffer (158,245 samples, 0.02%)</title><rect x="502.1" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="505.11" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::Ptr (302,852 samples, 0.03%)</title><rect x="303.9" y="517" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="306.92" y="527.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (5,067,937 samples, 0.52%)</title><rect x="377.3" y="405" width="4.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="380.33" y="415.5" ></text>
</g>
<g >
<title>ns3::SimpleUeComponentCarrierManager::DoReportBufferStatus (1,164,381 samples, 0.12%)</title><rect x="552.1" y="229" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="555.08" y="239.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~tuple (4,562,243 samples, 0.47%)</title><rect x="773.6" y="565" width="3.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="776.56" y="575.5" ></text>
</g>
<g >
<title>ns3::UlDciListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlDciListElement_s const*, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, ns3::UlDciListElement_s*&gt; (160,843 samples, 0.02%)</title><rect x="228.2" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="231.19" y="399.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::operator* (789,338 samples, 0.08%)</title><rect x="369.0" y="517" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="371.99" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (283,515 samples, 0.03%)</title><rect x="87.7" y="325" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="90.72" y="335.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_realloc_insert&lt;unsigned char&gt; (2,339,611 samples, 0.24%)</title><rect x="692.6" y="469" width="1.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="695.61" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::allocate (228,044 samples, 0.02%)</title><rect x="191.0" y="389" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="194.02" y="399.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Ref (161,738 samples, 0.02%)</title><rect x="277.9" y="469" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="280.93" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RachListElement_s, std::allocator&lt;ns3::RachListElement_s&gt; &gt;::_M_erase_at_end (156,259 samples, 0.02%)</title><rect x="208.8" y="469" width="0.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="211.81" y="479.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::~ByteTagList (713,131 samples, 0.07%)</title><rect x="452.5" y="101" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="455.55" y="111.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::DlInfoListElement_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::map (351,966 samples, 0.04%)</title><rect x="509.1" y="549" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="512.12" y="559.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetMacPdu (332,587 samples, 0.03%)</title><rect x="564.8" y="165" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="567.83" y="175.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::~map (270,414 samples, 0.03%)</title><rect x="341.4" y="469" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="344.36" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (2,857,108 samples, 0.29%)</title><rect x="334.1" y="405" width="2.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="337.06" y="415.5" ></text>
</g>
<g >
<title>ns3::LteUePhy*&amp; std::forward&lt;ns3::LteUePhy*&amp;&gt; (157,221 samples, 0.02%)</title><rect x="616.9" y="485" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="619.91" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_range_check (188,564 samples, 0.02%)</title><rect x="400.0" y="533" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="402.96" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::_M_lower_bound (601,671 samples, 0.06%)</title><rect x="137.1" y="453" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="140.12" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (155,130 samples, 0.02%)</title><rect x="213.0" y="389" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="216.00" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (275,599 samples, 0.03%)</title><rect x="442.4" y="229" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="445.37" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt;::_Vector_base (584,510 samples, 0.06%)</title><rect x="141.0" y="437" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="144.01" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::Copy (4,566,749 samples, 0.47%)</title><rect x="624.0" y="533" width="3.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="627.00" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;* std::__copy_move_a1&lt;true, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*&gt; (2,516,750 samples, 0.26%)</title><rect x="349.6" y="469" width="2.1" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="352.65" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::Unref (273,890 samples, 0.03%)</title><rect x="344.2" y="501" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="347.20" y="511.5" ></text>
</g>
<g >
<title>std::operator== (160,825 samples, 0.02%)</title><rect x="628.8" y="517" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="631.81" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::map (459,078 samples, 0.05%)</title><rect x="104.5" y="469" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="107.45" y="479.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (17,080,246 samples, 1.76%)</title><rect x="19.6" y="453" width="13.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="22.60" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::push_back (2,568,842 samples, 0.26%)</title><rect x="352.4" y="533" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="355.36" y="543.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*&gt; (970,280 samples, 0.10%)</title><rect x="254.9" y="453" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="257.94" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::_S_key (321,034 samples, 0.03%)</title><rect x="28.7" y="293" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="31.69" y="303.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (1,160,513 samples, 0.12%)</title><rect x="615.4" y="501" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="618.42" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (202,197 samples, 0.02%)</title><rect x="728.9" y="437" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="731.89" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::find (1,128,415 samples, 0.12%)</title><rect x="135.9" y="469" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="138.87" y="479.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="597" width="4.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="14.17" y="607.5" ></text>
</g>
<g >
<title>main (5,321,712 samples, 0.55%)</title><rect x="11.2" y="805" width="4.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="14.17" y="815.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersUlSrsFrame&gt; ns3::DynamicCast&lt;ns3::LteSpectrumSignalParametersUlSrsFrame, ns3::SpectrumSignalParameters&gt; (670,184 samples, 0.07%)</title><rect x="736.6" y="533" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="739.57" y="543.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_Bvector_impl_data::_M_move_data (231,889 samples, 0.02%)</title><rect x="196.2" y="453" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="199.20" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_erase (416,767 samples, 0.04%)</title><rect x="106.8" y="485" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="109.77" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned int&gt;, true&gt;::_Rb_tree_impl (152,651 samples, 0.02%)</title><rect x="657.4" y="485" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="660.37" y="495.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (750,603 samples, 0.08%)</title><rect x="774.1" y="229" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="777.11" y="239.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="629" width="4.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="14.17" y="639.5" ></text>
</g>
<g >
<title> (353,481 samples, 0.04%)</title><rect x="740.4" y="485" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="743.37" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;::~pair (190,528 samples, 0.02%)</title><rect x="506.4" y="421" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="509.38" y="431.5" ></text>
</g>
<g >
<title>ns3::Packet::AddByteTag (1,292,520 samples, 0.13%)</title><rect x="13.1" y="405" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="16.10" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::vector (381,879 samples, 0.04%)</title><rect x="503.7" y="389" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="506.68" y="399.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::~LteSpectrumSignalParametersDlCtrlFrame (233,861 samples, 0.02%)</title><rect x="344.2" y="469" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="347.23" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (1,744,005 samples, 0.18%)</title><rect x="654.4" y="501" width="1.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="657.44" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,432,157 samples, 0.15%)</title><rect x="10.0" y="837" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (204,269 samples, 0.02%)</title><rect x="198.9" y="389" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="201.92" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::lower_bound (151,718 samples, 0.02%)</title><rect x="96.5" y="373" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="99.52" y="383.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (481,444 samples, 0.05%)</title><rect x="519.2" y="325" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="522.19" y="335.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::operator (20,199,448 samples, 2.08%)</title><rect x="467.5" y="517" width="16.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="470.54" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (188,402 samples, 0.02%)</title><rect x="114.5" y="453" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="117.51" y="463.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::DlInfoListElement_s::HarqStatus_e const, ns3::DlInfoListElement_s::HarqStatus_e&gt; (243,097 samples, 0.03%)</title><rect x="444.4" y="197" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="447.40" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (183,384 samples, 0.02%)</title><rect x="334.6" y="309" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="337.59" y="319.5" ></text>
</g>
<g >
<title>ns3::Time::Time (244,557 samples, 0.03%)</title><rect x="279.4" y="485" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="282.37" y="495.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt; &gt; (1,338,732 samples, 0.14%)</title><rect x="92.0" y="485" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="95.03" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,214,433 samples, 0.13%)</title><rect x="639.0" y="485" width="1.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="642.02" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::end (241,860 samples, 0.02%)</title><rect x="249.3" y="469" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="252.31" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Copy (2,143,209 samples, 0.22%)</title><rect x="718.0" y="501" width="1.7" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="720.99" y="511.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::Copy (729,950 samples, 0.08%)</title><rect x="113.8" y="485" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="116.83" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned short&gt;::allocate (378,103 samples, 0.04%)</title><rect x="520.1" y="261" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="523.12" y="271.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt;::Delete (3,402,650 samples, 0.35%)</title><rect x="773.7" y="437" width="2.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="776.67" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator= (199,517 samples, 0.02%)</title><rect x="730.4" y="469" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="733.38" y="479.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (149,553 samples, 0.02%)</title><rect x="102.0" y="405" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="105.01" y="415.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (8,154,602 samples, 0.84%)</title><rect x="544.6" y="293" width="6.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="547.56" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (479,003 samples, 0.05%)</title><rect x="368.6" y="517" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="371.61" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_realloc_insert&lt;ns3::HigherLayerSelected_s const&amp;&gt; (1,903,180 samples, 0.20%)</title><rect x="595.1" y="277" width="1.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="598.06" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_M_insert (143,534 samples, 0.01%)</title><rect x="659.2" y="469" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="662.16" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::~vector (449,968 samples, 0.05%)</title><rect x="514.9" y="549" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="517.90" y="559.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters::SchedUlCqiInfoReqParameters (319,872 samples, 0.03%)</title><rect x="473.9" y="245" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="476.91" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (195,817 samples, 0.02%)</title><rect x="700.1" y="501" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="703.10" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::_M_ptr (376,880 samples, 0.04%)</title><rect x="328.8" y="453" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="331.81" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_end (161,396 samples, 0.02%)</title><rect x="170.0" y="421" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="172.96" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::operator= (149,032 samples, 0.02%)</title><rect x="338.3" y="437" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="341.30" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteEnbComponentCarrierManager::UeInfo, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::at (2,696,904 samples, 0.28%)</title><rect x="156.8" y="421" width="2.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="159.78" y="431.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Now (126,194 samples, 0.01%)</title><rect x="607.4" y="485" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="610.41" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (154,567 samples, 0.02%)</title><rect x="117.8" y="405" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="120.78" y="415.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::_M_realloc_insert&lt;ns3::UlDciListElement_s const&amp;&gt; (1,765,394 samples, 0.18%)</title><rect x="249.5" y="469" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="252.50" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;false&gt;::__destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (190,590 samples, 0.02%)</title><rect x="380.5" y="261" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="383.48" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::get_allocator (396,683 samples, 0.04%)</title><rect x="732.5" y="469" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="735.47" y="479.5" ></text>
</g>
<g >
<title>double* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (460,469 samples, 0.05%)</title><rect x="606.5" y="453" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="609.52" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr&lt;ns3::SpectrumModel&gt; (273,542 samples, 0.03%)</title><rect x="676.6" y="485" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="679.64" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteUePhy*, unsigned int, unsigned int&gt;::tuple (190,393 samples, 0.02%)</title><rect x="618.9" y="437" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="621.88" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_create_storage (317,668 samples, 0.03%)</title><rect x="476.3" y="277" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="479.35" y="287.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*, ns3::VendorSpecificListElement_s&gt; (675,744 samples, 0.07%)</title><rect x="475.6" y="293" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="478.61" y="303.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::uninitialized_copy&lt;ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s*&gt; (632,143 samples, 0.07%)</title><rect x="206.4" y="453" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="209.43" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::~_Rb_tree (220,721 samples, 0.02%)</title><rect x="666.3" y="309" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="669.34" y="319.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s&gt; (389,363 samples, 0.04%)</title><rect x="442.7" y="293" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="445.69" y="303.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::AddExpectedTb (5,530,969 samples, 0.57%)</title><rect x="383.6" y="549" width="4.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="386.65" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_get_node (474,197 samples, 0.05%)</title><rect x="237.5" y="357" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="240.55" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::tuple (665,649 samples, 0.07%)</title><rect x="667.4" y="405" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="670.42" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_insert_node (391,675 samples, 0.04%)</title><rect x="271.5" y="421" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="274.55" y="431.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*&gt; (190,387 samples, 0.02%)</title><rect x="131.1" y="469" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="134.09" y="479.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetPacketBurst (2,782,438 samples, 0.29%)</title><rect x="118.0" y="533" width="2.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="121.00" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (272,545 samples, 0.03%)</title><rect x="109.0" y="453" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="111.96" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;::operator (124,340 samples, 0.01%)</title><rect x="457.9" y="277" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="460.85" y="287.5" ></text>
</g>
<g >
<title>ns3::Vector3D::GetLength (548,871 samples, 0.06%)</title><rect x="311.4" y="469" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="314.42" y="479.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (408,801 samples, 0.04%)</title><rect x="410.8" y="501" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="413.78" y="511.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (196,986 samples, 0.02%)</title><rect x="326.0" y="469" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="328.98" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_erase (437,697 samples, 0.05%)</title><rect x="776.8" y="389" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="779.78" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;ns3::Scheduler::EventKey&gt;::operator (246,576 samples, 0.03%)</title><rect x="707.5" y="389" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="710.47" y="399.5" ></text>
</g>
<g >
<title>ns3::Packet::GetByteTagIterator (353,377 samples, 0.04%)</title><rect x="436.6" y="245" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="439.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (435,841 samples, 0.04%)</title><rect x="147.1" y="437" width="0.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="150.06" y="447.5" ></text>
</g>
<g >
<title>__fixunsxfti (505,737 samples, 0.05%)</title><rect x="683.5" y="485" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="686.50" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;* std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (1,468,656 samples, 0.15%)</title><rect x="526.4" y="277" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="529.43" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (352,577 samples, 0.04%)</title><rect x="692.8" y="437" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="695.85" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::end (186,918 samples, 0.02%)</title><rect x="106.6" y="485" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="109.56" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (2,019,519 samples, 0.21%)</title><rect x="22.0" y="357" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="24.97" y="367.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::UlDciLteControlMessage&gt; (234,425 samples, 0.02%)</title><rect x="393.6" y="485" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="396.63" y="495.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (370,818 samples, 0.04%)</title><rect x="419.9" y="309" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="422.87" y="319.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::tuple&lt;ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; &gt;::type&amp; std::get&lt;1ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; (881,128 samples, 0.09%)</title><rect x="754.1" y="597" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="757.07" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_Vector_base (623,026 samples, 0.06%)</title><rect x="212.6" y="405" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="215.63" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (194,069 samples, 0.02%)</title><rect x="104.6" y="277" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="107.61" y="287.5" ></text>
</g>
<g >
<title>ns3::EventId::operator= (688,506 samples, 0.07%)</title><rect x="727.3" y="517" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="730.29" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt;::allocate (420,367 samples, 0.04%)</title><rect x="287.7" y="421" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="290.75" y="431.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::CqiListElement_s const*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt; (158,030 samples, 0.02%)</title><rect x="254.4" y="501" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="257.37" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt;::allocate (397,126 samples, 0.04%)</title><rect x="287.8" y="405" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="290.76" y="415.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::MacCeListElement_s*, ns3::MacCeListElement_s&gt; (796,900 samples, 0.08%)</title><rect x="264.8" y="469" width="0.6" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="267.80" y="479.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (159,721 samples, 0.02%)</title><rect x="357.6" y="437" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="360.64" y="447.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (238,924 samples, 0.02%)</title><rect x="36.6" y="565" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.64" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::_M_erase (3,534,925 samples, 0.36%)</title><rect x="349.5" y="517" width="2.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="352.49" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node::operator (346,575 samples, 0.04%)</title><rect x="668.6" y="405" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="671.56" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (150,773 samples, 0.02%)</title><rect x="646.2" y="421" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="649.17" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;&amp; std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (838,531 samples, 0.09%)</title><rect x="382.7" y="517" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="385.71" y="527.5" ></text>
</g>
<g >
<title> (160,407 samples, 0.02%)</title><rect x="328.6" y="485" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="331.59" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::lower_bound (966,658 samples, 0.10%)</title><rect x="429.5" y="261" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="432.48" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (384,119 samples, 0.04%)</title><rect x="688.3" y="469" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="691.31" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet const&gt;::Ptr&lt;ns3::Packet&gt; (235,834 samples, 0.02%)</title><rect x="492.5" y="549" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="495.47" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Ptr (238,944 samples, 0.02%)</title><rect x="714.9" y="517" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="717.93" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::erase (446,852 samples, 0.05%)</title><rect x="117.6" y="517" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="120.64" y="527.5" ></text>
</g>
<g >
<title>decltype  (368,604 samples, 0.04%)</title><rect x="602.5" y="293" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="605.54" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; &gt; (1,076,159 samples, 0.11%)</title><rect x="357.0" y="501" width="0.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="360.03" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::BuildRarListElement_s*, ns3::BuildRarListElement_s&gt; (157,406 samples, 0.02%)</title><rect x="146.4" y="437" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="149.43" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_S_key (158,025 samples, 0.02%)</title><rect x="524.4" y="309" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="527.36" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;* std::__copy_move_a1&lt;true, ns3::Ptr&lt;ns3::PacketBurst&gt;*, ns3::Ptr&lt;ns3::PacketBurst&gt;*&gt; (2,014,508 samples, 0.21%)</title><rect x="634.2" y="469" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="637.23" y="479.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (198,957 samples, 0.02%)</title><rect x="228.7" y="405" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="231.70" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::Packet&gt;, ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (408,582 samples, 0.04%)</title><rect x="363.6" y="453" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="366.64" y="463.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (419,766 samples, 0.04%)</title><rect x="591.5" y="229" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="594.49" y="239.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,985,670 samples, 0.20%)</title><rect x="465.1" y="533" width="1.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="468.11" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::at (197,283 samples, 0.02%)</title><rect x="302.4" y="469" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="305.40" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_base (426,707 samples, 0.04%)</title><rect x="228.9" y="437" width="0.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="231.89" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (249,636 samples, 0.03%)</title><rect x="572.9" y="309" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="575.88" y="319.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (433,382 samples, 0.04%)</title><rect x="717.6" y="469" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="720.58" y="479.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters::operator= (1,434,031 samples, 0.15%)</title><rect x="25.5" y="309" width="1.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="28.52" y="319.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (3,158,900 samples, 0.33%)</title><rect x="75.3" y="421" width="2.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="78.35" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; (581,670 samples, 0.06%)</title><rect x="384.9" y="405" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="387.85" y="415.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetAttributeN (149,666 samples, 0.02%)</title><rect x="119.5" y="453" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="122.47" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::vector (296,060 samples, 0.03%)</title><rect x="94.9" y="437" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="97.95" y="447.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::SendControlChannels (63,350,263 samples, 6.53%)</title><rect x="296.7" y="549" width="51.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="299.73" y="559.5" >ns3::..</text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::operator (160,485 samples, 0.02%)</title><rect x="368.5" y="517" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="371.48" y="527.5" ></text>
</g>
<g >
<title>ns3::Object::GetTypeId (544,814 samples, 0.06%)</title><rect x="537.3" y="277" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="540.27" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;ns3::LteFlowId_t&gt;::operator (150,830 samples, 0.02%)</title><rect x="182.3" y="421" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="185.33" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::~vector (237,617 samples, 0.02%)</title><rect x="133.3" y="501" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="136.29" y="511.5" ></text>
</g>
<g >
<title>ns3::TypeId::operator= (327,866 samples, 0.03%)</title><rect x="543.3" y="277" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="546.35" y="287.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; (316,067 samples, 0.03%)</title><rect x="475.9" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="478.87" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (169,673 samples, 0.02%)</title><rect x="575.2" y="309" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="578.16" y="319.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="661" width="18.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="20.17" y="671.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (165,191 samples, 0.02%)</title><rect x="481.6" y="309" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="484.64" y="319.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__copy_move_a1&lt;false, ns3::VendorSpecificListElement_s const*, ns3::VendorSpecificListElement_s*&gt; (181,476 samples, 0.02%)</title><rect x="26.1" y="245" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="29.05" y="255.5" ></text>
</g>
<g >
<title>ns3::Object::Construct (260,304 samples, 0.03%)</title><rect x="162.8" y="421" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="165.85" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (993,953 samples, 0.10%)</title><rect x="465.6" y="501" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="468.59" y="511.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ProcessOneEvent (22,443,594 samples, 2.31%)</title><rect x="17.2" y="773" width="18.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="20.17" y="783.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (204,725 samples, 0.02%)</title><rect x="147.2" y="405" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="150.24" y="415.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::operator= (239,557 samples, 0.02%)</title><rect x="316.9" y="405" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="319.94" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::~_Rb_tree (270,414 samples, 0.03%)</title><rect x="341.4" y="453" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="344.36" y="463.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (1,840,445 samples, 0.19%)</title><rect x="62.9" y="517" width="1.5" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="65.92" y="527.5" ></text>
</g>
<g >
<title>ns3::Object::Object (2,165,809 samples, 0.22%)</title><rect x="536.9" y="293" width="1.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="539.92" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (148,308 samples, 0.02%)</title><rect x="121.8" y="533" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="124.79" y="543.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator[] (190,175 samples, 0.02%)</title><rect x="327.2" y="485" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="330.15" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_left (158,793 samples, 0.02%)</title><rect x="337.3" y="373" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="340.35" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (165,440 samples, 0.02%)</title><rect x="91.4" y="517" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="94.41" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_M_realloc_insert&lt;ns3::BuildDataListElement_s const&amp;&gt; (3,684,590 samples, 0.38%)</title><rect x="202.4" y="469" width="2.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="205.35" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (156,793 samples, 0.02%)</title><rect x="272.6" y="405" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="275.64" y="415.5" ></text>
</g>
<g >
<title>decltype  (2,332,441 samples, 0.24%)</title><rect x="352.4" y="501" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="355.42" y="511.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (153,593 samples, 0.02%)</title><rect x="316.3" y="325" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="319.25" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_base (403,989 samples, 0.04%)</title><rect x="497.7" y="533" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="500.72" y="543.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; (346,484 samples, 0.04%)</title><rect x="212.3" y="341" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="215.26" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;int, double&gt; &gt; (461,183 samples, 0.05%)</title><rect x="293.1" y="485" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="296.13" y="495.5" ></text>
</g>
<g >
<title>ns3::DlCqiLteControlMessage::~DlCqiLteControlMessage (197,585 samples, 0.02%)</title><rect x="497.4" y="437" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="500.43" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (458,503 samples, 0.05%)</title><rect x="61.6" y="533" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="64.63" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (272,135 samples, 0.03%)</title><rect x="724.9" y="437" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="727.89" y="447.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::ReadU32 (197,361 samples, 0.02%)</title><rect x="436.7" y="181" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="439.65" y="191.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::~SpectrumSignalParameters (184,600 samples, 0.02%)</title><rect x="654.0" y="437" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="657.02" y="447.5" ></text>
</g>
<g >
<title>double* std::fill_n&lt;double*, unsigned long, double&gt; (162,027 samples, 0.02%)</title><rect x="57.1" y="389" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="60.11" y="399.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Run (922,121,412 samples, 95.09%)</title><rect x="36.8" y="757" width="741.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="39.84" y="767.5" >ns3::DefaultSimulatorImpl::Run</text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (183,612 samples, 0.02%)</title><rect x="688.9" y="405" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="691.88" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (165,624 samples, 0.02%)</title><rect x="87.8" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="90.82" y="319.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (2,408,455 samples, 0.25%)</title><rect x="666.0" y="485" width="2.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="669.02" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::Copy (10,413,233 samples, 1.07%)</title><rect x="358.8" y="533" width="8.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="361.81" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;* std::__niter_base&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (157,965 samples, 0.02%)</title><rect x="357.8" y="469" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="360.77" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (2,458,313 samples, 0.25%)</title><rect x="549.1" y="261" width="2.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="552.14" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_S_key (157,744 samples, 0.02%)</title><rect x="244.1" y="421" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="247.10" y="431.5" ></text>
</g>
<g >
<title>ns3::EventId::EventId (646,382 samples, 0.07%)</title><rect x="305.0" y="469" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="307.98" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::operator[] (3,043,186 samples, 0.31%)</title><rect x="190.6" y="485" width="2.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="193.64" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_ptr (179,937 samples, 0.02%)</title><rect x="385.6" y="437" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="388.57" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, false&gt;::_Head_base (380,537 samples, 0.04%)</title><rect x="712.2" y="357" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="715.21" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Acquire (127,934 samples, 0.01%)</title><rect x="405.4" y="485" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="408.37" y="495.5" ></text>
</g>
<g >
<title>unsigned short&amp;&amp; std::forward&lt;unsigned short&gt; (242,245 samples, 0.02%)</title><rect x="479.4" y="277" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="482.44" y="287.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (650,532 samples, 0.07%)</title><rect x="687.7" y="421" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="690.72" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (362,265 samples, 0.04%)</title><rect x="728.3" y="437" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="731.27" y="447.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (191,238 samples, 0.02%)</title><rect x="97.0" y="421" width="0.1" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="99.98" y="431.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_assign_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (776,735 samples, 0.08%)</title><rect x="346.4" y="501" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="349.41" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (485,965 samples, 0.05%)</title><rect x="528.3" y="293" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="531.28" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (220,899 samples, 0.02%)</title><rect x="746.2" y="517" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="749.17" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_impl_data::_M_swap_data (195,859 samples, 0.02%)</title><rect x="350.3" y="389" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="353.29" y="399.5" ></text>
</g>
<g >
<title>__dynamic_cast (271,796 samples, 0.03%)</title><rect x="736.7" y="517" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="739.72" y="527.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*&gt; (154,651 samples, 0.02%)</title><rect x="106.3" y="389" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="109.25" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::end (326,697 samples, 0.03%)</title><rect x="213.8" y="469" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="216.76" y="479.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::_Bit_iterator (156,996 samples, 0.02%)</title><rect x="202.1" y="405" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="205.13" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, unsigned int, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, unsigned int&gt; &gt; &gt;::empty (277,085 samples, 0.03%)</title><rect x="253.9" y="517" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="256.90" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::PacketMetadata::Data*, std::allocator&lt;ns3::PacketMetadata::Data*&gt; &gt;::begin (175,095 samples, 0.02%)</title><rect x="15.1" y="325" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="18.10" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (553,980 samples, 0.06%)</title><rect x="663.4" y="389" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="666.38" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt;::allocate (185,863 samples, 0.02%)</title><rect x="261.0" y="309" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="264.02" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator* (233,289 samples, 0.02%)</title><rect x="326.5" y="485" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="329.52" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;::operator* (587,602 samples, 0.06%)</title><rect x="183.4" y="485" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="186.45" y="495.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::VendorSpecificListElement_s*&gt; (234,807 samples, 0.02%)</title><rect x="263.9" y="357" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="266.87" y="367.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::ScheduleNow&lt;void  (1,222,846 samples, 0.13%)</title><rect x="52.9" y="549" width="1.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="55.89" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,750,000 samples, 0.28%)</title><rect x="710.3" y="469" width="2.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="713.33" y="479.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::ReadU8 (285,405 samples, 0.03%)</title><rect x="426.9" y="165" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="429.92" y="175.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (886,915,093 samples, 91.46%)</title><rect x="44.9" y="645" width="713.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="47.85" y="655.5" >void std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (953,823 samples, 0.10%)</title><rect x="706.4" y="437" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="709.45" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::end (332,913 samples, 0.03%)</title><rect x="529.8" y="309" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="532.84" y="319.5" ></text>
</g>
<g >
<title>ns3::CeBitmap_e* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CeBitmap_e const*, std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt; &gt;, ns3::CeBitmap_e*&gt; (492,021 samples, 0.05%)</title><rect x="203.8" y="373" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="206.84" y="383.5" ></text>
</g>
<g >
<title>unsigned short const&amp; std::__get_helper&lt;0ul, unsigned short const&amp;&gt; (277,874 samples, 0.03%)</title><rect x="191.4" y="325" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="194.45" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_M_ptr (311,832 samples, 0.03%)</title><rect x="723.6" y="453" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="726.56" y="463.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::~ObjectBase (202,260 samples, 0.02%)</title><rect x="77.1" y="309" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="80.07" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_check_len (234,878 samples, 0.02%)</title><rect x="247.8" y="437" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="250.79" y="447.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::Deserialize (721,482 samples, 0.07%)</title><rect x="490.1" y="517" width="0.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="493.10" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (916,117 samples, 0.09%)</title><rect x="725.8" y="389" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="728.82" y="399.5" ></text>
</g>
<g >
<title>operator new (333,876 samples, 0.03%)</title><rect x="239.5" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="242.54" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;int, double&gt;::pair&lt;int&amp;, double&amp;&gt; (314,047 samples, 0.03%)</title><rect x="296.2" y="533" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="299.16" y="543.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::operator (203,288 samples, 0.02%)</title><rect x="55.6" y="421" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="58.59" y="431.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (261,839 samples, 0.03%)</title><rect x="665.8" y="469" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="668.77" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (277,280 samples, 0.03%)</title><rect x="463.7" y="357" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="466.71" y="367.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (146,147 samples, 0.02%)</title><rect x="614.1" y="469" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="617.14" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (424,499 samples, 0.04%)</title><rect x="192.3" y="453" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="195.29" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::clear (165,983 samples, 0.02%)</title><rect x="464.6" y="533" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="467.56" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (596,385 samples, 0.06%)</title><rect x="277.6" y="501" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="280.58" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_M_allocate (381,294 samples, 0.04%)</title><rect x="261.9" y="485" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="264.93" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (168,940 samples, 0.02%)</title><rect x="78.5" y="421" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="81.52" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::TypeId::AttributeInformation, std::allocator&lt;ns3::TypeId::AttributeInformation&gt; &gt;::size (214,385 samples, 0.02%)</title><rect x="541.6" y="229" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="544.62" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_end (171,031 samples, 0.02%)</title><rect x="73.6" y="469" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="76.61" y="479.5" ></text>
</g>
<g >
<title>ns3::LteInterference*&amp; std::forward&lt;ns3::LteInterference*&amp;&gt; (156,121 samples, 0.02%)</title><rect x="51.2" y="581" width="0.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="54.16" y="591.5" ></text>
</g>
<g >
<title>operator new (167,253 samples, 0.02%)</title><rect x="71.9" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="74.91" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::key_comp (280,831 samples, 0.03%)</title><rect x="273.1" y="469" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="276.11" y="479.5" ></text>
</g>
<g >
<title>ns3::PhichListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::PhichListElement_s const*, std::vector&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt; &gt;, ns3::PhichListElement_s*&gt; (202,017 samples, 0.02%)</title><rect x="227.5" y="421" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="230.50" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,363,562 samples, 0.14%)</title><rect x="187.8" y="485" width="1.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="190.84" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (2,165,306 samples, 0.22%)</title><rect x="84.4" y="421" width="1.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="87.37" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::end (151,000 samples, 0.02%)</title><rect x="651.1" y="469" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="654.11" y="479.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetAttributeN (1,373,694 samples, 0.14%)</title><rect x="372.8" y="469" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="375.78" y="479.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (324,769 samples, 0.03%)</title><rect x="611.9" y="437" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="614.94" y="447.5" ></text>
</g>
<g >
<title>void std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1,905,826 samples, 0.20%)</title><rect x="397.1" y="533" width="1.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="400.12" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::UlDciLteControlMessage&gt;::_M_ptr (143,958 samples, 0.01%)</title><rect x="287.3" y="437" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="290.30" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;::_M_valptr (126,568 samples, 0.01%)</title><rect x="81.9" y="421" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="84.95" y="431.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::~DlDciListElement_s (221,743 samples, 0.02%)</title><rect x="139.3" y="469" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="142.29" y="479.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (1,376,216 samples, 0.14%)</title><rect x="15.9" y="421" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="18.88" y="431.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Iterator::PrepareForNext (236,079 samples, 0.02%)</title><rect x="436.6" y="197" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="439.62" y="207.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_Bvector_impl_data::_Bvector_impl_data (156,996 samples, 0.02%)</title><rect x="202.1" y="421" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="205.13" y="431.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (3,272,025 samples, 0.34%)</title><rect x="309.5" y="501" width="2.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="312.54" y="511.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a2&lt;false, double const*, double*&gt; (447,358 samples, 0.05%)</title><rect x="647.6" y="357" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="650.56" y="367.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::LteSpectrumSignalParametersDataFrame (5,596,120 samples, 0.58%)</title><rect x="644.6" y="485" width="4.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="647.56" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_impl::_List_impl (157,771 samples, 0.02%)</title><rect x="721.4" y="469" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="724.37" y="479.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (2,167,776 samples, 0.22%)</title><rect x="108.3" y="533" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="111.25" y="543.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_M_valptr (151,932 samples, 0.02%)</title><rect x="356.1" y="485" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="359.07" y="495.5" ></text>
</g>
<g >
<title>unsigned int&amp; std::__get_helper&lt;2ul, unsigned int&gt; (272,452 samples, 0.03%)</title><rect x="756.3" y="581" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="759.33" y="591.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoReceiveLteControlMessage (20,358,746 samples, 2.10%)</title><rect x="445.5" y="341" width="16.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="448.50" y="351.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::ConstructSelf (2,873,447 samples, 0.30%)</title><rect x="372.3" y="485" width="2.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="375.26" y="495.5" ></text>
</g>
<g >
<title>double* std::__niter_base&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (155,897 samples, 0.02%)</title><rect x="114.1" y="341" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="117.14" y="351.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::COWTraverse (1,126,525 samples, 0.12%)</title><rect x="430.8" y="293" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="433.75" y="303.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;5ul, std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; &gt;::type&amp; std::get&lt;5ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (744,917 samples, 0.08%)</title><rect x="757.4" y="597" width="0.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="760.40" y="607.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::GetMobility (303,143 samples, 0.03%)</title><rect x="643.8" y="517" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="646.80" y="527.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::insert&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (411,083 samples, 0.04%)</title><rect x="648.7" y="437" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="651.73" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; (190,528 samples, 0.02%)</title><rect x="506.4" y="453" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="509.38" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::size (173,421 samples, 0.02%)</title><rect x="525.8" y="309" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="528.83" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::~map (804,188 samples, 0.08%)</title><rect x="60.5" y="517" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="63.52" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::IidManager::IidInformation, std::allocator&lt;ns3::IidManager::IidInformation&gt; &gt;::operator[] (150,378 samples, 0.02%)</title><rect x="373.4" y="421" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="376.36" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_insert (220,811 samples, 0.02%)</title><rect x="661.7" y="405" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="664.65" y="415.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (197,197 samples, 0.02%)</title><rect x="646.6" y="357" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="649.59" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::begin (295,218 samples, 0.03%)</title><rect x="569.4" y="309" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="572.43" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt; &gt; &gt;::begin (233,931 samples, 0.02%)</title><rect x="672.7" y="517" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="675.66" y="527.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;ns3::PhichListElement_s const*, std::vector&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt; &gt; (161,679 samples, 0.02%)</title><rect x="227.5" y="373" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="230.53" y="383.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned short*, unsigned short&gt; (155,477 samples, 0.02%)</title><rect x="473.1" y="261" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="476.13" y="271.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::__allocated_ptr (199,424 samples, 0.02%)</title><rect x="363.0" y="453" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="365.97" y="463.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetControlMessages (985,557 samples, 0.10%)</title><rect x="598.1" y="293" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="601.14" y="303.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (870,107,623 samples, 89.72%)</title><rect x="51.9" y="581" width="699.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="54.88" y="591.5" >void std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>ns3::LteEnbRrc::GetUeManager (2,186,317 samples, 0.23%)</title><rect x="27.4" y="357" width="1.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="30.44" y="367.5" ></text>
</g>
<g >
<title>ns3::Object::DoDelete (191,238 samples, 0.02%)</title><rect x="97.0" y="389" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.98" y="399.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::UpdateSinrPerceived (400,144 samples, 0.04%)</title><rect x="581.5" y="341" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="584.51" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (763,268 samples, 0.08%)</title><rect x="60.6" y="485" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="63.55" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_ptr (230,371 samples, 0.02%)</title><rect x="158.4" y="325" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="161.43" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::erase (3,494,424 samples, 0.36%)</title><rect x="289.5" y="533" width="2.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="292.46" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (1,468,656 samples, 0.15%)</title><rect x="526.4" y="293" width="1.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="529.43" y="303.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::PacketMetadata (266,992 samples, 0.03%)</title><rect x="19.1" y="373" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="22.11" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::clear (1,054,314 samples, 0.11%)</title><rect x="393.9" y="533" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="396.91" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::at (194,370 samples, 0.02%)</title><rect x="633.6" y="533" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="636.60" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (487,403 samples, 0.05%)</title><rect x="615.5" y="469" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="618.48" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (3,088,032 samples, 0.32%)</title><rect x="378.7" y="341" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="381.74" y="351.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::AddExpectedTb (590,754 samples, 0.06%)</title><rect x="120.2" y="533" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="123.24" y="543.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedUlCqiInfoReq (6,622,886 samples, 0.68%)</title><rect x="220.2" y="517" width="5.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="223.16" y="527.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::copy&lt;ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s*&gt; (475,054 samples, 0.05%)</title><rect x="206.9" y="469" width="0.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="209.94" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (838,836 samples, 0.09%)</title><rect x="81.8" y="485" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="84.78" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Acquire (472,815 samples, 0.05%)</title><rect x="751.2" y="549" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="754.18" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::push_back (371,903 samples, 0.04%)</title><rect x="117.3" y="517" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="120.28" y="527.5" ></text>
</g>
<g >
<title>ns3::Buffer::~Buffer (338,881 samples, 0.03%)</title><rect x="652.9" y="229" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="655.94" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_ptr (232,556 samples, 0.02%)</title><rect x="465.9" y="453" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="468.91" y="463.5" ></text>
</g>
<g >
<title>f32xsqrtf64 (164,839 samples, 0.02%)</title><rect x="703.4" y="501" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="706.39" y="511.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::ByteTagList (157,202 samples, 0.02%)</title><rect x="153.4" y="357" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="156.36" y="367.5" ></text>
</g>
<g >
<title>ns3::Packet::~Packet (2,563,159 samples, 0.26%)</title><rect x="451.8" y="117" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="454.80" y="127.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (156,292 samples, 0.02%)</title><rect x="781.5" y="837" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="784.51" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::PhyTransmissionStatParameters&gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::PhyTransmissionStatParameters&gt; &gt; &gt;::begin (125,646 samples, 0.01%)</title><rect x="535.3" y="341" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="538.27" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_begin (343,708 samples, 0.04%)</title><rect x="649.9" y="469" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="652.91" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::~_Tuple_impl (935,788 samples, 0.10%)</title><rect x="772.8" y="533" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="775.80" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::_M_range_check (215,267 samples, 0.02%)</title><rect x="289.0" y="517" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="292.00" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_range_check (145,739 samples, 0.02%)</title><rect x="375.6" y="517" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="378.57" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (293,137 samples, 0.03%)</title><rect x="594.8" y="261" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="597.77" y="271.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumPhy&gt;::Ptr (960,925 samples, 0.10%)</title><rect x="469.4" y="405" width="0.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="472.41" y="415.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (508,044 samples, 0.05%)</title><rect x="716.6" y="469" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="719.58" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy (425,223 samples, 0.04%)</title><rect x="104.5" y="437" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="107.45" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::Ptr (160,484 samples, 0.02%)</title><rect x="660.3" y="501" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="663.30" y="511.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*&gt; (178,382 samples, 0.02%)</title><rect x="101.6" y="357" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="104.62" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_base (961,294 samples, 0.10%)</title><rect x="539.3" y="261" width="0.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="542.29" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;unsigned short&gt;::_M_addr (241,097 samples, 0.02%)</title><rect x="395.6" y="453" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="398.62" y="463.5" ></text>
</g>
<g >
<title>operator new (195,089 samples, 0.02%)</title><rect x="316.4" y="405" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="319.41" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteInterference&gt;::operator (310,011 samples, 0.03%)</title><rect x="734.6" y="533" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="737.62" y="543.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (19,358,790 samples, 2.00%)</title><rect x="19.6" y="597" width="15.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="22.57" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node::operator (310,137 samples, 0.03%)</title><rect x="104.5" y="373" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="107.52" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::clear (301,718 samples, 0.03%)</title><rect x="121.5" y="517" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="124.51" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (920,658 samples, 0.09%)</title><rect x="662.0" y="405" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="664.98" y="415.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (266,931 samples, 0.03%)</title><rect x="53.7" y="485" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="56.66" y="495.5" ></text>
</g>
<g >
<title>__sqrt_finite (155,543 samples, 0.02%)</title><rect x="311.6" y="453" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="314.61" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PropagationDelayModel&gt;::operator bool (144,100 samples, 0.01%)</title><rect x="323.1" y="501" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="326.08" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (517,866 samples, 0.05%)</title><rect x="667.5" y="341" width="0.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="670.54" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::at (291,311 samples, 0.03%)</title><rect x="588.9" y="229" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="591.92" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_valptr (632,959 samples, 0.07%)</title><rect x="184.7" y="469" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="187.67" y="479.5" ></text>
</g>
<g >
<title>ns3::UeSelected_s::~UeSelected_s (156,086 samples, 0.02%)</title><rect x="106.8" y="341" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="109.80" y="351.5" ></text>
</g>
<g >
<title>double* std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (775,199 samples, 0.08%)</title><rect x="238.4" y="229" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="241.40" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (828,329 samples, 0.09%)</title><rect x="501.7" y="405" width="0.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="504.74" y="415.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (599,025 samples, 0.06%)</title><rect x="698.7" y="469" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="701.67" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (195,924 samples, 0.02%)</title><rect x="662.4" y="373" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="665.45" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::vector (604,571 samples, 0.06%)</title><rect x="538.2" y="277" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="541.17" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::UlDciLteControlMessage&gt;::_M_ptr (283,830 samples, 0.03%)</title><rect x="393.0" y="485" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="396.05" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::~_Tuple_impl (976,372 samples, 0.10%)</title><rect x="772.8" y="549" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="775.77" y="559.5" ></text>
</g>
<g >
<title>decltype  (979,889 samples, 0.10%)</title><rect x="526.8" y="229" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="529.82" y="239.5" ></text>
</g>
<g >
<title>malloc (333,876 samples, 0.03%)</title><rect x="239.5" y="165" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="242.54" y="175.5" ></text>
</g>
<g >
<title>ns3::Object::Initialize (214,377 samples, 0.02%)</title><rect x="130.4" y="469" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="133.38" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::deallocate (163,066 samples, 0.02%)</title><rect x="773.3" y="389" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="776.33" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_mbegin (161,866 samples, 0.02%)</title><rect x="568.1" y="245" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="571.06" y="255.5" ></text>
</g>
<g >
<title>ns3::operator+ (373,725 samples, 0.04%)</title><rect x="665.3" y="469" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="668.32" y="479.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::~LteSpectrumSignalParametersDataFrame (3,401,494 samples, 0.35%)</title><rect x="75.3" y="469" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.35" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::allocate (272,885 samples, 0.03%)</title><rect x="210.9" y="437" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="213.86" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::at (338,936 samples, 0.03%)</title><rect x="399.9" y="549" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="402.90" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::~vector (250,258 samples, 0.03%)</title><rect x="592.1" y="277" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="595.06" y="287.5" ></text>
</g>
<g >
<title>ns3::BufferSizeLevelBsr::BufferSize2BsrId (148,238 samples, 0.02%)</title><rect x="686.5" y="501" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="689.54" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (303,018 samples, 0.03%)</title><rect x="243.6" y="453" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="246.57" y="463.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::tuple&lt;ns3::LteUePhy*, unsigned int, unsigned int&gt; &gt;::type&amp; std::get&lt;1ul, ns3::LteUePhy*, unsigned int, unsigned int&gt; (345,321 samples, 0.04%)</title><rect x="754.8" y="597" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="757.78" y="607.5" ></text>
</g>
<g >
<title>double* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (418,403 samples, 0.04%)</title><rect x="654.6" y="453" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="657.59" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (395,163 samples, 0.04%)</title><rect x="666.9" y="357" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="669.95" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (1,318,462 samples, 0.14%)</title><rect x="455.5" y="309" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="458.47" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::_M_ptr (283,636 samples, 0.03%)</title><rect x="570.5" y="245" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="573.50" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::find (146,964 samples, 0.02%)</title><rect x="99.3" y="453" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="102.32" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt; ns3::Object::GetObject&lt;ns3::SpectrumPhy&gt; (506,061 samples, 0.05%)</title><rect x="89.8" y="533" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="92.81" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (418,721 samples, 0.04%)</title><rect x="119.8" y="405" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="122.84" y="415.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_M_valptr (136,464 samples, 0.01%)</title><rect x="501.0" y="517" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="503.99" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*, ns3::CqiListElement_s&gt; (416,767 samples, 0.04%)</title><rect x="106.8" y="453" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="109.77" y="463.5" ></text>
</g>
<g >
<title>ns3::UlDciLteControlMessage::UlDciLteControlMessage (388,309 samples, 0.04%)</title><rect x="288.1" y="421" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="291.08" y="431.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (156,843 samples, 0.02%)</title><rect x="228.7" y="389" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="231.73" y="399.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (166,567 samples, 0.02%)</title><rect x="234.5" y="485" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="237.54" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::BsrLteControlMessage&gt;::operator (142,163 samples, 0.01%)</title><rect x="689.1" y="501" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="692.06" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;void  (405,896 samples, 0.04%)</title><rect x="517.5" y="405" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="520.49" y="415.5" ></text>
</g>
<g >
<title>operator new (239,912 samples, 0.02%)</title><rect x="404.3" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="407.28" y="399.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (1,111,745 samples, 0.11%)</title><rect x="42.4" y="645" width="0.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="45.42" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_S_check_init_len (571,492 samples, 0.06%)</title><rect x="696.4" y="485" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="699.44" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;::operator* (248,472 samples, 0.03%)</title><rect x="567.5" y="293" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="570.46" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, double&gt; &gt;::_M_valptr (567,548 samples, 0.06%)</title><rect x="295.3" y="469" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="298.25" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator-- (195,924 samples, 0.02%)</title><rect x="662.4" y="389" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="665.45" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (507,018 samples, 0.05%)</title><rect x="325.4" y="437" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="328.35" y="447.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (468,442 samples, 0.05%)</title><rect x="573.9" y="277" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="576.94" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::deallocate (194,524 samples, 0.02%)</title><rect x="216.5" y="405" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="219.49" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator= (842,802 samples, 0.09%)</title><rect x="195.8" y="485" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="198.83" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~vector (629,475 samples, 0.06%)</title><rect x="24.8" y="325" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="27.85" y="335.5" ></text>
</g>
<g >
<title>ns3::LteMacSapUser::TxOpportunityParameters::TxOpportunityParameters (163,135 samples, 0.02%)</title><rect x="536.4" y="325" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="539.35" y="335.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator* (275,268 samples, 0.03%)</title><rect x="733.7" y="437" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="736.69" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::lower_bound (238,325 samples, 0.02%)</title><rect x="332.8" y="469" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="335.80" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Ptr&lt;ns3::SpectrumValue&gt; (235,951 samples, 0.02%)</title><rect x="324.5" y="501" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="327.51" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (263,384 samples, 0.03%)</title><rect x="657.3" y="517" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="660.28" y="527.5" ></text>
</g>
<g >
<title>void std::fill&lt;unsigned short*, unsigned short&gt; (157,918 samples, 0.02%)</title><rect x="253.6" y="453" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="256.65" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Acquire (223,430 samples, 0.02%)</title><rect x="411.6" y="485" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="414.65" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::_Vector_impl_data::_Vector_impl_data (199,981 samples, 0.02%)</title><rect x="174.3" y="421" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="177.34" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Acquire (191,450 samples, 0.02%)</title><rect x="625.2" y="469" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="628.19" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::resize (343,043 samples, 0.04%)</title><rect x="106.1" y="469" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="109.10" y="479.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::ReadU8 (154,581 samples, 0.02%)</title><rect x="436.7" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="439.68" y="175.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator* (644,591 samples, 0.07%)</title><rect x="500.2" y="517" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="503.16" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::BsrLteControlMessage&gt; ns3::Create&lt;ns3::BsrLteControlMessage&gt; (556,282 samples, 0.06%)</title><rect x="688.6" y="501" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="691.62" y="511.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s::BuildDataListElement_s (189,091 samples, 0.02%)</title><rect x="100.8" y="405" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="103.84" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_M_mbegin (398,471 samples, 0.04%)</title><rect x="180.0" y="421" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="182.95" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteEnbPhy&gt;::Ptr (308,737 samples, 0.03%)</title><rect x="469.1" y="405" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="472.13" y="415.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int const, double&gt; const&amp;&gt; (205,403 samples, 0.02%)</title><rect x="59.7" y="389" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="62.68" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_impl::_Vector_impl (165,586 samples, 0.02%)</title><rect x="420.9" y="277" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="423.86" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;ns3::Scheduler::EventKey&gt;::operator (529,361 samples, 0.05%)</title><rect x="663.9" y="389" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="666.92" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;::Acquire (234,941 samples, 0.02%)</title><rect x="149.6" y="309" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="152.59" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (291,061 samples, 0.03%)</title><rect x="78.8" y="517" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="81.83" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, double&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, double&gt; &gt; &gt;::_M_end (151,821 samples, 0.02%)</title><rect x="294.8" y="501" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="297.85" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_check_len (563,247 samples, 0.06%)</title><rect x="219.2" y="437" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="222.21" y="447.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::GetSpectrumModel (2,320,104 samples, 0.24%)</title><rect x="674.7" y="501" width="1.9" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="677.71" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (307,652 samples, 0.03%)</title><rect x="114.0" y="357" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="117.02" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;::_M_ptr (234,295 samples, 0.02%)</title><rect x="157.0" y="373" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="160.02" y="383.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp;&gt; (498,015 samples, 0.05%)</title><rect x="721.7" y="437" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="724.75" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_check_len (747,839 samples, 0.08%)</title><rect x="597.2" y="245" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="600.15" y="255.5" ></text>
</g>
<g >
<title>ns3::Angles::CheckIfValid (149,412 samples, 0.02%)</title><rect x="642.2" y="469" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="645.17" y="479.5" ></text>
</g>
<g >
<title>void  (325,947 samples, 0.03%)</title><rect x="517.5" y="389" width="0.3" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="520.55" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_init (154,782 samples, 0.02%)</title><rect x="164.5" y="357" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="167.51" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_deallocate (149,822 samples, 0.02%)</title><rect x="139.4" y="421" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="142.35" y="431.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, std::_Bind&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="693" width="18.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="20.17" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_Rb_tree_iterator (238,804 samples, 0.02%)</title><rect x="194.0" y="453" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="196.98" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp;&gt; (1,704,960 samples, 0.18%)</title><rect x="315.2" y="421" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="318.19" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_addr (162,805 samples, 0.02%)</title><rect x="663.6" y="341" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="666.60" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (220,015 samples, 0.02%)</title><rect x="111.4" y="437" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="114.45" y="447.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::ReportBufferStatus (6,485,597 samples, 0.67%)</title><rect x="24.3" y="421" width="5.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="27.28" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::begin (210,507 samples, 0.02%)</title><rect x="186.2" y="469" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="189.19" y="479.5" ></text>
</g>
<g >
<title>ns3::LteAmc::GetUlTbSizeFromMcs (193,747 samples, 0.02%)</title><rect x="232.1" y="485" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="235.10" y="495.5" ></text>
</g>
<g >
<title>decltype  (2,563,971 samples, 0.26%)</title><rect x="203.3" y="437" width="2.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="206.25" y="447.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, ns3::UlInfoListElement_s&gt;::Callback&lt;void  (2,054,238 samples, 0.21%)</title><rect x="439.3" y="485" width="1.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="442.29" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,321,712 samples, 0.55%)</title><rect x="11.2" y="821" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.17" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_clear (424,329 samples, 0.04%)</title><rect x="612.9" y="453" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="615.88" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_lower_bound (1,465,798 samples, 0.15%)</title><rect x="84.9" y="405" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="87.93" y="415.5" ></text>
</g>
<g >
<title> (126,110 samples, 0.01%)</title><rect x="402.8" y="469" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="405.85" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetTypeId (273,306 samples, 0.03%)</title><rect x="163.6" y="421" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="166.58" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (814,139 samples, 0.08%)</title><rect x="386.6" y="517" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="389.59" y="527.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (564,216 samples, 0.06%)</title><rect x="318.8" y="357" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="321.81" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (124,634 samples, 0.01%)</title><rect x="591.4" y="245" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="594.36" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::construct&lt;ns3::BuildDataListElement_s, ns3::BuildDataListElement_s const&amp;&gt; (189,091 samples, 0.02%)</title><rect x="100.8" y="437" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="103.84" y="447.5" ></text>
</g>
<g >
<title>ns3::EventId::~EventId (866,210 samples, 0.09%)</title><rect x="39.4" y="725" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="42.36" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::_M_valptr (126,661 samples, 0.01%)</title><rect x="569.1" y="309" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="572.12" y="319.5" ></text>
</g>
<g >
<title>ns3::Buffer::Initialize (535,246 samples, 0.06%)</title><rect x="14.1" y="357" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="17.13" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;::operator* (195,770 samples, 0.02%)</title><rect x="177.5" y="469" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="180.45" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::allocate (313,319 samples, 0.03%)</title><rect x="626.6" y="421" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="629.59" y="431.5" ></text>
</g>
<g >
<title>ns3::LteMacSapUser::ReceivePduParameters::ReceivePduParameters (154,503 samples, 0.02%)</title><rect x="435.1" y="325" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="438.09" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (814,123 samples, 0.08%)</title><rect x="346.4" y="517" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="349.38" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::~_Vector_base (160,392 samples, 0.02%)</title><rect x="134.0" y="485" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="137.03" y="495.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::~MacCeListElement_s (457,826 samples, 0.05%)</title><rect x="688.2" y="501" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="691.25" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::find (738,382 samples, 0.08%)</title><rect x="81.1" y="501" width="0.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="84.12" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteCcmMacSapProvider*&gt; &gt; &gt;::_M_end (200,561 samples, 0.02%)</title><rect x="458.2" y="245" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="461.21" y="255.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (392,749 samples, 0.04%)</title><rect x="716.7" y="437" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="719.67" y="447.5" ></text>
</g>
<g >
<title>ns3::Time::GetNanoSeconds (191,170 samples, 0.02%)</title><rect x="14.0" y="373" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="16.98" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (194,555 samples, 0.02%)</title><rect x="519.0" y="325" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="522.00" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::list (368,722 samples, 0.04%)</title><rect x="538.7" y="293" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="541.66" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;* std::__copy_move_a1&lt;true, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*&gt; (1,663,604 samples, 0.17%)</title><rect x="290.1" y="469" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="293.06" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (195,822 samples, 0.02%)</title><rect x="305.5" y="469" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="308.50" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::_M_mbegin (155,977 samples, 0.02%)</title><rect x="185.4" y="437" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="188.43" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~_Vector_base (148,451 samples, 0.02%)</title><rect x="635.3" y="293" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="638.25" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (165,594 samples, 0.02%)</title><rect x="440.5" y="261" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="443.54" y="271.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::UlDciLteControlMessage&gt; &gt; (3,076,347 samples, 0.32%)</title><rect x="286.4" y="517" width="2.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="289.38" y="527.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::_M_valptr (234,399 samples, 0.02%)</title><rect x="733.7" y="421" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="736.72" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (309,041 samples, 0.03%)</title><rect x="775.6" y="373" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="778.63" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::operator* (714,872 samples, 0.07%)</title><rect x="184.6" y="485" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="187.60" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::begin (261,627 samples, 0.03%)</title><rect x="514.5" y="533" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="517.51" y="543.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (826,746 samples, 0.09%)</title><rect x="718.3" y="469" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="721.26" y="479.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (332,272 samples, 0.03%)</title><rect x="593.7" y="293" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="596.71" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::at (377,393 samples, 0.04%)</title><rect x="575.6" y="357" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="578.59" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Object&gt;::Ptr&lt;ns3::AntennaModel&gt; (485,174 samples, 0.05%)</title><rect x="703.9" y="533" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="706.87" y="543.5" ></text>
</g>
<g >
<title>decltype  (398,640 samples, 0.04%)</title><rect x="473.8" y="261" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="476.84" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned short&gt;, true&gt;::_Rb_tree_impl (313,901 samples, 0.03%)</title><rect x="509.2" y="517" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="512.15" y="527.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (1,604,788 samples, 0.17%)</title><rect x="14.1" y="389" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="17.13" y="399.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (1,064,743 samples, 0.11%)</title><rect x="730.4" y="485" width="0.8" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="733.38" y="495.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::operator (151,315 samples, 0.02%)</title><rect x="691.6" y="437" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="694.63" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::find (2,994,899 samples, 0.31%)</title><rect x="522.5" y="341" width="2.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="525.47" y="351.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::~PacketTagList (323,410 samples, 0.03%)</title><rect x="453.6" y="101" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="456.57" y="111.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::SubframeIndication (415,834 samples, 0.04%)</title><rect x="15.5" y="533" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="18.45" y="543.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (188,902 samples, 0.02%)</title><rect x="109.8" y="469" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="112.84" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (191,802 samples, 0.02%)</title><rect x="344.3" y="405" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="347.27" y="415.5" ></text>
</g>
<g >
<title>ns3::MemberLteEnbRrcSapUser&lt;ns3::LteEnbRrcProtocolIdeal&gt;::SendSystemInformation (188,903 samples, 0.02%)</title><rect x="400.5" y="549" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="403.49" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;* std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*&gt; (148,381 samples, 0.02%)</title><rect x="117.1" y="421" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="120.11" y="431.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::~ObjectBase (189,056 samples, 0.02%)</title><rect x="454.1" y="181" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="457.08" y="191.5" ></text>
</g>
<g >
<title>malloc (168,940 samples, 0.02%)</title><rect x="78.5" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="81.52" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (4,210,057 samples, 0.43%)</title><rect x="447.5" y="293" width="3.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="450.48" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::begin (162,137 samples, 0.02%)</title><rect x="234.1" y="453" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="237.06" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (158,022 samples, 0.02%)</title><rect x="464.0" y="517" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="467.03" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::CeBitmap_e const*, std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt; &gt;::__normal_iterator (148,109 samples, 0.02%)</title><rect x="204.6" y="373" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="207.55" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_M_move_assign (2,021,899 samples, 0.21%)</title><rect x="350.0" y="405" width="1.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="353.05" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel const&gt; const&amp;&gt; (159,012 samples, 0.02%)</title><rect x="326.9" y="485" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="329.89" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::~map (231,712 samples, 0.02%)</title><rect x="103.9" y="453" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="106.93" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_base (200,921 samples, 0.02%)</title><rect x="538.5" y="261" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="541.50" y="271.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (1,272,114 samples, 0.13%)</title><rect x="610.8" y="533" width="1.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="613.82" y="543.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (410,482 samples, 0.04%)</title><rect x="63.2" y="469" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="66.19" y="479.5" ></text>
</g>
<g >
<title>ns3::AttributeConstructionList::~AttributeConstructionList (332,038 samples, 0.03%)</title><rect x="540.1" y="293" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="543.06" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_M_move_assign (148,381 samples, 0.02%)</title><rect x="117.1" y="389" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="120.11" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::at (309,993 samples, 0.03%)</title><rect x="225.8" y="485" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="228.77" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_base (550,304 samples, 0.06%)</title><rect x="350.7" y="373" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="353.74" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;::_Rb_tree_iterator (124,409 samples, 0.01%)</title><rect x="508.5" y="517" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="511.46" y="527.5" ></text>
</g>
<g >
<title>ns3::TimeStep (329,548 samples, 0.03%)</title><rect x="278.8" y="501" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="281.79" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (148,226 samples, 0.02%)</title><rect x="125.3" y="213" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="128.35" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_ptr (155,635 samples, 0.02%)</title><rect x="171.8" y="373" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="174.77" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (347,372 samples, 0.04%)</title><rect x="104.5" y="389" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="107.52" y="399.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (193,911 samples, 0.02%)</title><rect x="104.0" y="357" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="106.96" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::_S_key (240,712 samples, 0.02%)</title><rect x="330.8" y="453" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="333.79" y="463.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::SimpleRefCount (152,002 samples, 0.02%)</title><rect x="159.9" y="405" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="162.94" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_ptr (204,057 samples, 0.02%)</title><rect x="528.1" y="245" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="531.08" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::operator* (791,920 samples, 0.08%)</title><rect x="496.5" y="549" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="499.50" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::push_back (234,240 samples, 0.02%)</title><rect x="461.6" y="309" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="464.55" y="319.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (833,507 samples, 0.09%)</title><rect x="698.5" y="501" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="701.48" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, double const&amp;, false&gt;::_M_head (200,778 samples, 0.02%)</title><rect x="748.3" y="421" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="751.28" y="431.5" ></text>
</g>
<g >
<title>ns3::operator* (1,238,991 samples, 0.13%)</title><rect x="407.3" y="517" width="1.0" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="410.31" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (344,519 samples, 0.04%)</title><rect x="592.8" y="245" width="0.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="595.76" y="255.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a1&lt;false, double const*, double*&gt; (200,338 samples, 0.02%)</title><rect x="238.8" y="197" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="241.83" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned short&gt; &gt;::allocate (378,466 samples, 0.04%)</title><rect x="218.8" y="421" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="221.77" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MatrixArray&lt;std::complex&lt;double&gt; &gt; const&gt;::Acquire (192,272 samples, 0.02%)</title><rect x="314.6" y="421" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="317.64" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Ptr (396,945 samples, 0.04%)</title><rect x="737.4" y="533" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="740.39" y="543.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (405,977 samples, 0.04%)</title><rect x="83.2" y="373" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="86.21" y="383.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetControlMessages[abi:cxx11] (5,327,384 samples, 0.55%)</title><rect x="354.4" y="549" width="4.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="357.43" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator= (252,993 samples, 0.03%)</title><rect x="604.1" y="309" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="607.07" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator= (127,305 samples, 0.01%)</title><rect x="593.2" y="261" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="596.21" y="271.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (152,454 samples, 0.02%)</title><rect x="456.7" y="261" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="459.65" y="271.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (74,700,874 samples, 7.70%)</title><rect x="516.5" y="453" width="60.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="519.51" y="463.5" >void n..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (343,413 samples, 0.04%)</title><rect x="654.2" y="421" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="657.16" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (203,782 samples, 0.02%)</title><rect x="750.3" y="565" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="753.27" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::_List_impl::_List_impl (374,981 samples, 0.04%)</title><rect x="162.5" y="373" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="165.45" y="383.5" ></text>
</g>
<g >
<title>unsigned long* std::copy&lt;unsigned long*, unsigned long*&gt; (260,141 samples, 0.03%)</title><rect x="248.3" y="421" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="251.30" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (719,320 samples, 0.07%)</title><rect x="668.3" y="501" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="671.32" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s::HarqStatus_e*, ns3::DlInfoListElement_s::HarqStatus_e&gt; (305,928 samples, 0.03%)</title><rect x="256.7" y="373" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="259.69" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, double&gt; &gt; (461,183 samples, 0.05%)</title><rect x="293.1" y="469" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="296.13" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::_M_erase_at_end (796,900 samples, 0.08%)</title><rect x="264.8" y="485" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="267.80" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (878,011 samples, 0.09%)</title><rect x="341.6" y="437" width="0.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="344.64" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_ptr (461,464 samples, 0.05%)</title><rect x="759.8" y="661" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="762.84" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (688,048 samples, 0.07%)</title><rect x="341.8" y="421" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="344.79" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt;::at (152,411 samples, 0.02%)</title><rect x="173.6" y="453" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="176.56" y="463.5" ></text>
</g>
<g >
<title>double std::reduce&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double, std::plus&lt;void&gt; &gt; (650,475 samples, 0.07%)</title><rect x="602.3" y="309" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="605.31" y="319.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (189,290 samples, 0.02%)</title><rect x="112.2" y="453" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="115.24" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::find (231,252 samples, 0.02%)</title><rect x="94.1" y="453" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="97.09" y="463.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::Begin (649,187 samples, 0.07%)</title><rect x="491.3" y="549" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="494.27" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::TbId_t, ns3::tbInfo_t&gt; &gt; (2,868,330 samples, 0.30%)</title><rect x="526.4" y="309" width="2.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="529.36" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (302,989 samples, 0.03%)</title><rect x="203.5" y="389" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="206.48" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;::operator (234,452 samples, 0.02%)</title><rect x="297.6" y="469" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="300.59" y="479.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_Bvector_impl_data::_M_reset (153,274 samples, 0.02%)</title><rect x="196.3" y="437" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="199.26" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_S_key (418,561 samples, 0.04%)</title><rect x="298.2" y="421" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="301.19" y="431.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::GetReferenceCount (169,529 samples, 0.02%)</title><rect x="450.5" y="245" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="453.55" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt; &gt;::allocate (199,176 samples, 0.02%)</title><rect x="293.2" y="421" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="296.16" y="431.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (231,298 samples, 0.02%)</title><rect x="43.1" y="629" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="46.13" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt; std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt;, void&gt; (2,564,176 samples, 0.26%)</title><rect x="128.3" y="517" width="2.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="131.32" y="527.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (1,482,842 samples, 0.15%)</title><rect x="108.3" y="501" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="111.32" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (8,236,952 samples, 0.85%)</title><rect x="544.5" y="309" width="6.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="547.49" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::~_List_base (248,847 samples, 0.03%)</title><rect x="540.1" y="261" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="543.13" y="271.5" ></text>
</g>
<g >
<title>ns3::Node::GetId (131,119 samples, 0.01%)</title><rect x="651.3" y="517" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="654.29" y="527.5" ></text>
</g>
<g >
<title>ns3::EventImpl::Invoke (2,105,662 samples, 0.22%)</title><rect x="15.5" y="725" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.45" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_mbegin (194,122 samples, 0.02%)</title><rect x="169.8" y="405" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="172.80" y="415.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (73,085,767 samples, 7.54%)</title><rect x="517.8" y="405" width="58.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="520.81" y="415.5" >std::e..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (128,242 samples, 0.01%)</title><rect x="590.7" y="213" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="593.71" y="223.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Add (831,259 samples, 0.09%)</title><rect x="13.1" y="389" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="16.10" y="399.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (1,452,841 samples, 0.15%)</title><rect x="499.0" y="501" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="501.99" y="511.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (1,343,666 samples, 0.14%)</title><rect x="355.2" y="517" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="358.17" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (346,160 samples, 0.04%)</title><rect x="356.5" y="517" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="359.54" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (552,616 samples, 0.06%)</title><rect x="667.5" y="357" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="670.51" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (229,336 samples, 0.02%)</title><rect x="96.9" y="437" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="99.94" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (425,223 samples, 0.04%)</title><rect x="104.5" y="421" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="107.45" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters, std::allocator&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; &gt;::clear (1,175,215 samples, 0.12%)</title><rect x="263.1" y="517" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="266.12" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned short*&gt; (155,477 samples, 0.02%)</title><rect x="473.1" y="245" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="476.13" y="255.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (1,924,172 samples, 0.20%)</title><rect x="706.3" y="469" width="1.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="709.29" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt;::allocate (145,308 samples, 0.01%)</title><rect x="261.1" y="293" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="264.05" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, double&gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, ns3::Ptr&lt;ns3::SpectrumPhy const&gt;, double&gt; &gt; &gt;::end (161,602 samples, 0.02%)</title><rect x="746.7" y="533" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="749.70" y="543.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::FindAndEventuallyAddTxSpectrumModel (2,239,555 samples, 0.23%)</title><rect x="649.5" y="517" width="1.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="652.49" y="527.5" ></text>
</g>
<g >
<title>unsigned short* std::__copy_move_a1&lt;true, unsigned short*, unsigned short*&gt; (140,404 samples, 0.01%)</title><rect x="253.5" y="357" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="256.47" y="367.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (431,105 samples, 0.04%)</title><rect x="409.2" y="533" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="412.18" y="543.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::__copy_move_a&lt;false, std::_Bit_iterator, std::_Bit_iterator&gt; (749,593 samples, 0.08%)</title><rect x="197.4" y="421" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="200.38" y="431.5" ></text>
</g>
<g >
<title>ns3::ConstantPositionMobilityModel::DoGetPosition (233,482 samples, 0.02%)</title><rect x="319.8" y="485" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="322.82" y="495.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_List_iterator (155,009 samples, 0.02%)</title><rect x="165.5" y="341" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="168.51" y="351.5" ></text>
</g>
<g >
<title>__dynamic_cast (157,542 samples, 0.02%)</title><rect x="735.1" y="517" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="738.07" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;double&gt;::__value, void&gt;::__type std::__fill_a1&lt;double*, double&gt; (229,101 samples, 0.02%)</title><rect x="301.6" y="325" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="304.55" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::splice (416,066 samples, 0.04%)</title><rect x="346.6" y="469" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="349.64" y="479.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (147,616 samples, 0.02%)</title><rect x="34.3" y="389" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="37.30" y="399.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (234,294 samples, 0.02%)</title><rect x="510.0" y="453" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="512.98" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (627,016 samples, 0.06%)</title><rect x="539.6" y="229" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="542.55" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::_M_allocate (311,673 samples, 0.03%)</title><rect x="210.8" y="453" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="213.83" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (872,797 samples, 0.09%)</title><rect x="482.4" y="325" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="485.35" y="335.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (433,103 samples, 0.04%)</title><rect x="325.0" y="389" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="327.97" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;*, std::vector&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt; &gt; &gt; &gt;::operator* (125,378 samples, 0.01%)</title><rect x="576.9" y="517" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="579.86" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_max_size (166,200 samples, 0.02%)</title><rect x="597.5" y="213" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="600.46" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_check_len (802,727 samples, 0.08%)</title><rect x="693.4" y="453" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="696.39" y="463.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Now (234,121 samples, 0.02%)</title><rect x="408.6" y="501" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="411.63" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (233,971 samples, 0.02%)</title><rect x="483.9" y="485" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="486.91" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_impl::_Vector_impl (396,334 samples, 0.04%)</title><rect x="261.2" y="357" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="264.17" y="367.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (495,402 samples, 0.05%)</title><rect x="340.8" y="405" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="343.78" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt;::deallocate (278,972 samples, 0.03%)</title><rect x="291.0" y="341" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="293.95" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::_M_end (344,004 samples, 0.04%)</title><rect x="28.4" y="309" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="31.38" y="319.5" ></text>
</g>
<g >
<title>ns3::SimpleUeComponentCarrierManager::DoReceivePdu (2,187,838 samples, 0.23%)</title><rect x="435.7" y="309" width="1.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="438.71" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::push_back (465,302 samples, 0.05%)</title><rect x="546.0" y="85" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="549.01" y="95.5" ></text>
</g>
<g >
<title>ns3::Packet::Copy (174,202 samples, 0.02%)</title><rect x="644.7" y="453" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="647.66" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; const&amp;&gt; (2,568,842 samples, 0.26%)</title><rect x="352.4" y="517" width="2.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="355.36" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, ns3::Ptr&lt;ns3::PacketBurst&gt;, false&gt;::~_Head_base (267,500 samples, 0.03%)</title><rect x="281.4" y="437" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="284.38" y="447.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (662,282 samples, 0.07%)</title><rect x="126.8" y="373" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="129.80" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_put_node (124,394 samples, 0.01%)</title><rect x="776.2" y="341" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="779.16" y="351.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (1,098,325 samples, 0.11%)</title><rect x="440.1" y="405" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="443.05" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_ptr (154,865 samples, 0.02%)</title><rect x="245.0" y="405" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="248.03" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::operator= (879,906 samples, 0.09%)</title><rect x="621.8" y="421" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="624.76" y="431.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters*, ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; (1,058,935 samples, 0.11%)</title><rect x="263.2" y="485" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="266.21" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (603,034 samples, 0.06%)</title><rect x="499.6" y="469" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="502.64" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; const&amp;&gt; (310,137 samples, 0.03%)</title><rect x="104.5" y="357" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="107.52" y="367.5" ></text>
</g>
<g >
<title>ns3::PhichListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::PhichListElement_s const*, std::vector&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt; &gt;, ns3::PhichListElement_s*, ns3::PhichListElement_s&gt; (202,017 samples, 0.02%)</title><rect x="227.5" y="437" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="230.50" y="447.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::LteSpectrumSignalParametersDlCtrlFrame (729,950 samples, 0.08%)</title><rect x="113.8" y="453" width="0.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="116.83" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::AttributeConstructionList::Item, std::allocator&lt;ns3::AttributeConstructionList::Item&gt; &gt;::~_List_base (194,036 samples, 0.02%)</title><rect x="372.1" y="469" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="375.07" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::end (233,069 samples, 0.02%)</title><rect x="218.1" y="453" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="221.06" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::~tuple (384,441 samples, 0.04%)</title><rect x="281.3" y="485" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="284.29" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_lower_bound (741,372 samples, 0.08%)</title><rect x="566.0" y="197" width="0.6" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="568.96" y="207.5" ></text>
</g>
<g >
<title>ns3::LteUeMac::DoReceiveLteControlMessage (45,310,234 samples, 4.67%)</title><rect x="535.5" y="341" width="36.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="538.47" y="351.5" >ns3..</text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (155,456 samples, 0.02%)</title><rect x="341.2" y="469" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="344.24" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (757,885 samples, 0.08%)</title><rect x="391.9" y="549" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="394.90" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_S_right (160,926 samples, 0.02%)</title><rect x="169.0" y="405" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="171.96" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_put_node (503,112 samples, 0.05%)</title><rect x="378.0" y="309" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="381.00" y="319.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumPhy::StartTxDlCtrlFrame (5,343,400 samples, 0.55%)</title><rect x="112.5" y="517" width="4.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="115.48" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::RxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::begin (295,643 samples, 0.03%)</title><rect x="329.8" y="501" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="332.77" y="511.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::MacCeValue_u (300,339 samples, 0.03%)</title><rect x="688.8" y="453" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="691.79" y="463.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a1&lt;false, ns3::HarqProcessInfoElement_t const*, ns3::HarqProcessInfoElement_t*&gt; (124,767 samples, 0.01%)</title><rect x="591.7" y="181" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="594.70" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (488,113 samples, 0.05%)</title><rect x="640.5" y="405" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="643.55" y="415.5" ></text>
</g>
<g >
<title>unsigned short* std::__miter_base&lt;unsigned short*&gt; (233,316 samples, 0.02%)</title><rect x="253.3" y="357" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="256.26" y="367.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (267,489 samples, 0.03%)</title><rect x="111.9" y="405" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="114.93" y="415.5" ></text>
</g>
<g >
<title>ns3::Simulator::Run (22,443,594 samples, 2.31%)</title><rect x="17.2" y="805" width="18.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="20.17" y="815.5" ></text>
</g>
<g >
<title>ns3::LteInterference::EndRx (38,592,765 samples, 3.98%)</title><rect x="576.7" y="549" width="31.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="579.70" y="559.5" >ns..</text>
</g>
<g >
<title>std::__is_constant_evaluated (235,304 samples, 0.02%)</title><rect x="270.3" y="357" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="273.32" y="367.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (8,821,901 samples, 0.91%)</title><rect x="770.2" y="693" width="7.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="773.19" y="703.5" ></text>
</g>
<g >
<title>ns3::EventId::operator= (817,259 samples, 0.08%)</title><rect x="307.9" y="517" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="310.92" y="527.5" ></text>
</g>
<g >
<title>std::function&lt;void  (563,988 samples, 0.06%)</title><rect x="640.5" y="437" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="643.49" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::_Vector_base (274,244 samples, 0.03%)</title><rect x="174.5" y="453" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="177.50" y="463.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (20,436,391 samples, 2.11%)</title><rect x="91.8" y="517" width="16.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="94.81" y="527.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::__copy_move_a1&lt;false, std::_Bit_const_iterator, std::_Bit_iterator&gt; (419,348 samples, 0.04%)</title><rect x="199.3" y="389" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="202.27" y="399.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; const&amp;&gt; (2,970,837 samples, 0.31%)</title><rect x="237.9" y="357" width="2.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="240.93" y="367.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (186,142 samples, 0.02%)</title><rect x="648.9" y="357" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="651.88" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_drop_node (239,459 samples, 0.02%)</title><rect x="232.9" y="421" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="235.92" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;3ul, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (340,851 samples, 0.04%)</title><rect x="340.9" y="325" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="343.90" y="335.5" ></text>
</g>
<g >
<title>double* std::__fill_n_a&lt;double*, unsigned long, double&gt; (203,543 samples, 0.02%)</title><rect x="730.0" y="357" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="732.99" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (417,874 samples, 0.04%)</title><rect x="245.9" y="469" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="248.94" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (510,421 samples, 0.05%)</title><rect x="329.3" y="501" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="332.33" y="511.5" ></text>
</g>
<g >
<title>ns3::Time::GetMilliSeconds (370,485 samples, 0.04%)</title><rect x="493.6" y="549" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="496.61" y="559.5" ></text>
</g>
<g >
<title>void ns3::Simulator::ScheduleWithContext&lt;void  (302,319 samples, 0.03%)</title><rect x="614.1" y="517" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="617.11" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::operator (158,234 samples, 0.02%)</title><rect x="737.3" y="533" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="740.27" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::~Ptr (1,871,525 samples, 0.19%)</title><rect x="501.4" y="485" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="504.42" y="495.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (232,342 samples, 0.02%)</title><rect x="391.0" y="549" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="394.02" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;&amp; std::__get_helper&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; (437,377 samples, 0.05%)</title><rect x="754.4" y="581" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="757.42" y="591.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::Ptr (158,937 samples, 0.02%)</title><rect x="716.4" y="485" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="719.45" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (461,688 samples, 0.05%)</title><rect x="108.5" y="421" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="111.50" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::allocate (258,278 samples, 0.03%)</title><rect x="334.5" y="325" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="337.53" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (144,500 samples, 0.01%)</title><rect x="200.0" y="437" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="203.04" y="447.5" ></text>
</g>
<g >
<title>ns3::LteHelper::InstallEnbDevice (397,186 samples, 0.04%)</title><rect x="35.8" y="773" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="38.80" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_M_lower_bound (1,161,944 samples, 0.12%)</title><rect x="235.7" y="453" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="238.67" y="463.5" ></text>
</g>
<g >
<title>signed char&amp; std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::emplace_back&lt;signed char&gt; (645,216 samples, 0.07%)</title><rect x="533.0" y="325" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="536.04" y="335.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedUlMacCtrlInfoReq (867,311 samples, 0.09%)</title><rect x="225.5" y="517" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="228.49" y="527.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*, unsigned char&gt; (190,052 samples, 0.02%)</title><rect x="443.8" y="309" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="446.80" y="319.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedUlConfigInd (5,236,229 samples, 0.54%)</title><rect x="227.4" y="485" width="4.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="230.35" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt;::vector (853,778 samples, 0.09%)</title><rect x="140.9" y="453" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="143.86" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, double const&amp;, double const&amp;, double const&amp;&gt;::_Tuple_impl (1,012,471 samples, 0.10%)</title><rect x="749.2" y="485" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="752.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (264,203 samples, 0.03%)</title><rect x="195.4" y="437" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="198.39" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::_Vector_base (386,549 samples, 0.04%)</title><rect x="161.7" y="389" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="164.70" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (3,678,586 samples, 0.38%)</title><rect x="237.4" y="405" width="2.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="240.39" y="415.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (1,019,777 samples, 0.11%)</title><rect x="412.1" y="485" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="415.13" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::~list (1,583,725 samples, 0.16%)</title><rect x="392.5" y="549" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="395.54" y="559.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::RefreshHarqProcesses (2,902,711 samples, 0.30%)</title><rect x="178.9" y="485" width="2.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="181.89" y="495.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetControlMessages (654,203 samples, 0.07%)</title><rect x="230.2" y="421" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="233.16" y="431.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::LteSpectrumSignalParametersDlCtrlFrame (1,452,066 samples, 0.15%)</title><rect x="342.7" y="501" width="1.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="345.69" y="511.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (153,997 samples, 0.02%)</title><rect x="637.7" y="469" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="640.66" y="479.5" ></text>
</g>
<g >
<title>ns3::Object::Check (252,008 samples, 0.03%)</title><rect x="543.1" y="277" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="546.14" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_begin (466,586 samples, 0.05%)</title><rect x="169.6" y="421" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="172.58" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::deallocate (229,384 samples, 0.02%)</title><rect x="392.3" y="469" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="395.26" y="479.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetAttributeN (1,401,356 samples, 0.14%)</title><rect x="540.9" y="261" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="543.86" y="271.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;, ns3::BuildDataListElement_s*&gt; (515,194 samples, 0.05%)</title><rect x="141.9" y="421" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="144.92" y="431.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::Callback&lt;void  (1,074,961 samples, 0.11%)</title><rect x="725.7" y="421" width="0.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="728.72" y="431.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (1,354,907 samples, 0.14%)</title><rect x="259.5" y="309" width="1.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="262.52" y="319.5" ></text>
</g>
<g >
<title>ns3::LteControlMessage::LteControlMessage (383,602 samples, 0.04%)</title><rect x="159.8" y="421" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="162.75" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; ns3::Create&lt;ns3::Packet, unsigned int&amp;&gt; (1,604,788 samples, 0.17%)</title><rect x="14.1" y="405" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.13" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (157,826 samples, 0.02%)</title><rect x="126.6" y="357" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="129.55" y="367.5" ></text>
</g>
<g >
<title>unsigned short const* std::__niter_base&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; (245,405 samples, 0.03%)</title><rect x="475.0" y="197" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="478.00" y="207.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (1,068,378 samples, 0.11%)</title><rect x="87.2" y="501" width="0.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="90.23" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (183,222 samples, 0.02%)</title><rect x="308.4" y="405" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="311.43" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (871,347 samples, 0.09%)</title><rect x="344.9" y="501" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="347.86" y="511.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (896,241 samples, 0.09%)</title><rect x="772.8" y="469" width="0.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="775.83" y="479.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (885,817,061 samples, 91.34%)</title><rect x="45.7" y="629" width="712.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="48.74" y="639.5" >void std::_Bind&lt;void </text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (749,843 samples, 0.08%)</title><rect x="125.0" y="325" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="127.95" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_M_range_check (201,283 samples, 0.02%)</title><rect x="205.8" y="469" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="208.81" y="479.5" ></text>
</g>
<g >
<title>ns3::Packet::GetSize (289,398 samples, 0.03%)</title><rect x="555.4" y="261" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="558.37" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::base (188,865 samples, 0.02%)</title><rect x="354.5" y="517" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="357.52" y="527.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;ns3::LteUePhy*, unsigned int, unsigned int&gt; &gt;::type&amp; std::get&lt;0ul, ns3::LteUePhy*, unsigned int, unsigned int&gt; (225,116 samples, 0.02%)</title><rect x="753.8" y="597" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="756.78" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (725,734 samples, 0.07%)</title><rect x="531.1" y="341" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="534.09" y="351.5" ></text>
</g>
<g >
<title>operator new (195,774 samples, 0.02%)</title><rect x="210.9" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="213.92" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_begin (157,856 samples, 0.02%)</title><rect x="189.4" y="453" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="192.39" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUePhy&gt; ns3::CreateObject&lt;ns3::LteUePhy, ns3::Ptr&lt;ns3::LteSpectrumPhy&gt;&amp;, ns3::Ptr&lt;ns3::LteSpectrumPhy&gt;&amp;&gt; (126,589 samples, 0.01%)</title><rect x="36.4" y="741" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="39.40" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_M_lower_bound (729,846 samples, 0.08%)</title><rect x="298.1" y="437" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="301.10" y="447.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Copy (1,952,922 samples, 0.20%)</title><rect x="71.2" y="453" width="1.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="74.21" y="463.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;ns3::MacCeListElement_s*&gt;::move_iterator (159,225 samples, 0.02%)</title><rect x="129.9" y="453" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="132.93" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersUlSrsFrame&gt;::~Ptr (198,752 samples, 0.02%)</title><rect x="737.1" y="533" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="740.11" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::allocate (380,371 samples, 0.04%)</title><rect x="363.3" y="405" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="366.34" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (356,299 samples, 0.04%)</title><rect x="405.2" y="501" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="408.18" y="511.5" ></text>
</g>
<g >
<title>double* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (583,431 samples, 0.06%)</title><rect x="324.9" y="437" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="327.85" y="447.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (323,506 samples, 0.03%)</title><rect x="759.1" y="709" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="762.06" y="719.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (187,232 samples, 0.02%)</title><rect x="300.7" y="373" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="303.67" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet const&gt;::Acquire (156,632 samples, 0.02%)</title><rect x="492.5" y="533" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="495.53" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::deallocate (164,716 samples, 0.02%)</title><rect x="728.4" y="373" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="731.43" y="383.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, bool&gt; &gt;::type std::map&lt;unsigned short, ns3::DlInfoListElement_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::insert&lt;std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt; (2,356,316 samples, 0.24%)</title><rect x="503.0" y="549" width="1.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="506.02" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_M_lower_bound (159,330 samples, 0.02%)</title><rect x="104.3" y="437" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="107.33" y="447.5" ></text>
</g>
<g >
<title>ns3::Seconds (322,115 samples, 0.03%)</title><rect x="427.6" y="245" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="430.65" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_impl::_List_impl (313,999 samples, 0.03%)</title><rect x="354.7" y="501" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="357.73" y="511.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (156,421 samples, 0.02%)</title><rect x="484.8" y="437" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="487.85" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::vector (3,232,067 samples, 0.33%)</title><rect x="512.3" y="549" width="2.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="515.30" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteChunkProcessor&gt;::operator (151,530 samples, 0.02%)</title><rect x="717.1" y="501" width="0.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="720.11" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::max_size (408,133 samples, 0.04%)</title><rect x="480.5" y="245" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="483.49" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp;&gt; (232,855 samples, 0.02%)</title><rect x="722.0" y="421" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="724.96" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_lower_bound (592,305 samples, 0.06%)</title><rect x="11.8" y="341" width="0.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="14.77" y="351.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (711,242 samples, 0.07%)</title><rect x="573.7" y="309" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="576.75" y="319.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::operator (324,769 samples, 0.03%)</title><rect x="611.9" y="517" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="614.94" y="527.5" ></text>
</g>
<g >
<title>ns3::RlcTag::Deserialize (396,822 samples, 0.04%)</title><rect x="424.7" y="229" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="427.68" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::find (727,246 samples, 0.07%)</title><rect x="223.2" y="469" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="226.17" y="479.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoTransmitPdu (1,327,529 samples, 0.14%)</title><rect x="11.4" y="389" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="14.43" y="399.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, void  (15,223,770 samples, 1.57%)</title><rect x="471.5" y="373" width="12.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="474.54" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (146,330 samples, 0.02%)</title><rect x="653.8" y="325" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="656.75" y="335.5" ></text>
</g>
<g >
<title>malloc (598,171 samples, 0.06%)</title><rect x="655.0" y="357" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="658.04" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::_S_max_size (312,752 samples, 0.03%)</title><rect x="211.2" y="421" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="214.23" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (126,450 samples, 0.01%)</title><rect x="83.9" y="389" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.90" y="399.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const&amp;&gt; (2,282,165 samples, 0.24%)</title><rect x="723.3" y="485" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="726.27" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Acquire (219,194 samples, 0.02%)</title><rect x="705.1" y="517" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="708.06" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Auto_node::_M_insert (235,870 samples, 0.02%)</title><rect x="192.0" y="453" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="195.04" y="463.5" ></text>
</g>
<g >
<title>decltype  (620,289 samples, 0.06%)</title><rect x="384.8" y="421" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="387.82" y="431.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::MacCeListElement_s&gt; (679,734 samples, 0.07%)</title><rect x="264.9" y="405" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="267.90" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned short, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::end (241,739 samples, 0.02%)</title><rect x="462.6" y="357" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="465.62" y="367.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::PacketMetadata (1,833,242 samples, 0.19%)</title><rect x="557.4" y="229" width="1.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="560.37" y="239.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (1,513,714 samples, 0.16%)</title><rect x="549.2" y="229" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="552.20" y="239.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt;::Delete (127,422 samples, 0.01%)</title><rect x="61.4" y="485" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="64.37" y="495.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate (464,044 samples, 0.05%)</title><rect x="201.9" y="453" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="204.95" y="463.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*, ns3::Ptr&lt;ns3::Object&gt; &gt; (194,998 samples, 0.02%)</title><rect x="165.3" y="325" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="168.29" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CreateObject&lt;ns3::PacketBurst&gt; (375,534 samples, 0.04%)</title><rect x="119.3" y="517" width="0.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="122.32" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const&amp;&gt; (228,459 samples, 0.02%)</title><rect x="358.5" y="517" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="361.53" y="527.5" ></text>
</g>
<g >
<title> (316,802 samples, 0.03%)</title><rect x="675.1" y="469" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="678.11" y="479.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (597,366 samples, 0.06%)</title><rect x="726.8" y="485" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="729.78" y="495.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned char*, unsigned long&gt; (918,885 samples, 0.09%)</title><rect x="460.3" y="213" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="463.26" y="223.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;unsigned char*, unsigned char&gt; (539,616 samples, 0.06%)</title><rect x="460.5" y="165" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="463.50" y="175.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Scheduler&gt;::operator (200,105 samples, 0.02%)</title><rect x="778.3" y="741" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="781.35" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned char, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::find (1,200,654 samples, 0.12%)</title><rect x="244.5" y="485" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="247.47" y="495.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlTriggerReqParameters::~SchedUlTriggerReqParameters (511,776 samples, 0.05%)</title><rect x="133.9" y="517" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="136.87" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::VendorSpecificListElement_s*, ns3::VendorSpecificListElement_s&gt; (198,417 samples, 0.02%)</title><rect x="25.2" y="309" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="28.20" y="319.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::MacCeListElement_s, ns3::MacCeListElement_s&amp;&gt; (432,867 samples, 0.04%)</title><rect x="129.2" y="421" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="132.18" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_S_maximum (155,370 samples, 0.02%)</title><rect x="236.9" y="421" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="239.94" y="431.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedUlCqiInfoReq (6,622,886 samples, 0.68%)</title><rect x="220.2" y="501" width="5.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="223.16" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (495,697 samples, 0.05%)</title><rect x="686.9" y="453" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="689.93" y="463.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoTransmitPdu (5,821,892 samples, 0.60%)</title><rect x="19.6" y="405" width="4.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="22.60" y="415.5" ></text>
</g>
<g >
<title>ns3::EventImpl*&amp;&amp; std::forward&lt;ns3::EventImpl*&gt; (126,251 samples, 0.01%)</title><rect x="661.5" y="309" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="664.49" y="319.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartFrame (2,983,151 samples, 0.31%)</title><rect x="17.2" y="597" width="2.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="20.17" y="607.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (825,096 samples, 0.09%)</title><rect x="306.2" y="453" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="309.19" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumConverter::Convert (1,680,933 samples, 0.17%)</title><rect x="326.2" y="501" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="329.17" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3,263,000 samples, 0.34%)</title><rect x="418.8" y="421" width="2.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="421.77" y="431.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (831,586 samples, 0.09%)</title><rect x="573.6" y="341" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="576.65" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (768,784 samples, 0.08%)</title><rect x="239.2" y="261" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="242.19" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::resize (276,956 samples, 0.03%)</title><rect x="105.6" y="469" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="108.60" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::GetSize (4,408,653 samples, 0.45%)</title><rect x="367.2" y="533" width="3.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="370.18" y="543.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::CqiListElement_s&gt; (416,767 samples, 0.04%)</title><rect x="106.8" y="389" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="109.77" y="399.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumPhy&gt;::Ptr (660,447 samples, 0.07%)</title><rect x="578.4" y="405" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="581.35" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocate (352,577 samples, 0.04%)</title><rect x="692.8" y="421" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="695.85" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteEnbPhy*&gt;::_M_head (231,471 samples, 0.02%)</title><rect x="752.5" y="565" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="755.46" y="575.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::allocate (185,442 samples, 0.02%)</title><rect x="318.9" y="277" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="321.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::end (310,746 samples, 0.03%)</title><rect x="32.3" y="325" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="35.32" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlHarqFeedbackLteControlMessage&gt; ns3::DynamicCast&lt;ns3::DlHarqFeedbackLteControlMessage, ns3::LteControlMessage&gt; (124,981 samples, 0.01%)</title><rect x="462.3" y="357" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="465.26" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (153,333 samples, 0.02%)</title><rect x="616.0" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="618.99" y="431.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a2&lt;false, int const*, int*&gt; (275,574 samples, 0.03%)</title><rect x="698.9" y="437" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="701.93" y="447.5" ></text>
</g>
<g >
<title>int* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (909,481 samples, 0.09%)</title><rect x="698.4" y="517" width="0.8" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="701.42" y="527.5" ></text>
</g>
<g >
<title>ns3::TimeStep (193,847 samples, 0.02%)</title><rect x="155.6" y="357" width="0.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="158.59" y="367.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::StartTx (4,243,524 samples, 0.44%)</title><rect x="113.1" y="501" width="3.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="116.09" y="511.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (459,117 samples, 0.05%)</title><rect x="214.2" y="421" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="217.24" y="431.5" ></text>
</g>
<g >
<title>ns3::Simulator::DoScheduleNow (382,100 samples, 0.04%)</title><rect x="53.0" y="533" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="55.95" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (2,881,652 samples, 0.30%)</title><rect x="451.6" y="197" width="2.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="454.58" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::~vector (686,206 samples, 0.07%)</title><rect x="696.9" y="501" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="699.90" y="511.5" ></text>
</g>
<g >
<title>malloc (158,423 samples, 0.02%)</title><rect x="537.1" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="540.08" y="287.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;4ul, std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; &gt;::type&amp; std::get&lt;4ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt; (350,980 samples, 0.04%)</title><rect x="757.1" y="597" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="760.12" y="607.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;double const&amp;, double const&amp;, double const&amp;&gt; &gt;::type const&amp; std::get&lt;0ul, double const&amp;, double const&amp;, double const&amp;&gt; (744,395 samples, 0.08%)</title><rect x="748.4" y="485" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="751.44" y="495.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::EventImpl&gt;::Delete (489,663 samples, 0.05%)</title><rect x="308.2" y="469" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="311.19" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::vector (1,538,877 samples, 0.16%)</title><rect x="124.9" y="373" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="127.86" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::lower_bound (305,767 samples, 0.03%)</title><rect x="156.5" y="405" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="159.53" y="415.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (2,983,151 samples, 0.31%)</title><rect x="17.2" y="549" width="2.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="20.17" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_create_storage (156,029 samples, 0.02%)</title><rect x="228.9" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="231.92" y="431.5" ></text>
</g>
<g >
<title>ns3::LteChunkProcessor::End (324,769 samples, 0.03%)</title><rect x="611.9" y="533" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="614.94" y="543.5" ></text>
</g>
<g >
<title>unsigned short* std::__uninitialized_copy_a&lt;std::move_iterator&lt;unsigned short*&gt;, unsigned short*, unsigned short&gt; (154,651 samples, 0.02%)</title><rect x="106.3" y="421" width="0.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="109.25" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,212,692 samples, 0.13%)</title><rect x="306.9" y="469" width="1.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="309.95" y="479.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::Packet&gt;::Delete (4,346,874 samples, 0.45%)</title><rect x="545.6" y="149" width="3.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="548.61" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::operator* (162,772 samples, 0.02%)</title><rect x="477.3" y="309" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="480.27" y="319.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::construct&lt;ns3::CqiListElement_s, ns3::CqiListElement_s const&amp;&gt; (234,240 samples, 0.02%)</title><rect x="461.6" y="293" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="464.55" y="303.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (798,843 samples, 0.08%)</title><rect x="620.3" y="517" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="623.30" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::tuple&lt;ns3::MultiModelSpectrumChannel*&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, true, true&gt; (245,362 samples, 0.03%)</title><rect x="87.4" y="437" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="90.39" y="447.5" ></text>
</g>
<g >
<title>ns3::operator+ (598,044 samples, 0.06%)</title><rect x="409.6" y="533" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="412.56" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (323,190 samples, 0.03%)</title><rect x="552.4" y="197" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="555.39" y="207.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Recycle (849,631 samples, 0.09%)</title><rect x="548.2" y="101" width="0.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="551.16" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_insert_node (154,048 samples, 0.02%)</title><rect x="192.1" y="437" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="195.10" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt; &gt; &gt; &gt;::end (163,732 samples, 0.02%)</title><rect x="80.1" y="501" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="83.11" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_base (341,838 samples, 0.04%)</title><rect x="503.7" y="373" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="506.72" y="383.5" ></text>
</g>
<g >
<title>ns3::UlDciListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlDciListElement_s const*, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, ns3::UlDciListElement_s*&gt; (160,843 samples, 0.02%)</title><rect x="228.2" y="405" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="231.19" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt; (1,129,994 samples, 0.12%)</title><rect x="503.1" y="485" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="506.11" y="495.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (201,088 samples, 0.02%)</title><rect x="343.0" y="469" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="346.04" y="479.5" ></text>
</g>
<g >
<title>ns3::ObjectBase::~ObjectBase (422,911 samples, 0.04%)</title><rect x="379.0" y="293" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="381.98" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (1,013,985 samples, 0.10%)</title><rect x="776.4" y="485" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="779.41" y="495.5" ></text>
</g>
<g >
<title>int* std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (730,011 samples, 0.08%)</title><rect x="398.8" y="485" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="401.81" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (2,271,955 samples, 0.23%)</title><rect x="412.1" y="501" width="1.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="415.05" y="511.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::UlDciLteControlMessage&gt;* std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_create_node&lt;ns3::UlDciLteControlMessage const&amp;&gt; (1,556,182 samples, 0.16%)</title><rect x="287.2" y="469" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="290.21" y="479.5" ></text>
</g>
<g >
<title>unsigned char* std::__niter_base&lt;unsigned char*&gt; (154,843 samples, 0.02%)</title><rect x="694.2" y="421" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="697.21" y="431.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (695,882 samples, 0.07%)</title><rect x="334.7" y="357" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="337.73" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_allocate (417,726 samples, 0.04%)</title><rect x="520.1" y="293" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="523.09" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::_M_lower_bound (856,900 samples, 0.09%)</title><rect x="181.8" y="437" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="184.76" y="447.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s::~HigherLayerSelected_s (200,884 samples, 0.02%)</title><rect x="586.5" y="293" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="589.54" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::~vector (460,931 samples, 0.05%)</title><rect x="472.9" y="277" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="475.88" y="287.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSubframeIndication (178,609,510 samples, 18.42%)</title><rect x="123.4" y="533" width="143.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="126.39" y="543.5" >ns3::LteEnbMac::Do..</text>
</g>
<g >
<title>ns3::LteRadioBearerTag::~LteRadioBearerTag (271,006 samples, 0.03%)</title><rect x="20.5" y="357" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="23.52" y="367.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::DoSendMacPdu (663,786 samples, 0.07%)</title><rect x="19.8" y="341" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="22.79" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (127,422 samples, 0.01%)</title><rect x="61.4" y="453" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="64.37" y="463.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (2,769,515 samples, 0.29%)</title><rect x="62.2" y="533" width="2.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="65.17" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (827,732 samples, 0.09%)</title><rect x="774.0" y="277" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="777.05" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (155,450 samples, 0.02%)</title><rect x="677.0" y="469" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="680.02" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_erase_at_end (1,008,706 samples, 0.10%)</title><rect x="254.9" y="485" width="0.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="257.91" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::~vector (264,265 samples, 0.03%)</title><rect x="461.2" y="277" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="464.25" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::_M_lower_bound (577,659 samples, 0.06%)</title><rect x="176.9" y="437" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="179.91" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s*&gt; (886,663 samples, 0.09%)</title><rect x="132.4" y="469" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="135.37" y="479.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetAttributeN (231,508 samples, 0.02%)</title><rect x="19.4" y="405" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="22.36" y="415.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="645" width="18.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="20.17" y="655.5" ></text>
</g>
<g >
<title>decltype  (241,010 samples, 0.02%)</title><rect x="452.8" y="37" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="455.83" y="47.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::construct&lt;ns3::Buffer::Data*, ns3::Buffer::Data* const&amp;&gt; (315,007 samples, 0.03%)</title><rect x="452.2" y="53" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="455.23" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (231,712 samples, 0.02%)</title><rect x="103.9" y="437" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="106.93" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_M_lower_bound (280,068 samples, 0.03%)</title><rect x="552.4" y="181" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="555.39" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (161,543 samples, 0.02%)</title><rect x="671.5" y="501" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="674.52" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::_M_valptr (240,927 samples, 0.02%)</title><rect x="691.4" y="437" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="694.43" y="447.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedUlTriggerReq (34,427,946 samples, 3.55%)</title><rect x="226.2" y="501" width="27.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="229.21" y="511.5" >n..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::find (1,004,495 samples, 0.10%)</title><rect x="241.7" y="469" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="244.69" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::~map (916,115 samples, 0.09%)</title><rect x="193.1" y="485" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="196.09" y="495.5" ></text>
</g>
<g >
<title>std::isnan (190,930 samples, 0.02%)</title><rect x="703.1" y="501" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="706.08" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (904,852 samples, 0.09%)</title><rect x="594.3" y="293" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="597.30" y="303.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (240,418 samples, 0.02%)</title><rect x="611.3" y="469" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="614.35" y="479.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::UlReceiveMacCe (4,588,238 samples, 0.47%)</title><rect x="457.3" y="309" width="3.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="460.31" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::LteSpectrumModelId, ns3::Ptr&lt;ns3::SpectrumModel&gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (1,471,073 samples, 0.15%)</title><rect x="675.4" y="485" width="1.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="678.40" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; std::map&lt;unsigned short, ns3::DlInfoListElement_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;unsigned short, ns3::DlInfoListElement_s&gt; &gt; (2,130,125 samples, 0.22%)</title><rect x="503.1" y="533" width="1.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="506.08" y="543.5" ></text>
</g>
<g >
<title>int* std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (798,977 samples, 0.08%)</title><rect x="698.5" y="485" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="701.51" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::_M_mbegin (165,062 samples, 0.02%)</title><rect x="55.1" y="437" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="58.06" y="447.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (191,353 samples, 0.02%)</title><rect x="118.5" y="453" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="121.50" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::vector (710,293 samples, 0.07%)</title><rect x="591.5" y="277" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="594.49" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::vector (4,008,340 samples, 0.41%)</title><rect x="258.7" y="389" width="3.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="261.70" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt;::vector (1,179,363 samples, 0.12%)</title><rect x="203.7" y="405" width="1.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="206.72" y="415.5" ></text>
</g>
<g >
<title>ns3::CalculateDistance (630,060 samples, 0.06%)</title><rect x="739.8" y="501" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="742.81" y="511.5" ></text>
</g>
<g >
<title>[libm.so.6] (270,399 samples, 0.03%)</title><rect x="227.1" y="453" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="230.10" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;::_M_ptr (317,676 samples, 0.03%)</title><rect x="183.7" y="453" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="186.67" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4,103,031 samples, 0.42%)</title><rect x="418.1" y="501" width="3.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="421.09" y="511.5" ></text>
</g>
<g >
<title>decltype  (426,539 samples, 0.04%)</title><rect x="335.0" y="325" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="337.95" y="335.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::Ptr (205,997 samples, 0.02%)</title><rect x="61.5" y="533" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="64.47" y="543.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (363,863 samples, 0.04%)</title><rect x="718.5" y="421" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="721.54" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_mbegin (279,426 samples, 0.03%)</title><rect x="433.2" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="436.23" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_deallocate (163,066 samples, 0.02%)</title><rect x="773.3" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="776.33" y="415.5" ></text>
</g>
<g >
<title>decltype  (523,193 samples, 0.05%)</title><rect x="547.1" y="53" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="550.15" y="63.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::pair&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; &gt;::type&amp;&amp; std::get&lt;0ul, unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (187,049 samples, 0.02%)</title><rect x="333.0" y="485" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="335.99" y="495.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Add (192,525 samples, 0.02%)</title><rect x="18.7" y="389" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.70" y="399.5" ></text>
</g>
<g >
<title>malloc (195,119 samples, 0.02%)</title><rect x="284.6" y="501" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="287.60" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (221,184 samples, 0.02%)</title><rect x="714.7" y="453" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="717.68" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::PhichListElement_s, std::allocator&lt;ns3::PhichListElement_s&gt; &gt;::_M_create_storage (228,237 samples, 0.02%)</title><rect x="227.7" y="421" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="230.69" y="431.5" ></text>
</g>
<g >
<title>ns3::RlcTag::RlcTag (497,992 samples, 0.05%)</title><rect x="560.2" y="261" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="563.19" y="271.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (510,728 samples, 0.05%)</title><rect x="411.5" y="501" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="414.48" y="511.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::UpdateUlRlcBufferInfo (315,273 samples, 0.03%)</title><rect x="234.3" y="485" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="237.25" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (466,275 samples, 0.05%)</title><rect x="658.8" y="421" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="661.79" y="431.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::GetReferenceCount (169,090 samples, 0.02%)</title><rect x="543.2" y="261" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="546.21" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::_Tuple_impl (927,227 samples, 0.10%)</title><rect x="711.8" y="389" width="0.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="714.80" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_base (611,762 samples, 0.06%)</title><rect x="619.7" y="517" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="622.69" y="527.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Divide (328,607 samples, 0.03%)</title><rect x="606.1" y="501" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="609.12" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned int&gt;::operator (139,969 samples, 0.01%)</title><rect x="650.9" y="453" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="653.91" y="463.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (1,300,079 samples, 0.13%)</title><rect x="65.5" y="517" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="68.48" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_List_impl::_List_impl (264,942 samples, 0.03%)</title><rect x="110.0" y="485" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="113.00" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::~SpectrumSignalParameters (209,441 samples, 0.02%)</title><rect x="775.5" y="389" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="778.46" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::~_List_base (199,131 samples, 0.02%)</title><rect x="381.0" y="309" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="384.03" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (277,280 samples, 0.03%)</title><rect x="463.7" y="341" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="466.71" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;* std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (403,625 samples, 0.04%)</title><rect x="706.4" y="389" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="709.45" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::_M_range_check (157,947 samples, 0.02%)</title><rect x="420.3" y="325" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="423.31" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;, std::allocator&lt;std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt; &gt;::_M_range_check (125,858 samples, 0.01%)</title><rect x="457.0" y="293" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="459.99" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::_M_begin (155,977 samples, 0.02%)</title><rect x="185.4" y="453" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="188.43" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_S_key (198,414 samples, 0.02%)</title><rect x="332.3" y="437" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="335.33" y="447.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (229,600 samples, 0.02%)</title><rect x="15.5" y="357" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="18.49" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::Ptr (156,961 samples, 0.02%)</title><rect x="706.0" y="501" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="708.97" y="511.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*&gt; (3,635,299 samples, 0.37%)</title><rect x="124.4" y="437" width="3.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="127.44" y="447.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a2&lt;false, double const*, double*&gt; (193,414 samples, 0.02%)</title><rect x="719.4" y="405" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="722.44" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::operator= (707,699 samples, 0.07%)</title><rect x="612.8" y="549" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="615.78" y="559.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt;::Delete (269,841 samples, 0.03%)</title><rect x="497.4" y="453" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="500.37" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt;::pair (270,035 samples, 0.03%)</title><rect x="338.4" y="437" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="341.42" y="447.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (1,442,310 samples, 0.15%)</title><rect x="512.5" y="485" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="515.50" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_erase (576,036 samples, 0.06%)</title><rect x="119.7" y="501" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="122.74" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_M_head (542,473 samples, 0.06%)</title><rect x="757.6" y="565" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="760.56" y="575.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt; ns3::Create&lt;ns3::DlDciLteControlMessage&gt; (1,498,907 samples, 0.15%)</title><rect x="158.9" y="453" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="161.95" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (195,505 samples, 0.02%)</title><rect x="409.4" y="501" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="412.36" y="511.5" ></text>
</g>
<g >
<title>decltype  (460,852 samples, 0.05%)</title><rect x="595.7" y="181" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="598.69" y="191.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters::~SchedDlRlcBufferReqParameters (747,290 samples, 0.08%)</title><rect x="24.8" y="341" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="27.76" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_lower_bound (446,361 samples, 0.05%)</title><rect x="707.3" y="405" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="710.31" y="415.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Run (5,321,712 samples, 0.55%)</title><rect x="11.2" y="773" width="4.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="14.17" y="783.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::SbMeasResult_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::find (231,252 samples, 0.02%)</title><rect x="94.1" y="469" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="97.09" y="479.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Iterator::HasNext (195,833 samples, 0.02%)</title><rect x="424.5" y="229" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="427.46" y="239.5" ></text>
</g>
<g >
<title>ns3::EventImpl* ns3::PeekPointer&lt;ns3::EventImpl&gt; (342,386 samples, 0.04%)</title><rect x="38.9" y="693" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="41.86" y="703.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::map (196,880 samples, 0.02%)</title><rect x="668.1" y="485" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="671.10" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_S_key (490,279 samples, 0.05%)</title><rect x="566.0" y="181" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="569.02" y="191.5" ></text>
</g>
<g >
<title>ns3::UlCqi_s::UlCqi_s (409,983 samples, 0.04%)</title><rect x="477.9" y="293" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="480.85" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_end (160,556 samples, 0.02%)</title><rect x="650.2" y="469" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="653.18" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_M_begin (529,260 samples, 0.05%)</title><rect x="320.4" y="453" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="323.44" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Acquire (155,703 samples, 0.02%)</title><rect x="164.1" y="437" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="167.13" y="447.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*&gt; (214,687 samples, 0.02%)</title><rect x="101.6" y="373" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="104.59" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::allocate (270,834 samples, 0.03%)</title><rect x="108.6" y="373" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="111.56" y="383.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;ns3::HarqProcessInfoElement_t const, ns3::HarqProcessInfoElement_t&gt; (219,081 samples, 0.02%)</title><rect x="353.6" y="357" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="356.57" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::_S_key (234,707 samples, 0.02%)</title><rect x="29.3" y="325" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="32.28" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;::_M_ptr (218,859 samples, 0.02%)</title><rect x="657.0" y="469" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="659.95" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_get_Node_allocator (129,372 samples, 0.01%)</title><rect x="576.3" y="325" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="579.26" y="335.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ProcessOneEvent (2,105,662 samples, 0.22%)</title><rect x="15.5" y="741" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="18.45" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (266,882 samples, 0.03%)</title><rect x="619.9" y="485" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="622.94" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;unsigned short&gt;::_M_valptr (317,657 samples, 0.03%)</title><rect x="395.6" y="485" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="398.56" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned long&gt;::allocate (271,783 samples, 0.03%)</title><rect x="198.0" y="389" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="201.04" y="399.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (2,347,913 samples, 0.24%)</title><rect x="306.0" y="485" width="1.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="309.03" y="495.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::Write (152,668 samples, 0.02%)</title><rect x="13.9" y="373" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="16.86" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (4,272,760 samples, 0.44%)</title><rect x="629.9" y="517" width="3.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="632.88" y="527.5" ></text>
</g>
<g >
<title>unsigned char* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, unsigned char*&gt; (500,842 samples, 0.05%)</title><rect x="214.2" y="437" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="217.21" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (161,562 samples, 0.02%)</title><rect x="575.3" y="309" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="578.30" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (396,527 samples, 0.04%)</title><rect x="198.8" y="421" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="201.76" y="431.5" ></text>
</g>
<g >
<title>ns3::UlCqi_s::UlCqi_s (234,034 samples, 0.02%)</title><rect x="474.0" y="229" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="476.98" y="239.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (285,025 samples, 0.03%)</title><rect x="420.8" y="325" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="423.77" y="335.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;unsigned short*, unsigned short&gt; (375,815 samples, 0.04%)</title><rect x="252.4" y="373" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="255.44" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Ptr (235,499 samples, 0.02%)</title><rect x="551.8" y="245" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="554.75" y="255.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (411,266 samples, 0.04%)</title><rect x="87.6" y="421" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="90.62" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, double&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, double&gt; &gt; &gt;::_M_lower_bound (1,329,957 samples, 0.14%)</title><rect x="295.0" y="501" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="297.97" y="511.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (489,523 samples, 0.05%)</title><rect x="524.9" y="293" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="527.94" y="303.5" ></text>
</g>
<g >
<title>ns3::Packet::RemovePacketTag (390,797 samples, 0.04%)</title><rect x="435.2" y="325" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="438.22" y="335.5" ></text>
</g>
<g >
<title>ns3::operator/ (819,512 samples, 0.08%)</title><rect x="413.9" y="533" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="416.91" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_clear (151,843 samples, 0.02%)</title><rect x="121.4" y="501" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="124.39" y="511.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (1,317,063 samples, 0.14%)</title><rect x="75.6" y="373" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="78.64" y="383.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::~Ptr (234,471 samples, 0.02%)</title><rect x="637.9" y="485" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="640.87" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_check_len (230,064 samples, 0.02%)</title><rect x="102.2" y="421" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="105.23" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_get_Tp_allocator (246,077 samples, 0.03%)</title><rect x="480.6" y="229" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="483.59" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (278,891 samples, 0.03%)</title><rect x="325.5" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="328.54" y="335.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*, ns3::HarqProcessInfoElement_t&gt; (185,369 samples, 0.02%)</title><rect x="117.4" y="453" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="120.37" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_range_check (163,820 samples, 0.02%)</title><rect x="246.5" y="469" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="249.52" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_S_check_init_len (173,024 samples, 0.02%)</title><rect x="57.5" y="453" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="60.46" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (1,114,557 samples, 0.11%)</title><rect x="652.8" y="293" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="655.79" y="303.5" ></text>
</g>
<g >
<title>cfree (311,874 samples, 0.03%)</title><rect x="770.2" y="677" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="773.23" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_ptr (164,853 samples, 0.02%)</title><rect x="507.9" y="469" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="510.87" y="479.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::DoSchedDlTriggerReq (9,997,060 samples, 1.03%)</title><rect x="94.5" y="485" width="8.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="97.52" y="495.5" ></text>
</g>
<g >
<title>ns3::Simulator::GetSystemId (350,974 samples, 0.04%)</title><rect x="154.3" y="357" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="157.26" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::at (220,871 samples, 0.02%)</title><rect x="216.7" y="485" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="219.75" y="495.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s&gt; (734,784 samples, 0.08%)</title><rect x="132.5" y="437" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="135.49" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (200,616 samples, 0.02%)</title><rect x="77.9" y="437" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="80.92" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (474,320 samples, 0.05%)</title><rect x="394.3" y="437" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="397.32" y="447.5" ></text>
</g>
<g >
<title>decltype  (292,988 samples, 0.03%)</title><rect x="582.4" y="277" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="585.41" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;* std::__copy_move_a2&lt;true, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;*&gt; (148,381 samples, 0.02%)</title><rect x="117.1" y="437" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="120.11" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::_Tuple_impl&lt;ns3::LteEnbPhy*&amp;, ns3::Ptr&lt;ns3::PacketBurst&gt;&amp;, void&gt; (814,172 samples, 0.08%)</title><rect x="282.1" y="453" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="285.10" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__strip_reference_wrapper&lt;std::decay&lt;ns3::Scheduler::EventKey const&amp;&gt;::type&gt;::__type, std::__strip_reference_wrapper&lt;std::decay&lt;ns3::EventImpl* const&amp;&gt;::type&gt;::__type&gt; std::make_pair&lt;ns3::Scheduler::EventKey const&amp;, ns3::EventImpl* const&amp;&gt; (240,322 samples, 0.02%)</title><rect x="338.6" y="437" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="341.64" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::push_back (696,056 samples, 0.07%)</title><rect x="598.2" y="277" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="601.21" y="287.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::SetSubChannelsForReception (725,734 samples, 0.07%)</title><rect x="531.1" y="357" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="534.09" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (267,489 samples, 0.03%)</title><rect x="111.9" y="421" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="114.93" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1,055,032 samples, 0.11%)</title><rect x="572.4" y="357" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="575.43" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_S_right (157,484 samples, 0.02%)</title><rect x="506.6" y="501" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="509.56" y="511.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (240,092 samples, 0.02%)</title><rect x="485.3" y="501" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="488.33" y="511.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (1,522,938 samples, 0.16%)</title><rect x="512.4" y="501" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="515.43" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (458,139 samples, 0.05%)</title><rect x="668.5" y="437" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="671.47" y="447.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::UlDciLteControlMessage&gt;::_M_valptr (437,168 samples, 0.05%)</title><rect x="392.9" y="501" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="395.93" y="511.5" ></text>
</g>
<g >
<title>ns3::Simulator::ScheduleWithContext (475,136 samples, 0.05%)</title><rect x="115.9" y="469" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="118.94" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::RxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::begin (243,486 samples, 0.03%)</title><rect x="80.7" y="517" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="83.70" y="527.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (2,715,978 samples, 0.28%)</title><rect x="17.2" y="453" width="2.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="20.17" y="463.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (192,143 samples, 0.02%)</title><rect x="96.2" y="389" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="99.20" y="399.5" ></text>
</g>
<g >
<title>ns3::Object::SetTypeId (397,305 samples, 0.04%)</title><rect x="632.7" y="501" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="635.68" y="511.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__relocate_a_1&lt;ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s*, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; (1,090,256 samples, 0.11%)</title><rect x="595.3" y="229" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="598.35" y="239.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (3,551,632 samples, 0.37%)</title><rect x="299.4" y="469" width="2.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="302.45" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt; &gt;::_M_begin (429,634 samples, 0.04%)</title><rect x="240.8" y="453" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="243.81" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::size (195,796 samples, 0.02%)</title><rect x="144.9" y="437" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="147.94" y="447.5" ></text>
</g>
<g >
<title>unsigned short&amp; std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::emplace_back&lt;unsigned short&gt; (3,153,700 samples, 0.33%)</title><rect x="478.9" y="293" width="2.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="481.89" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (194,457 samples, 0.02%)</title><rect x="727.7" y="405" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="730.69" y="415.5" ></text>
</g>
<g >
<title>ns3::EnbMemberLteEnbPhySapProvider::SendLteControlMessage (851,386 samples, 0.09%)</title><rect x="230.2" y="453" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="233.16" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt; ns3::Create&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame, ns3::LteSpectrumSignalParametersDlCtrlFrame const&amp;&gt; (729,950 samples, 0.08%)</title><rect x="113.8" y="469" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="116.83" y="479.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::~LteRadioBearerTag (181,554 samples, 0.02%)</title><rect x="561.2" y="197" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="564.24" y="207.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::DlDciListElement_s (964,763 samples, 0.10%)</title><rect x="159.0" y="421" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="161.98" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::push_back (934,973 samples, 0.10%)</title><rect x="532.8" y="341" width="0.8" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="535.84" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (270,008 samples, 0.03%)</title><rect x="17.7" y="357" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="20.67" y="367.5" ></text>
</g>
<g >
<title>modff64x (194,496 samples, 0.02%)</title><rect x="684.1" y="469" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="687.05" y="479.5" ></text>
</g>
<g >
<title>pthread_self (192,757 samples, 0.02%)</title><rect x="280.0" y="485" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="283.00" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (152,705 samples, 0.02%)</title><rect x="116.1" y="405" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="119.06" y="415.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::LteSpectrumSignalParametersDataFrame (1,650,971 samples, 0.17%)</title><rect x="669.3" y="517" width="1.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="672.26" y="527.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (853,448 samples, 0.09%)</title><rect x="164.8" y="357" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="167.76" y="367.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoTransmitPdu (549,181 samples, 0.06%)</title><rect x="15.9" y="373" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="18.88" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned short&gt;, true&gt;::_Rb_tree_impl (893,299 samples, 0.09%)</title><rect x="189.9" y="453" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="192.92" y="463.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoDlInfoListElementHarqFeedback (13,820,039 samples, 1.43%)</title><rect x="446.0" y="325" width="11.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="448.97" y="335.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (268,424 samples, 0.03%)</title><rect x="91.1" y="501" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="94.12" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Acquire (151,917 samples, 0.02%)</title><rect x="643.9" y="485" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="646.92" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (2,848,710 samples, 0.29%)</title><rect x="238.0" y="293" width="2.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="241.03" y="303.5" ></text>
</g>
<g >
<title>unsigned long* std::__copy_move_a1&lt;false, unsigned long*, unsigned long*&gt; (267,936 samples, 0.03%)</title><rect x="199.7" y="389" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="202.67" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, ns3::LteEnbPhy*, false&gt;::_M_head (157,244 samples, 0.02%)</title><rect x="752.5" y="549" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="755.52" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (282,988 samples, 0.03%)</title><rect x="232.5" y="389" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="235.54" y="399.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::CqiListElement_s (874,922 samples, 0.09%)</title><rect x="592.3" y="261" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="595.33" y="271.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::Ptr (148,039 samples, 0.02%)</title><rect x="323.6" y="501" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="326.64" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (155,456 samples, 0.02%)</title><rect x="341.2" y="405" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="344.24" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (429,433 samples, 0.04%)</title><rect x="776.1" y="357" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="779.06" y="367.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Unref (572,810 samples, 0.06%)</title><rect x="64.5" y="501" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="67.47" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;::_M_valptr (148,167 samples, 0.02%)</title><rect x="184.4" y="469" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="187.45" y="479.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::LteControlMessage, ns3::Empty, ns3::DefaultDeleter&lt;ns3::LteControlMessage&gt; &gt;::Unref (611,218 samples, 0.06%)</title><rect x="609.8" y="469" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="612.77" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (1,045,530 samples, 0.11%)</title><rect x="431.9" y="325" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="434.95" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::begin (193,759 samples, 0.02%)</title><rect x="264.2" y="517" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="267.19" y="527.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt;, ns3::MacCeListElement_s*, ns3::MacCeListElement_s&gt; (996,997 samples, 0.10%)</title><rect x="128.7" y="485" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="131.72" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::find (1,211,425 samples, 0.12%)</title><rect x="221.3" y="469" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="224.31" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp; std::__pair_get&lt;1ul&gt;::__move_get&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (152,590 samples, 0.02%)</title><rect x="660.1" y="485" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="663.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::~vector (827,864 samples, 0.09%)</title><rect x="201.7" y="485" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="204.65" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::Sib1LteControlMessage&gt;&amp;&gt; (149,493 samples, 0.02%)</title><rect x="388.6" y="549" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="391.57" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (707,146 samples, 0.07%)</title><rect x="655.0" y="437" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="657.96" y="447.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedUlCqiInfoReq (821,265 samples, 0.08%)</title><rect x="102.6" y="501" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="105.56" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::allocate (393,182 samples, 0.04%)</title><rect x="237.6" y="309" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="240.61" y="319.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedUlTriggerReq (3,881,896 samples, 0.40%)</title><rect x="103.3" y="501" width="3.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="106.25" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::deallocate (887,233 samples, 0.09%)</title><rect x="764.3" y="629" width="0.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="767.33" y="639.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (345,577 samples, 0.04%)</title><rect x="114.0" y="405" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="117.02" y="415.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s&gt; (151,525 samples, 0.02%)</title><rect x="255.6" y="341" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="258.57" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const&amp;&gt; (1,840,875 samples, 0.19%)</title><rect x="211.7" y="453" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="214.74" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::construct&lt;ns3::HigherLayerSelected_s, ns3::HigherLayerSelected_s const&amp;&gt; (366,550 samples, 0.04%)</title><rect x="596.3" y="261" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="599.30" y="271.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (2,859,606 samples, 0.29%)</title><rect x="616.7" y="517" width="2.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="619.73" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; &gt; (1,552,993 samples, 0.16%)</title><rect x="621.5" y="501" width="1.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="624.49" y="511.5" ></text>
</g>
<g >
<title>ns3::Time::GetNanoSeconds (204,211 samples, 0.02%)</title><rect x="555.2" y="229" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="558.21" y="239.5" ></text>
</g>
<g >
<title>ns3::VendorSpecificListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s const*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (386,345 samples, 0.04%)</title><rect x="144.0" y="405" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="147.04" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::begin (200,950 samples, 0.02%)</title><rect x="30.4" y="357" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="33.44" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (183,894 samples, 0.02%)</title><rect x="95.3" y="437" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="98.28" y="447.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::ReportInterference (992,797 samples, 0.10%)</title><rect x="481.4" y="341" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="484.43" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt; &gt;::find (966,324 samples, 0.10%)</title><rect x="187.1" y="469" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="190.07" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (150,187 samples, 0.02%)</title><rect x="718.4" y="373" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="721.35" y="383.5" ></text>
</g>
<g >
<title>ns3::Angles::NormalizeAngles (468,955 samples, 0.05%)</title><rect x="311.0" y="469" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="314.04" y="479.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::SendSrs (1,152,023 samples, 0.12%)</title><rect x="613.7" y="565" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="616.70" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::find (186,790 samples, 0.02%)</title><rect x="102.7" y="453" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="105.72" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::capacity (268,073 samples, 0.03%)</title><rect x="200.2" y="437" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="203.16" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (330,607 samples, 0.03%)</title><rect x="531.2" y="325" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="534.19" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const&amp;&gt; (2,723,348 samples, 0.28%)</title><rect x="723.0" y="501" width="2.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="726.05" y="511.5" ></text>
</g>
<g >
<title>ns3::CallbackImplBase* ns3::PeekPointer&lt;ns3::CallbackImplBase&gt; (161,766 samples, 0.02%)</title><rect x="467.5" y="485" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="470.54" y="495.5" ></text>
</g>
<g >
<title>ns3::Time::ToInteger (200,806 samples, 0.02%)</title><rect x="391.2" y="533" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="394.24" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (168,940 samples, 0.02%)</title><rect x="78.5" y="405" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="81.52" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_List_base (354,467 samples, 0.04%)</title><rect x="354.7" y="517" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="357.73" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (1,942,143 samples, 0.20%)</title><rect x="475.4" y="309" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="478.39" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteSpectrumPhy*&gt;::tuple&lt;ns3::LteSpectrumPhy*&amp;, true, true&gt; (328,207 samples, 0.03%)</title><rect x="63.3" y="453" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="66.25" y="463.5" ></text>
</g>
<g >
<title>int* std::copy&lt;int*, int*&gt; (218,802 samples, 0.02%)</title><rect x="530.6" y="325" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="533.58" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (297,048 samples, 0.03%)</title><rect x="666.3" y="405" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="669.27" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_M_create_storage (392,586 samples, 0.04%)</title><rect x="212.7" y="389" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="215.69" y="399.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::DlDciListElement_s (1,019,581 samples, 0.11%)</title><rect x="147.0" y="453" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="150.03" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; (351,126 samples, 0.04%)</title><rect x="335.0" y="309" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="338.01" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::at (603,079 samples, 0.06%)</title><rect x="288.9" y="533" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="291.91" y="543.5" ></text>
</g>
<g >
<title>ns3::EventId::EventId (1,141,333 samples, 0.12%)</title><rect x="268.2" y="501" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="271.24" y="511.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (538,351 samples, 0.06%)</title><rect x="96.2" y="421" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="99.20" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::SpectrumSignalParameters (2,427,360 samples, 0.25%)</title><rect x="70.9" y="469" width="1.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="73.86" y="479.5" ></text>
</g>
<g >
<title>ns3::Object::GetTypeId (154,300 samples, 0.02%)</title><rect x="161.1" y="405" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="164.09" y="415.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::UlInfoListElement_s&gt;::operator (2,617,045 samples, 0.27%)</title><rect x="438.9" y="549" width="2.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="441.90" y="559.5" ></text>
</g>
<g >
<title>ns3::LteRlcSm::DoNotifyTxOpportunity (4,972,136 samples, 0.51%)</title><rect x="11.4" y="421" width="4.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="14.43" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::find (155,011 samples, 0.02%)</title><rect x="97.5" y="437" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="100.53" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;, false&gt;::_Head_base (152,827 samples, 0.02%)</title><rect x="667.8" y="293" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="670.83" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_S_max_size (385,945 samples, 0.04%)</title><rect x="696.6" y="469" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="699.59" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::push_back (1,437,463 samples, 0.15%)</title><rect x="625.7" y="501" width="1.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="628.71" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (296,881 samples, 0.03%)</title><rect x="648.8" y="421" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="651.79" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::begin (458,783 samples, 0.05%)</title><rect x="369.8" y="517" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="372.81" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt; &gt; &gt;::begin (165,292 samples, 0.02%)</title><rect x="607.1" y="517" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="610.09" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (197,502 samples, 0.02%)</title><rect x="345.1" y="485" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="348.09" y="495.5" ></text>
</g>
<g >
<title>ns3::LteRlcSpecificLteMacSapUser::NotifyTxOpportunity (2,715,978 samples, 0.28%)</title><rect x="17.2" y="437" width="2.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="20.17" y="447.5" ></text>
</g>
<g >
<title>ns3::Object::Object (2,382,251 samples, 0.25%)</title><rect x="364.4" y="485" width="2.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="367.44" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_impl_data::_Vector_impl_data (208,562 samples, 0.02%)</title><rect x="520.5" y="293" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="523.53" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_deallocate (164,716 samples, 0.02%)</title><rect x="728.4" y="389" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="731.43" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (148,437 samples, 0.02%)</title><rect x="698.0" y="533" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="700.96" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (158,119 samples, 0.02%)</title><rect x="340.6" y="229" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="343.65" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (1,168,142 samples, 0.12%)</title><rect x="11.6" y="357" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.55" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned char, ns3::LteMacSapProvider*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (366,125 samples, 0.04%)</title><rect x="552.4" y="213" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="555.36" y="223.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDataFrame::~LteSpectrumSignalParametersDataFrame (2,588,254 samples, 0.27%)</title><rect x="773.8" y="405" width="2.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="776.80" y="415.5" ></text>
</g>
<g >
<title>decltype  (427,457 samples, 0.04%)</title><rect x="288.1" y="437" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="291.08" y="447.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::SbMeasResult_s (1,121,514 samples, 0.12%)</title><rect x="583.6" y="277" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="586.59" y="287.5" ></text>
</g>
<g >
<title>ns3::UeMemberLteUePhySapProvider::SendLteControlMessage (565,879 samples, 0.06%)</title><rect x="689.2" y="501" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="692.24" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::_S_key (328,502 samples, 0.03%)</title><rect x="137.2" y="437" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="140.21" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteHarqPhy&gt;::operator (155,643 samples, 0.02%)</title><rect x="388.9" y="549" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="391.94" y="559.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, ns3::SpectrumValue const&amp;&gt;::operator (34,942,247 samples, 3.60%)</title><rect x="577.3" y="501" width="28.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="580.26" y="511.5" >n..</text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Now (163,019 samples, 0.02%)</title><rect x="600.0" y="293" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="603.02" y="303.5" ></text>
</g>
<g >
<title>ns3::Packet::AddByteTag (2,931,180 samples, 0.30%)</title><rect x="553.0" y="261" width="2.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="556.01" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_begin (495,256 samples, 0.05%)</title><rect x="529.0" y="309" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="532.02" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::_M_mbegin (150,034 samples, 0.02%)</title><rect x="691.1" y="453" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="694.09" y="463.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::__copy_move_a&lt;false, std::_Bit_iterator, std::_Bit_iterator&gt; (219,696 samples, 0.02%)</title><rect x="247.1" y="421" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="250.08" y="431.5" ></text>
</g>
<g >
<title>unsigned char&amp; std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::emplace_back&lt;unsigned char&gt; (2,914,632 samples, 0.30%)</title><rect x="692.1" y="485" width="2.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="695.14" y="495.5" ></text>
</g>
<g >
<title>void ns3::Simulator::ScheduleWithContext&lt;void  (7,199,277 samples, 0.74%)</title><rect x="82.7" y="517" width="5.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="85.69" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::begin (395,869 samples, 0.04%)</title><rect x="193.9" y="469" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="196.86" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Buffer::Data* const*, std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt; &gt;::__normal_iterator (372,628 samples, 0.04%)</title><rect x="556.8" y="149" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="559.81" y="159.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Ref (149,428 samples, 0.02%)</title><rect x="368.4" y="485" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="371.36" y="495.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::ReceiveLteControlMessageList (27,232,853 samples, 2.81%)</title><rect x="441.7" y="373" width="21.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="444.71" y="383.5" >n..</text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (380,581 samples, 0.04%)</title><rect x="595.8" y="149" width="0.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="598.76" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::insert (2,500,355 samples, 0.26%)</title><rect x="246.8" y="469" width="2.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="249.83" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::SendDataChannels (46,991,739 samples, 4.85%)</title><rect x="53.9" y="565" width="37.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="56.87" y="575.5" >ns3..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_erase_aux (671,551 samples, 0.07%)</title><rect x="222.3" y="453" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="225.32" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,105,662 samples, 0.22%)</title><rect x="15.5" y="693" width="1.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="18.45" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_S_key (162,159 samples, 0.02%)</title><rect x="504.2" y="485" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="507.20" y="495.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator (151,635 samples, 0.02%)</title><rect x="274.5" y="405" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="277.50" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::at (232,176 samples, 0.02%)</title><rect x="249.1" y="485" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="252.09" y="495.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetParent (228,334 samples, 0.02%)</title><rect x="374.2" y="453" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="377.23" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (294,424 samples, 0.03%)</title><rect x="615.9" y="469" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="618.93" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::_M_get_Tp_allocator (191,995 samples, 0.02%)</title><rect x="143.3" y="437" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="146.32" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (149,670 samples, 0.02%)</title><rect x="347.6" y="533" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="350.56" y="543.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n&lt;double*, unsigned long&gt; (153,593 samples, 0.02%)</title><rect x="316.3" y="341" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="319.25" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned int&gt;::_Tuple_impl&lt;unsigned int&amp;&gt; (359,595 samples, 0.04%)</title><rect x="709.9" y="389" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="712.89" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (128,185 samples, 0.01%)</title><rect x="517.2" y="389" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="520.19" y="399.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;, ns3::RlcPduListElement_s*&gt; (980,187 samples, 0.10%)</title><rect x="211.8" y="389" width="0.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="214.84" y="399.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::copy&lt;std::_Bit_iterator, std::_Bit_iterator&gt; (219,696 samples, 0.02%)</title><rect x="247.1" y="437" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="250.08" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::BuildDataListElement_s&gt; (677,511 samples, 0.07%)</title><rect x="145.7" y="389" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="148.73" y="399.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (896,241 samples, 0.09%)</title><rect x="772.8" y="485" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="775.83" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::deallocate (181,716 samples, 0.02%)</title><rect x="378.3" y="293" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="381.26" y="303.5" ></text>
</g>
<g >
<title>ns3::UlDciLteControlMessage&amp; std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::emplace_back&lt;ns3::UlDciLteControlMessage const&amp;&gt; (2,541,961 samples, 0.26%)</title><rect x="286.5" y="501" width="2.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="289.48" y="511.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (378,589 samples, 0.04%)</title><rect x="216.0" y="421" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="218.97" y="431.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ScheduleNow (347,373 samples, 0.04%)</title><rect x="53.0" y="517" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="55.98" y="527.5" ></text>
</g>
<g >
<title>operator new (404,041 samples, 0.04%)</title><rect x="32.7" y="341" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="35.73" y="351.5" ></text>
</g>
<g >
<title>ns3::LteHarqPhy::SubframeIndication (8,381,908 samples, 0.86%)</title><rect x="347.7" y="549" width="6.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="350.68" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;::operator* (194,523 samples, 0.02%)</title><rect x="184.0" y="485" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="186.98" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (161,967 samples, 0.02%)</title><rect x="600.2" y="293" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="603.21" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::deallocate (169,673 samples, 0.02%)</title><rect x="575.2" y="293" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="578.16" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;::_M_realloc_insert&lt;ns3::UlDciListElement_s const&amp;&gt; (193,533 samples, 0.02%)</title><rect x="105.9" y="453" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="108.88" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;&amp; std::forward&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;&amp;&gt; (194,813 samples, 0.02%)</title><rect x="267.3" y="533" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="270.30" y="543.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (209,498 samples, 0.02%)</title><rect x="605.4" y="517" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="608.40" y="527.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (1,105,472 samples, 0.11%)</title><rect x="108.4" y="485" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="111.44" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (476,394 samples, 0.05%)</title><rect x="397.7" y="501" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="400.74" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (164,996 samples, 0.02%)</title><rect x="88.0" y="469" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="90.95" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (1,309,427 samples, 0.14%)</title><rect x="76.8" y="357" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="79.80" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::allocate (283,919 samples, 0.03%)</title><rect x="444.9" y="261" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="447.88" y="271.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Iterator::Iterator (944,025 samples, 0.10%)</title><rect x="426.4" y="213" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="429.39" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;double&gt;::__value, void&gt;::__type std::__fill_a1&lt;double*, double&gt; (163,001 samples, 0.02%)</title><rect x="730.0" y="325" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="733.02" y="335.5" ></text>
</g>
<g >
<title>ns3::MapScheduler::Insert (6,361,819 samples, 0.66%)</title><rect x="333.7" y="453" width="5.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="336.71" y="463.5" ></text>
</g>
<g >
<title>int* std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (268,424 samples, 0.03%)</title><rect x="91.1" y="485" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="94.12" y="495.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (345,416,065 samples, 35.62%)</title><rect x="122.5" y="565" width="277.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="125.51" y="575.5" >ns3::LteEnbPhy::StartSubFrame</text>
</g>
<g >
<title>ns3::NodeListPriv::Delete (238,924 samples, 0.02%)</title><rect x="36.6" y="629" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="39.64" y="639.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;int&gt;::deallocate (169,673 samples, 0.02%)</title><rect x="575.2" y="277" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="578.16" y="287.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (384,276 samples, 0.04%)</title><rect x="119.9" y="373" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="122.86" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;void  (416,320 samples, 0.04%)</title><rect x="53.5" y="501" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="56.54" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::at (572,518 samples, 0.06%)</title><rect x="172.6" y="453" width="0.4" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="175.57" y="463.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;, ns3::BuildDataListElement_s*, ns3::BuildDataListElement_s&gt; (143,073 samples, 0.01%)</title><rect x="95.0" y="421" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="97.98" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;::_M_valptr (165,214 samples, 0.02%)</title><rect x="567.5" y="277" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="570.52" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;::_M_ptr (163,699 samples, 0.02%)</title><rect x="497.0" y="517" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="500.01" y="527.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::PacketMetadata (473,227 samples, 0.05%)</title><rect x="153.5" y="357" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="156.48" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt;::_Tuple_impl&lt;ns3::LteInterference*&amp;, ns3::Ptr&lt;ns3::SpectrumValue const&gt;&amp;, unsigned int&amp;, void&gt; (1,419,200 samples, 0.15%)</title><rect x="709.1" y="421" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="712.10" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_get_node (163,447 samples, 0.02%)</title><rect x="69.1" y="389" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="72.06" y="399.5" ></text>
</g>
<g >
<title> (126,576 samples, 0.01%)</title><rect x="552.3" y="197" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="555.26" y="207.5" ></text>
</g>
<g >
<title>void ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (33,827,307 samples, 3.49%)</title><rect x="578.2" y="421" width="27.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="581.16" y="431.5" >v..</text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::erase (213,559 samples, 0.02%)</title><rect x="117.1" y="517" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="120.11" y="527.5" ></text>
</g>
<g >
<title>ns3::ByteTagList::Allocate (1,324,752 samples, 0.14%)</title><rect x="553.4" y="229" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="556.35" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (163,713 samples, 0.02%)</title><rect x="573.1" y="309" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="576.08" y="319.5" ></text>
</g>
<g >
<title>ns3::LteUePowerControl::CalculatePuschTxPower (1,080,040 samples, 0.11%)</title><rect x="681.2" y="533" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="684.20" y="543.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::DoAddHeader (167,176 samples, 0.02%)</title><rect x="558.7" y="213" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="561.71" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (444,735 samples, 0.05%)</title><rect x="416.6" y="517" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="419.56" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteFlowId_t, std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt;, std::_Select1st&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt;, std::less&lt;ns3::LteFlowId_t&gt;, std::allocator&lt;std::pair&lt;ns3::LteFlowId_t const, ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters&gt; &gt; &gt;::find (652,951 samples, 0.07%)</title><rect x="26.9" y="293" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="29.92" y="303.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (4,972,136 samples, 0.51%)</title><rect x="11.4" y="485" width="4.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="14.43" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::lower_bound (1,730,701 samples, 0.18%)</title><rect x="336.7" y="405" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="339.70" y="415.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; (652,707 samples, 0.07%)</title><rect x="609.7" y="501" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="612.73" y="511.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_List_iterator (150,899 samples, 0.02%)</title><rect x="635.6" y="309" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="638.62" y="319.5" ></text>
</g>
<g >
<title>ns3::Packet::AddByteTag (557,108 samples, 0.06%)</title><rect x="152.1" y="389" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="155.12" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (382,560 samples, 0.04%)</title><rect x="111.8" y="437" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="114.84" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (187,232 samples, 0.02%)</title><rect x="300.7" y="389" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="303.67" y="399.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetParent (669,393 samples, 0.07%)</title><rect x="449.6" y="245" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="452.64" y="255.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Unref (401,883 samples, 0.04%)</title><rect x="728.2" y="469" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="731.24" y="479.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (1,008,998 samples, 0.10%)</title><rect x="721.5" y="485" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="724.52" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_base (272,688 samples, 0.03%)</title><rect x="130.8" y="485" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="133.81" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::back (228,016 samples, 0.02%)</title><rect x="692.2" y="469" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="695.21" y="479.5" ></text>
</g>
<g >
<title>ns3::Packet::AddByteTag (356,272 samples, 0.04%)</title><rect x="16.4" y="389" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="19.41" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*, ns3::Ptr&lt;ns3::Object&gt; &gt; (283,533 samples, 0.03%)</title><rect x="550.2" y="197" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="553.19" y="207.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, ns3::LteEnbPhy*, false&gt;::_M_head (165,500 samples, 0.02%)</title><rect x="752.1" y="549" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="755.11" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (264,662 samples, 0.03%)</title><rect x="99.5" y="437" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="102.47" y="447.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (819,716 samples, 0.08%)</title><rect x="667.3" y="453" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="670.29" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::clear (391,980 samples, 0.04%)</title><rect x="497.3" y="549" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="500.30" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteEnbComponentCarrierManager::UeInfo&gt; &gt; &gt;::lower_bound (1,723,216 samples, 0.18%)</title><rect x="157.5" y="389" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="160.50" y="399.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;unsigned int*, unsigned int&gt; (567,534 samples, 0.06%)</title><rect x="696.0" y="389" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="698.98" y="399.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::RemoveAll (244,626 samples, 0.03%)</title><rect x="548.9" y="101" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="551.87" y="111.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s::CqiListElement_s (2,022,367 samples, 0.21%)</title><rect x="583.5" y="293" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="586.49" y="303.5" ></text>
</g>
<g >
<title>double* std::__fill_n_a&lt;double*, unsigned long, double&gt; (423,425 samples, 0.04%)</title><rect x="301.4" y="357" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="304.40" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt;::_M_valptr (532,897 samples, 0.05%)</title><rect x="348.1" y="517" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="351.13" y="527.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (1,593,239 samples, 0.16%)</title><rect x="446.2" y="293" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="449.20" y="303.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::ConstValuesEnd (157,751 samples, 0.02%)</title><rect x="583.0" y="293" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="586.03" y="303.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (482,063 samples, 0.05%)</title><rect x="661.3" y="357" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="664.26" y="367.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Allocate (495,360 samples, 0.05%)</title><rect x="557.9" y="197" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="560.86" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::_M_lower_bound (722,107 samples, 0.07%)</title><rect x="136.1" y="453" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="139.11" y="463.5" ></text>
</g>
<g >
<title>ns3::RlcTag::RlcTag (277,392 samples, 0.03%)</title><rect x="155.2" y="389" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="158.19" y="399.5" ></text>
</g>
<g >
<title>ns3::LteInterference::ConditionallyEvaluateChunk (281,840 samples, 0.03%)</title><rect x="485.3" y="533" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="488.29" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_move_assign (879,906 samples, 0.09%)</title><rect x="621.8" y="405" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="624.76" y="415.5" ></text>
</g>
<g >
<title> (155,643 samples, 0.02%)</title><rect x="388.9" y="533" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="391.94" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;void  (242,907 samples, 0.03%)</title><rect x="418.8" y="405" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="421.83" y="415.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (423,388 samples, 0.04%)</title><rect x="774.8" y="293" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="777.81" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::_M_valptr (354,247 samples, 0.04%)</title><rect x="438.1" y="261" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="441.05" y="271.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (190,190 samples, 0.02%)</title><rect x="166.4" y="357" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="169.42" y="367.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberFfMacSchedSapUser::SchedDlConfigInd (4,972,136 samples, 0.51%)</title><rect x="11.4" y="501" width="4.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="14.43" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt; ns3::CompleteConstruct&lt;ns3::PacketBurst&gt; (2,205,090 samples, 0.23%)</title><rect x="33.3" y="469" width="1.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="36.34" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (525,645 samples, 0.05%)</title><rect x="407.7" y="389" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="410.65" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;* std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (382,281 samples, 0.04%)</title><rect x="108.6" y="405" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="111.56" y="415.5" ></text>
</g>
<g >
<title>ns3::Simulator::Now (287,971 samples, 0.03%)</title><rect x="600.0" y="309" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="602.95" y="319.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (4,972,136 samples, 0.51%)</title><rect x="11.4" y="469" width="4.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="14.43" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::~Ptr (3,402,650 samples, 0.35%)</title><rect x="773.7" y="469" width="2.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="776.67" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (1,515,978 samples, 0.16%)</title><rect x="625.7" y="517" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="628.65" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;&gt; (199,710 samples, 0.02%)</title><rect x="386.0" y="453" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="389.02" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::~vector (196,954 samples, 0.02%)</title><rect x="575.4" y="357" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="578.43" y="367.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (157,638 samples, 0.02%)</title><rect x="201.4" y="421" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="204.37" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::end (256,004 samples, 0.03%)</title><rect x="553.8" y="197" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="556.78" y="207.5" ></text>
</g>
<g >
<title>ns3::LteHarqPhy::ResetDlHarqProcessStatus (597,412 samples, 0.06%)</title><rect x="464.5" y="549" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="467.50" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_S_max_size (204,572 samples, 0.02%)</title><rect x="404.6" y="453" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="407.57" y="463.5" ></text>
</g>
<g >
<title>unsigned short* std::__fill_n_a&lt;unsigned short*, unsigned long, unsigned short&gt; (459,034 samples, 0.05%)</title><rect x="252.4" y="389" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="255.37" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (166,957 samples, 0.02%)</title><rect x="385.2" y="341" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="388.18" y="351.5" ></text>
</g>
<g >
<title>ns3::LtePhy::GetDevice (325,125 samples, 0.03%)</title><rect x="582.6" y="309" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="585.65" y="319.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (650,228 samples, 0.07%)</title><rect x="502.4" y="421" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="505.40" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Acquire (190,764 samples, 0.02%)</title><rect x="704.7" y="517" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="707.65" y="527.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt;, ns3::DlInfoListElement_s::HarqStatus_e*&gt; (234,294 samples, 0.02%)</title><rect x="510.0" y="485" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="512.98" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_Vector_impl::_Vector_impl (431,145 samples, 0.04%)</title><rect x="131.7" y="469" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="134.68" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; const&amp;&gt; (338,177 samples, 0.03%)</title><rect x="117.3" y="501" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="120.31" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::~Ptr (439,896 samples, 0.05%)</title><rect x="502.0" y="341" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="504.99" y="351.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::MibLteControlMessage&gt;&amp;&gt; (190,229 samples, 0.02%)</title><rect x="122.3" y="517" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="125.33" y="527.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,320,674 samples, 0.14%)</title><rect x="725.6" y="485" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="728.60" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator+= (1,512,778 samples, 0.16%)</title><rect x="713.7" y="501" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="716.72" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (1,100,157 samples, 0.11%)</title><rect x="232.9" y="453" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="235.86" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (206,667 samples, 0.02%)</title><rect x="728.4" y="405" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="731.39" y="415.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::EndSubFrame (1,332,546 samples, 0.14%)</title><rect x="52.8" y="565" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="55.80" y="575.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator (311,768 samples, 0.03%)</title><rect x="299.7" y="453" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="302.70" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_mbegin (153,550 samples, 0.02%)</title><rect x="508.9" y="501" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="511.90" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_M_begin (556,533 samples, 0.06%)</title><rect x="179.8" y="437" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="182.83" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::_M_ptr (148,477 samples, 0.02%)</title><rect x="689.9" y="453" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="692.94" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Alloc_node&gt; (361,417 samples, 0.04%)</title><rect x="232.5" y="405" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="235.54" y="415.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::AddPacket (729,577 samples, 0.08%)</title><rect x="68.8" y="453" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="71.76" y="463.5" ></text>
</g>
<g >
<title>std::operator== (159,203 samples, 0.02%)</title><rect x="746.8" y="533" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="749.83" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::construct&lt;ns3::DlInfoListElement_s, ns3::DlInfoListElement_s const&amp;&gt; (233,530 samples, 0.02%)</title><rect x="456.6" y="293" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="459.59" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::operator (353,348 samples, 0.04%)</title><rect x="717.2" y="501" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="720.23" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (148,912 samples, 0.02%)</title><rect x="99.7" y="453" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="102.75" y="463.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a2&lt;false, double const*, double*&gt; (158,087 samples, 0.02%)</title><rect x="238.9" y="181" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="241.87" y="191.5" ></text>
</g>
<g >
<title>ns3::MultiModelSpectrumChannel::FindAndEventuallyAddTxSpectrumModel (3,241,661 samples, 0.33%)</title><rect x="320.0" y="501" width="2.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="323.01" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::~_Vector_base (187,024 samples, 0.02%)</title><rect x="132.8" y="373" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="135.84" y="383.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;, ns3::DlInfoListElement_s*&gt; (4,706,249 samples, 0.49%)</title><rect x="258.1" y="437" width="3.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="261.14" y="447.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::__uninitialized_copy_a&lt;ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s&gt; (632,143 samples, 0.07%)</title><rect x="206.4" y="469" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="209.43" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::TxSpectrumModelInfo, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (188,402 samples, 0.02%)</title><rect x="114.5" y="469" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="117.51" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (489,292 samples, 0.05%)</title><rect x="680.1" y="501" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="683.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (156,128 samples, 0.02%)</title><rect x="667.1" y="245" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="670.07" y="255.5" ></text>
</g>
<g >
<title>ns3::Time::FromInteger (159,767 samples, 0.02%)</title><rect x="424.8" y="197" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="427.78" y="207.5" ></text>
</g>
<g >
<title>ns3::LteNetDevice::GetNode (153,775 samples, 0.02%)</title><rect x="113.5" y="485" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="116.52" y="495.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (455,698 samples, 0.05%)</title><rect x="677.6" y="405" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="680.60" y="415.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (624,065 samples, 0.06%)</title><rect x="340.3" y="437" width="0.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="343.27" y="447.5" ></text>
</g>
<g >
<title>operator new (169,720 samples, 0.02%)</title><rect x="70.0" y="437" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="73.01" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;::_M_valptr (226,643 samples, 0.02%)</title><rect x="136.2" y="421" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="139.17" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_valptr (320,775 samples, 0.03%)</title><rect x="663.5" y="373" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="666.47" y="383.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (17,080,246 samples, 1.76%)</title><rect x="19.6" y="485" width="13.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="22.60" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::clear (1,170,710 samples, 0.12%)</title><rect x="393.8" y="549" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="396.82" y="559.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int const, double&gt;, std::pair&lt;int, double&gt; &gt; (184,474 samples, 0.02%)</title><rect x="293.3" y="437" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="296.35" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteUePhy&gt;::Acquire (125,424 samples, 0.01%)</title><rect x="516.6" y="421" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="519.65" y="431.5" ></text>
</g>
<g >
<title>ns3::UeMemberLteUePhySapUser::SubframeIndication (16,576,198 samples, 1.71%)</title><rect x="684.3" y="549" width="13.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="687.33" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;unsigned short&gt;, true&gt;::_Rb_tree_impl (160,812 samples, 0.02%)</title><rect x="240.5" y="453" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="243.47" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;::_M_ptr (158,124 samples, 0.02%)</title><rect x="691.5" y="421" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="694.50" y="431.5" ></text>
</g>
<g >
<title>ns3::LteEnbRrc::DoAllocateTemporaryCellRnti (285,958 samples, 0.03%)</title><rect x="130.4" y="501" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="133.38" y="511.5" ></text>
</g>
<g >
<title>bool std::operator==&lt;ns3::MacCeListElement_s*&gt; (157,395 samples, 0.02%)</title><rect x="129.7" y="405" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="132.74" y="415.5" ></text>
</g>
<g >
<title> (368,315 samples, 0.04%)</title><rect x="656.8" y="501" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="659.83" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl&lt;ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;, double&amp;, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;&amp;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;&amp;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;, void&gt; (433,048 samples, 0.04%)</title><rect x="340.4" y="389" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="343.43" y="399.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::Callback&lt;void  (19,222,845 samples, 1.98%)</title><rect x="468.3" y="453" width="15.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="471.32" y="463.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (381,898 samples, 0.04%)</title><rect x="654.6" y="437" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="657.62" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;double&gt;::allocate (168,940 samples, 0.02%)</title><rect x="78.5" y="389" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="81.52" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*, ns3::Ptr&lt;ns3::Object&gt; &gt; (209,811 samples, 0.02%)</title><rect x="77.5" y="309" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="80.53" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_create_storage (226,584 samples, 0.02%)</title><rect x="125.6" y="341" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="128.61" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt;::Acquire (148,949 samples, 0.02%)</title><rect x="388.4" y="517" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="391.36" y="527.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (635,851 samples, 0.07%)</title><rect x="307.4" y="437" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="310.41" y="447.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const&amp;&gt; (290,247 samples, 0.03%)</title><rect x="101.6" y="453" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="104.56" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_max_size (200,229 samples, 0.02%)</title><rect x="215.2" y="405" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="218.23" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator* (194,762 samples, 0.02%)</title><rect x="184.1" y="485" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="187.14" y="495.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (158,074 samples, 0.02%)</title><rect x="206.8" y="389" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="209.81" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_M_move_nodes (255,202 samples, 0.03%)</title><rect x="290.6" y="373" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="293.62" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_insert_node (177,353 samples, 0.02%)</title><rect x="504.1" y="485" width="0.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="507.06" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_M_create_storage (390,330 samples, 0.04%)</title><rect x="513.9" y="517" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="516.95" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_M_range_check (238,739 samples, 0.02%)</title><rect x="208.4" y="469" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="211.45" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (525,645 samples, 0.05%)</title><rect x="407.7" y="437" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="410.65" y="447.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__relocate_a&lt;ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s*, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; (1,169,244 samples, 0.12%)</title><rect x="595.3" y="245" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="598.29" y="255.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (1,764,218 samples, 0.18%)</title><rect x="62.9" y="501" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="65.92" y="511.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::UpdateHarqProcessId (239,156 samples, 0.02%)</title><rect x="182.5" y="485" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="185.50" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::_S_key (358,882 samples, 0.04%)</title><rect x="463.0" y="309" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="466.00" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::~vector (374,665 samples, 0.04%)</title><rect x="255.4" y="357" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="258.39" y="367.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::destroy&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (4,680,368 samples, 0.48%)</title><rect x="545.3" y="213" width="3.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="548.34" y="223.5" ></text>
</g>
<g >
<title>ns3::CeBitmap_e* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::CeBitmap_e const*, std::vector&lt;ns3::CeBitmap_e, std::allocator&lt;ns3::CeBitmap_e&gt; &gt; &gt;, ns3::CeBitmap_e*, ns3::CeBitmap_e&gt; (492,021 samples, 0.05%)</title><rect x="203.8" y="389" width="0.4" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="206.84" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (2,627,460 samples, 0.27%)</title><rect x="300.2" y="453" width="2.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="303.19" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Node&gt;::operator (199,807 samples, 0.02%)</title><rect x="322.9" y="501" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="325.91" y="511.5" ></text>
</g>
<g >
<title>ns3::CallbackImpl&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::operator (28,473,128 samples, 2.94%)</title><rect x="441.0" y="533" width="22.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="444.04" y="543.5" >n..</text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDlCtrlFrame&gt;::operator (233,577 samples, 0.02%)</title><rect x="344.0" y="517" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="347.01" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::find (1,422,685 samples, 0.15%)</title><rect x="690.8" y="485" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="693.84" y="495.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (273,170 samples, 0.03%)</title><rect x="53.0" y="501" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="56.01" y="511.5" ></text>
</g>
<g >
<title>unsigned short* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned short const*, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, unsigned short*&gt; (584,765 samples, 0.06%)</title><rect x="217.4" y="437" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="220.44" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (127,251 samples, 0.01%)</title><rect x="573.4" y="325" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="576.38" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters, std::allocator&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; &gt;::size (152,504 samples, 0.02%)</title><rect x="264.1" y="517" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="267.06" y="527.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s::~BuildDataListElement_s (871,986 samples, 0.09%)</title><rect x="139.3" y="485" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="142.26" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::DoDispose (1,332,739 samples, 0.14%)</title><rect x="652.6" y="373" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="655.61" y="383.5" ></text>
</g>
<g >
<title>ns3::Object::GetTypeId (626,440 samples, 0.06%)</title><rect x="364.8" y="469" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="367.76" y="479.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;double*, unsigned long&gt; (854,790 samples, 0.09%)</title><rect x="301.2" y="389" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="304.24" y="399.5" ></text>
</g>
<g >
<title>ns3::Seconds (1,997,083 samples, 0.21%)</title><rect x="389.4" y="549" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="392.41" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::at (190,464 samples, 0.02%)</title><rect x="23.8" y="357" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="26.75" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::end (163,346 samples, 0.02%)</title><rect x="242.4" y="453" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="245.36" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_move_nodes (220,549 samples, 0.02%)</title><rect x="357.3" y="389" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="360.25" y="399.5" ></text>
</g>
<g >
<title>std::operator== (384,996 samples, 0.04%)</title><rect x="370.4" y="517" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="373.42" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;*, std::vector&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;, std::allocator&lt;ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt; &gt; &gt; &gt;::operator* (196,136 samples, 0.02%)</title><rect x="467.2" y="517" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="470.25" y="527.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::CqiListElement_s*&gt; (183,284 samples, 0.02%)</title><rect x="128.1" y="469" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="131.14" y="479.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::GetSubChannelsForTransmission (198,351 samples, 0.02%)</title><rect x="679.1" y="517" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="682.10" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (190,332 samples, 0.02%)</title><rect x="674.2" y="453" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="677.16" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_allocate (565,924 samples, 0.06%)</title><rect x="218.6" y="437" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="221.62" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::_Vector_impl_data::_Vector_impl_data (274,833 samples, 0.03%)</title><rect x="351.0" y="341" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="353.96" y="351.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlCqiInfoReq (4,461,995 samples, 0.46%)</title><rect x="134.3" y="517" width="3.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="137.31" y="527.5" ></text>
</g>
<g >
<title>ns3::TagBuffer::WriteU32 (368,447 samples, 0.04%)</title><rect x="554.5" y="229" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="557.52" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_get_node (205,320 samples, 0.02%)</title><rect x="503.1" y="469" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="506.15" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node&gt; (254,628 samples, 0.03%)</title><rect x="60.2" y="405" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="63.18" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (336,936 samples, 0.03%)</title><rect x="574.4" y="325" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="577.42" y="335.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::PacketBurst (3,093,540 samples, 0.32%)</title><rect x="364.4" y="501" width="2.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="367.38" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (448,289 samples, 0.05%)</title><rect x="126.3" y="373" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="129.32" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::deallocate (181,716 samples, 0.02%)</title><rect x="378.3" y="277" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="381.26" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (126,483 samples, 0.01%)</title><rect x="606.9" y="405" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="609.92" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NixVector&gt;::Acquire (185,459 samples, 0.02%)</title><rect x="118.2" y="453" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="121.20" y="463.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (1,091,128 samples, 0.11%)</title><rect x="238.1" y="277" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="241.15" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel&gt;::Ptr (197,437 samples, 0.02%)</title><rect x="54.6" y="485" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="57.64" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (200,433 samples, 0.02%)</title><rect x="201.5" y="453" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="204.49" y="463.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::DlInfoListElement_s (485,819 samples, 0.05%)</title><rect x="510.0" y="533" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="512.98" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (190,389 samples, 0.02%)</title><rect x="461.1" y="261" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="464.10" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned int&gt;::deallocate (227,074 samples, 0.02%)</title><rect x="697.2" y="421" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="700.18" y="431.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (145,431 samples, 0.01%)</title><rect x="490.0" y="517" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="492.98" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (5,452,785 samples, 0.56%)</title><rect x="544.8" y="245" width="4.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="547.75" y="255.5" ></text>
</g>
<g >
<title>ns3::Packet::FindFirstMatchingByteTag (3,774,692 samples, 0.39%)</title><rect x="424.4" y="261" width="3.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="427.40" y="271.5" ></text>
</g>
<g >
<title>ns3::Time::~Time (269,324 samples, 0.03%)</title><rect x="665.0" y="469" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="667.98" y="479.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::Create (987,265 samples, 0.10%)</title><rect x="14.6" y="357" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="17.57" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;ns3::RlcPduListElement_s&gt;::allocate (190,161 samples, 0.02%)</title><rect x="212.9" y="325" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="215.85" y="335.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__niter_wrap&lt;ns3::HarqProcessInfoElement_t*&gt; (124,684 samples, 0.01%)</title><rect x="525.2" y="245" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="528.24" y="255.5" ></text>
</g>
<g >
<title>double* std::__fill_n_a&lt;double*, unsigned long, double&gt; (248,267 samples, 0.03%)</title><rect x="718.6" y="357" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="721.60" y="367.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, double&gt; &gt; (224,432 samples, 0.02%)</title><rect x="293.3" y="453" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="296.32" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::map (400,356 samples, 0.04%)</title><rect x="232.5" y="469" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="235.50" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::operator (124,716 samples, 0.01%)</title><rect x="728.6" y="501" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="731.63" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (214,722 samples, 0.02%)</title><rect x="623.7" y="485" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="626.67" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt;::~_Tuple_impl (343,746 samples, 0.04%)</title><rect x="281.3" y="469" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="284.32" y="479.5" ></text>
</g>
<g >
<title>unsigned char* std::__uninitialized_fill_n_a&lt;unsigned char*, unsigned long, unsigned char, unsigned char&gt; (189,712 samples, 0.02%)</title><rect x="102.0" y="437" width="0.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="104.98" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; (232,766 samples, 0.02%)</title><rect x="289.6" y="517" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="292.56" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_lower_bound (257,394 samples, 0.03%)</title><rect x="616.0" y="437" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="618.96" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned char*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (155,513 samples, 0.02%)</title><rect x="134.6" y="437" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="137.58" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2,004,725 samples, 0.21%)</title><rect x="589.8" y="277" width="1.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="592.85" y="287.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (1,464,277 samples, 0.15%)</title><rect x="148.7" y="389" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="151.66" y="399.5" ></text>
</g>
<g >
<title>ns3::operator- (384,216 samples, 0.04%)</title><rect x="311.9" y="485" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="314.86" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, void&gt; (177,392 samples, 0.02%)</title><rect x="619.2" y="533" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="622.24" y="543.5" ></text>
</g>
<g >
<title>ns3::Buffer::Buffer (424,494 samples, 0.04%)</title><rect x="624.2" y="485" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="627.19" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_initialize (197,197 samples, 0.02%)</title><rect x="646.6" y="389" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="649.59" y="399.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (494,131 samples, 0.05%)</title><rect x="618.6" y="469" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="621.63" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue const&gt;::~Ptr (896,241 samples, 0.09%)</title><rect x="772.8" y="501" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="775.83" y="511.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (396,416 samples, 0.04%)</title><rect x="57.0" y="437" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="60.01" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned char&gt;::operator (261,389 samples, 0.03%)</title><rect x="169.1" y="405" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="172.09" y="415.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::StartSubFrame (1,650,854 samples, 0.17%)</title><rect x="15.8" y="565" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="18.79" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::_S_left (126,198 samples, 0.01%)</title><rect x="570.7" y="277" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="573.73" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::vector (247,613 samples, 0.03%)</title><rect x="420.8" y="309" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="423.80" y="319.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy*&amp; std::__get_helper&lt;0ul, ns3::LteEnbPhy*, ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; (368,229 samples, 0.04%)</title><rect x="752.0" y="581" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="754.95" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::push_back (279,441 samples, 0.03%)</title><rect x="296.4" y="533" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="299.44" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlDciLteControlMessage&gt;::Acquire (124,599 samples, 0.01%)</title><rect x="534.0" y="325" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="537.04" y="335.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;&gt; (238,924 samples, 0.02%)</title><rect x="36.6" y="725" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="39.64" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, double&gt; &gt;* std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_Alloc_node&gt; (1,456,622 samples, 0.15%)</title><rect x="59.2" y="453" width="1.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="62.21" y="463.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*, ns3::HarqProcessInfoElement_t&gt; (1,606,901 samples, 0.17%)</title><rect x="352.7" y="469" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="355.70" y="479.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*&gt; (368,668 samples, 0.04%)</title><rect x="525.0" y="261" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="528.04" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (1,820,097 samples, 0.19%)</title><rect x="686.8" y="469" width="1.4" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="689.78" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt; (305,928 samples, 0.03%)</title><rect x="256.7" y="357" width="0.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="259.69" y="367.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::End (439,641 samples, 0.05%)</title><rect x="491.8" y="549" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="494.79" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned int, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (147,114 samples, 0.02%)</title><rect x="94.4" y="469" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="97.40" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::size (156,294 samples, 0.02%)</title><rect x="262.6" y="501" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="265.61" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_M_key (314,000 samples, 0.03%)</title><rect x="332.2" y="453" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="335.23" y="463.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::UlInfoListElement_s, ns3::UlInfoListElement_s const&amp;&gt; (496,472 samples, 0.05%)</title><rect x="266.5" y="421" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="269.47" y="431.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Multiply (372,175 samples, 0.04%)</title><rect x="493.3" y="533" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="496.27" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_get_node (539,388 samples, 0.06%)</title><rect x="287.6" y="453" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="290.65" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Buffer::Data**, std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt; &gt;::operator- (234,189 samples, 0.02%)</title><rect x="31.5" y="325" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="34.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;::_M_valptr (407,755 samples, 0.04%)</title><rect x="321.5" y="421" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="324.47" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::Ptr (158,076 samples, 0.02%)</title><rect x="671.9" y="517" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="674.91" y="527.5" ></text>
</g>
<g >
<title>ns3::Singleton&lt;ns3::IidManager&gt;::Get (156,696 samples, 0.02%)</title><rect x="34.5" y="405" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="37.48" y="415.5" ></text>
</g>
<g >
<title>atan2f32x (411,872 samples, 0.04%)</title><rect x="702.6" y="517" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="705.62" y="527.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::NoOpComponentCarrierManager&gt;::TransmitPdu (886,429 samples, 0.09%)</title><rect x="17.2" y="405" width="0.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="20.17" y="415.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::SbMeasResult_s (321,656 samples, 0.03%)</title><rect x="592.5" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="595.50" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (1,066,574 samples, 0.11%)</title><rect x="56.7" y="469" width="0.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="59.74" y="479.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (1,915,952 samples, 0.20%)</title><rect x="708.8" y="469" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="711.79" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_M_head (241,699 samples, 0.02%)</title><rect x="756.7" y="565" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="759.73" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_fill_insert (3,063,118 samples, 0.32%)</title><rect x="251.3" y="469" width="2.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="254.31" y="479.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (75,064,377 samples, 7.74%)</title><rect x="516.2" y="485" width="60.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="519.22" y="495.5" >std::e..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int, unsigned int&gt;::_M_head (151,872 samples, 0.02%)</title><rect x="754.9" y="565" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="757.93" y="575.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (411,266 samples, 0.04%)</title><rect x="87.6" y="437" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="90.62" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (214,595 samples, 0.02%)</title><rect x="346.5" y="469" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="349.47" y="479.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::QueueUlDci (398,861 samples, 0.04%)</title><rect x="296.4" y="549" width="0.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="299.41" y="559.5" ></text>
</g>
<g >
<title>int&amp; std::vector&lt;int, std::allocator&lt;int&gt; &gt;::emplace_back&lt;int&gt; (463,033 samples, 0.05%)</title><rect x="396.5" y="533" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="399.55" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (234,309 samples, 0.02%)</title><rect x="385.1" y="373" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="388.13" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (152,677 samples, 0.02%)</title><rect x="397.5" y="501" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="400.46" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteSpectrumSignalParametersDataFrame&gt; ns3::Create&lt;ns3::LteSpectrumSignalParametersDataFrame&gt; (1,650,971 samples, 0.17%)</title><rect x="669.3" y="533" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="672.26" y="543.5" ></text>
</g>
<g >
<title>ns3::LteInterference::EndRx (324,769 samples, 0.03%)</title><rect x="611.9" y="549" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="614.94" y="559.5" ></text>
</g>
<g >
<title>double* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;double const, double&gt; (242,020 samples, 0.02%)</title><rect x="412.7" y="373" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="415.73" y="383.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (191,238 samples, 0.02%)</title><rect x="97.0" y="405" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="99.98" y="415.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a2&lt;false, double const*, double*&gt; (326,485 samples, 0.03%)</title><rect x="412.7" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="415.66" y="399.5" ></text>
</g>
<g >
<title>operator new (249,753 samples, 0.03%)</title><rect x="72.8" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="75.85" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Copy (3,250,861 samples, 0.34%)</title><rect x="645.9" y="453" width="2.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="648.86" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, double&gt; &gt; std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;int, double&gt; &gt; (385,367 samples, 0.04%)</title><rect x="110.9" y="501" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="113.86" y="511.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; (745,848 samples, 0.08%)</title><rect x="263.5" y="437" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="266.46" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::LteUePhy::UeMeasurementsElement, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::LteUePhy::UeMeasurementsElement&gt; &gt; &gt;::find (162,761 samples, 0.02%)</title><rect x="601.2" y="309" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="604.21" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_M_deallocate (157,246 samples, 0.02%)</title><rect x="25.0" y="293" width="0.1" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="28.01" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_ptr (158,716 samples, 0.02%)</title><rect x="274.4" y="389" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="277.37" y="399.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (248,954 samples, 0.03%)</title><rect x="581.6" y="325" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="584.63" y="335.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (776,679 samples, 0.08%)</title><rect x="774.8" y="309" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="777.81" y="319.5" ></text>
</g>
<g >
<title>decltype  (564,633 samples, 0.06%)</title><rect x="499.7" y="453" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="502.67" y="463.5" ></text>
</g>
<g >
<title>int* std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (627,364 samples, 0.06%)</title><rect x="573.8" y="293" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="576.81" y="303.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__copy_move_a2&lt;false, ns3::HarqProcessInfoElement_t const*, ns3::HarqProcessInfoElement_t*&gt; (437,467 samples, 0.05%)</title><rect x="513.1" y="437" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="516.12" y="447.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator[] (524,698 samples, 0.05%)</title><rect x="678.2" y="501" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="681.19" y="511.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::PacketBurst const&gt; &gt;::operator (283,255 samples, 0.03%)</title><rect x="613.3" y="549" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="616.35" y="559.5" ></text>
</g>
<g >
<title>ns3::DlDciListElement_s::operator= (501,657 samples, 0.05%)</title><rect x="147.9" y="437" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="150.88" y="447.5" ></text>
</g>
<g >
<title>ns3::Vector3D::Vector3D (126,463 samples, 0.01%)</title><rect x="740.2" y="469" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="743.21" y="479.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*&gt; (158,025 samples, 0.02%)</title><rect x="502.6" y="341" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="505.61" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::TbId_t, ns3::tbInfo_t, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::find (930,818 samples, 0.10%)</title><rect x="386.5" y="533" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="389.49" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteHarqPhy&gt;::operator (199,830 samples, 0.02%)</title><rect x="492.1" y="549" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="495.14" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;::_M_ptr (164,453 samples, 0.02%)</title><rect x="222.0" y="405" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="224.96" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1,886,775 samples, 0.19%)</title><rect x="573.6" y="357" width="1.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="576.55" y="367.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::~SimpleRefCount (491,149 samples, 0.05%)</title><rect x="378.9" y="309" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="381.93" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::PacketMetadata::Data*, std::allocator&lt;ns3::PacketMetadata::Data*&gt; &gt;::empty (561,769 samples, 0.06%)</title><rect x="558.3" y="197" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="561.26" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,105,662 samples, 0.22%)</title><rect x="15.5" y="805" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.45" y="815.5" ></text>
</g>
<g >
<title>void  (160,326 samples, 0.02%)</title><rect x="418.9" y="389" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="421.90" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_end (236,415 samples, 0.02%)</title><rect x="189.5" y="453" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="192.51" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::operator (230,158 samples, 0.02%)</title><rect x="323.8" y="501" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="326.75" y="511.5" ></text>
</g>
<g >
<title> (200,105 samples, 0.02%)</title><rect x="778.3" y="725" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="781.35" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (1,368,772 samples, 0.14%)</title><rect x="223.8" y="469" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="226.75" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (1,044,098 samples, 0.11%)</title><rect x="677.3" y="469" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="680.26" y="479.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;, ns3::BuildDataListElement_s*&gt; (515,194 samples, 0.05%)</title><rect x="141.9" y="389" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="144.92" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_S_key (411,593 samples, 0.04%)</title><rect x="241.9" y="437" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="244.91" y="447.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s::HarqStatus_e const* std::__niter_base&lt;ns3::DlInfoListElement_s::HarqStatus_e const*, std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt; &gt; (383,145 samples, 0.04%)</title><rect x="259.6" y="293" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="262.60" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (204,699 samples, 0.02%)</title><rect x="478.0" y="261" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="481.02" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (441,975 samples, 0.05%)</title><rect x="434.3" y="277" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="437.30" y="287.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (161,203 samples, 0.02%)</title><rect x="327.0" y="469" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="330.02" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_erase (234,910 samples, 0.02%)</title><rect x="509.5" y="517" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="512.50" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::Packet&gt;, ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (274,733 samples, 0.03%)</title><rect x="23.2" y="293" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="26.25" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt; std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;ns3::VendorSpecificListElement_s*, std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt; &gt;, ns3::VendorSpecificListElement_s*&gt; (150,740 samples, 0.02%)</title><rect x="25.8" y="245" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="28.78" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt;::erase (483,013 samples, 0.05%)</title><rect x="110.4" y="517" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="113.44" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_M_realloc_insert&lt;ns3::RlcPduListElement_s const&amp;&gt; (943,698 samples, 0.10%)</title><rect x="209.4" y="469" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="212.41" y="479.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_assign_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (804,377 samples, 0.08%)</title><rect x="318.7" y="437" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="321.72" y="447.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumValue, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumValue&gt; &gt;::Ref (201,883 samples, 0.02%)</title><rect x="751.4" y="533" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="754.40" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~list (221,766 samples, 0.02%)</title><rect x="324.3" y="421" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="327.31" y="431.5" ></text>
</g>
<g >
<title>ns3::MakeEvent&lt;void  (8,388,558 samples, 0.87%)</title><rect x="770.5" y="677" width="6.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="773.48" y="687.5" ></text>
</g>
<g >
<title>malloc (195,774 samples, 0.02%)</title><rect x="210.9" y="373" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="213.92" y="383.5" ></text>
</g>
<g >
<title>ns3::EventImpl::EventImpl (513,449 samples, 0.05%)</title><rect x="280.8" y="501" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="283.84" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::Ptr (267,680 samples, 0.03%)</title><rect x="628.1" y="517" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="631.07" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt; &gt; &gt; &gt; &gt;::end (265,362 samples, 0.03%)</title><rect x="349.0" y="533" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="352.01" y="543.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt;::Delete (601,254 samples, 0.06%)</title><rect x="324.0" y="469" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="327.00" y="479.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (1,367,896 samples, 0.14%)</title><rect x="563.3" y="149" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="566.30" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_fill_insert (533,523 samples, 0.06%)</title><rect x="100.2" y="437" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="103.19" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy (158,119 samples, 0.02%)</title><rect x="340.6" y="261" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="343.65" y="271.5" ></text>
</g>
<g >
<title>ns3::SpectrumSignalParameters::SpectrumSignalParameters (821,477 samples, 0.08%)</title><rect x="88.8" y="501" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="91.76" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::AntennaModel&gt; ns3::DynamicCast&lt;ns3::AntennaModel, ns3::Object&gt; (814,268 samples, 0.08%)</title><rect x="741.5" y="549" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="744.53" y="559.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Packet, ns3::Empty, ns3::DefaultDeleter&lt;ns3::Packet&gt; &gt;::Unref (4,472,125 samples, 0.46%)</title><rect x="545.5" y="165" width="3.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="548.51" y="175.5" ></text>
</g>
<g >
<title>ns3::LteInterference*&amp; std::__get_helper&lt;0ul, ns3::LteInterference*, ns3::Ptr&lt;ns3::SpectrumValue const&gt;, unsigned int&gt; (491,189 samples, 0.05%)</title><rect x="752.8" y="581" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="755.81" y="591.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt; ns3::Create&lt;ns3::Packet, unsigned int&amp;&gt; (229,600 samples, 0.02%)</title><rect x="15.5" y="373" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.49" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (153,387 samples, 0.02%)</title><rect x="527.8" y="261" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="530.84" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (258,906 samples, 0.03%)</title><rect x="666.3" y="373" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="669.30" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::_Vector_impl::_Vector_impl (227,726 samples, 0.02%)</title><rect x="125.8" y="341" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="128.80" y="351.5" ></text>
</g>
<g >
<title>decltype  (194,069 samples, 0.02%)</title><rect x="104.6" y="309" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="107.61" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::at (127,693 samples, 0.01%)</title><rect x="575.9" y="357" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="578.89" y="367.5" ></text>
</g>
<g >
<title>ns3::LteUePhy* ns3::PeekPointer&lt;ns3::LteUePhy&gt; (477,176 samples, 0.05%)</title><rect x="579.0" y="389" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="582.01" y="399.5" ></text>
</g>
<g >
<title>decltype  (323,441 samples, 0.03%)</title><rect x="596.3" y="245" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="599.30" y="255.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::Packet&gt;::operator (367,419 samples, 0.04%)</title><rect x="492.8" y="549" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="495.78" y="559.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::construct&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (266,180 samples, 0.03%)</title><rect x="319.1" y="325" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="322.05" y="335.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Add (367,754 samples, 0.04%)</title><rect x="410.2" y="517" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="413.16" y="527.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (147,352 samples, 0.02%)</title><rect x="10.1" y="741" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.10" y="751.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, bool&gt; &gt;::type std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::insert&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (4,750,006 samples, 0.49%)</title><rect x="660.7" y="453" width="3.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="663.71" y="463.5" ></text>
</g>
<g >
<title>ns3::tbInfo_t::~tbInfo_t (865,871 samples, 0.09%)</title><rect x="505.6" y="421" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="508.58" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteUeMac::LcInfo&gt; &gt; &gt;::end (200,190 samples, 0.02%)</title><rect x="571.6" y="309" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="574.58" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumChannel&gt;::operator (153,603 samples, 0.02%)</title><rect x="671.1" y="533" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="674.08" y="543.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; (361,717 samples, 0.04%)</title><rect x="416.0" y="517" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="419.03" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (893,699 samples, 0.09%)</title><rect x="549.7" y="213" width="0.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="552.70" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters, std::allocator&lt;ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters&gt; &gt;::at (476,232 samples, 0.05%)</title><rect x="262.7" y="517" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="265.73" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (165,055 samples, 0.02%)</title><rect x="493.4" y="517" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="496.44" y="527.5" ></text>
</g>
<g >
<title>malloc (165,510 samples, 0.02%)</title><rect x="562.3" y="149" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="565.26" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::operator (167,770 samples, 0.02%)</title><rect x="565.2" y="229" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="568.23" y="239.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt; &gt;::_List_const_iterator (127,995 samples, 0.01%)</title><rect x="567.2" y="229" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="570.15" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::pair&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (151,208 samples, 0.02%)</title><rect x="658.9" y="389" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="661.95" y="399.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned char*&gt; (237,950 samples, 0.02%)</title><rect x="686.4" y="421" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="689.35" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_move_nodes (452,596 samples, 0.05%)</title><rect x="621.9" y="389" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="624.86" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::operator= (528,635 samples, 0.05%)</title><rect x="140.3" y="469" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="143.28" y="479.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (415,834 samples, 0.04%)</title><rect x="15.5" y="501" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="18.45" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::at (282,384 samples, 0.03%)</title><rect x="532.0" y="341" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="535.05" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;::_M_clear (1,220,101 samples, 0.13%)</title><rect x="392.8" y="517" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="395.84" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (157,055 samples, 0.02%)</title><rect x="214.0" y="437" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="217.05" y="447.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; (234,294 samples, 0.02%)</title><rect x="291.8" y="485" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="294.83" y="495.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::Callback&lt;void  (74,776,631 samples, 7.71%)</title><rect x="516.5" y="469" width="60.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="519.45" y="479.5" >void s..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_ptr (229,970 samples, 0.02%)</title><rect x="451.4" y="181" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="454.39" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator= (188,428 samples, 0.02%)</title><rect x="246.7" y="485" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="249.68" y="495.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (271,484 samples, 0.03%)</title><rect x="96.0" y="373" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="98.95" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RachListElement_s, std::allocator&lt;ns3::RachListElement_s&gt; &gt;::clear (195,412 samples, 0.02%)</title><rect x="208.8" y="485" width="0.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="211.78" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (474,207 samples, 0.05%)</title><rect x="730.6" y="437" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="733.60" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt;::~vector (456,474 samples, 0.05%)</title><rect x="139.6" y="469" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="142.60" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (190,276 samples, 0.02%)</title><rect x="110.1" y="469" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="113.06" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned int&gt; &gt; &gt;::find (201,734 samples, 0.02%)</title><rect x="234.3" y="453" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="237.34" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::UlDciListElement_s, std::allocator&lt;ns3::UlDciListElement_s&gt; &gt; &gt; &gt; &gt;::find (1,193,975 samples, 0.12%)</title><rect x="240.6" y="485" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="243.60" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, ns3::MultiModelSpectrumChannel*, ns3::Ptr&lt;ns3::SpectrumValue&gt;, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::~_Tuple_impl (361,973 samples, 0.04%)</title><rect x="666.2" y="437" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="669.22" y="447.5" ></text>
</g>
<g >
<title>ns3::MemberLteFfrSapProvider&lt;ns3::LteFrNoOpAlgorithm&gt;::GetAvailableUlRbg (157,176 samples, 0.02%)</title><rect x="176.2" y="485" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="179.22" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_S_relocate (197,721 samples, 0.02%)</title><rect x="215.5" y="437" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="218.54" y="447.5" ></text>
</g>
<g >
<title>[libm.so.6] (198,109 samples, 0.02%)</title><rect x="226.9" y="485" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="229.94" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (276,224 samples, 0.03%)</title><rect x="153.6" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="156.58" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned short&gt;::operator (274,669 samples, 0.03%)</title><rect x="224.6" y="437" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="227.60" y="447.5" ></text>
</g>
<g >
<title>ns3::MacCeValue_u::~MacCeValue_u (162,616 samples, 0.02%)</title><rect x="457.7" y="245" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="460.72" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (993,807 samples, 0.10%)</title><rect x="242.6" y="453" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="245.62" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::operator bool (176,535 samples, 0.02%)</title><rect x="74.7" y="517" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="77.71" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::RxSpectrumModelInfo&gt; &gt; &gt;::begin (243,486 samples, 0.03%)</title><rect x="80.7" y="501" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="83.70" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void  (796,462 samples, 0.08%)</title><rect x="618.4" y="501" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="621.39" y="511.5" ></text>
</g>
<g >
<title>int* std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (192,628 samples, 0.02%)</title><rect x="398.4" y="501" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="401.44" y="511.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_Bvector_impl_data::_Bvector_impl_data (154,936 samples, 0.02%)</title><rect x="195.9" y="437" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="198.89" y="447.5" ></text>
</g>
<g >
<title>ns3::PacketBurst::~PacketBurst (815,660 samples, 0.08%)</title><rect x="774.8" y="325" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="777.81" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;void  (22,443,594 samples, 2.31%)</title><rect x="17.2" y="725" width="18.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="20.17" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::difference_type __gnu_cxx::operator-&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (150,492 samples, 0.02%)</title><rect x="621.2" y="517" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="624.23" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::vector (1,764,689 samples, 0.18%)</title><rect x="444.0" y="325" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="447.04" y="335.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; (2,842,730 samples, 0.29%)</title><rect x="451.6" y="181" width="2.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="454.61" y="191.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Copy&lt;ns3::SpectrumValue&gt; (1,504,235 samples, 0.16%)</title><rect x="324.7" y="501" width="1.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="327.70" y="511.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, unsigned short, double, double, unsigned char&gt;::operator (698,650 samples, 0.07%)</title><rect x="600.5" y="309" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="603.48" y="319.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::Acquire (357,119 samples, 0.04%)</title><rect x="750.8" y="549" width="0.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="753.79" y="559.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (258,683 samples, 0.03%)</title><rect x="339.7" y="453" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="342.75" y="463.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (441,158 samples, 0.05%)</title><rect x="733.3" y="405" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="736.30" y="415.5" ></text>
</g>
<g >
<title>unsigned int const&amp; std::max&lt;unsigned int&gt; (164,916 samples, 0.02%)</title><rect x="76.3" y="197" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="79.34" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_drop_node (2,330,463 samples, 0.24%)</title><rect x="763.2" y="661" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="766.17" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_Auto_node::_M_insert (278,782 samples, 0.03%)</title><rect x="706.8" y="405" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="709.77" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::operator[] (205,431 samples, 0.02%)</title><rect x="530.9" y="325" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="533.93" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt;::end (204,400 samples, 0.02%)</title><rect x="584.3" y="245" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="587.26" y="255.5" ></text>
</g>
<g >
<title>ns3::UlInfoListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::UlInfoListElement_s const*, std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt; &gt;, ns3::UlInfoListElement_s*, ns3::UlInfoListElement_s&gt; (872,914 samples, 0.09%)</title><rect x="266.2" y="485" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="269.17" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::_S_left (226,586 samples, 0.02%)</title><rect x="322.1" y="437" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="325.08" y="447.5" ></text>
</g>
<g >
<title>ns3::Angles::Angles (1,751,854 samples, 0.18%)</title><rect x="702.2" y="549" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="705.18" y="559.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::NoOpComponentCarrierManager&gt;::TransmitPdu (549,181 samples, 0.06%)</title><rect x="15.9" y="389" width="0.4" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="18.88" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (221,766 samples, 0.02%)</title><rect x="324.3" y="405" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="327.31" y="415.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;unsigned char*&gt; (220,248 samples, 0.02%)</title><rect x="255.2" y="309" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="258.22" y="319.5" ></text>
</g>
<g >
<title>ns3::UeSelected_s::~UeSelected_s (190,389 samples, 0.02%)</title><rect x="461.1" y="277" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="464.10" y="287.5" ></text>
</g>
<g >
<title>int* std::copy&lt;int*, int*&gt; (195,561 samples, 0.02%)</title><rect x="304.3" y="501" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="307.29" y="511.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a1&lt;false, double const*, double*&gt; (447,358 samples, 0.05%)</title><rect x="647.6" y="373" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="650.56" y="383.5" ></text>
</g>
<g >
<title>ns3::LteUePhy::ReportDataInterference (740,140 samples, 0.08%)</title><rect x="483.1" y="341" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="486.06" y="351.5" ></text>
</g>
<g >
<title>std::_Bit_iterator std::__copy_move_a&lt;false, std::_Bit_const_iterator, std::_Bit_iterator&gt; (454,947 samples, 0.05%)</title><rect x="199.2" y="405" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="202.24" y="415.5" ></text>
</g>
<g >
<title>ns3::DlCqiLteControlMessage::~DlCqiLteControlMessage (159,078 samples, 0.02%)</title><rect x="497.5" y="421" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="500.46" y="431.5" ></text>
</g>
<g >
<title>ns3::Packet::Packet (5,056,417 samples, 0.52%)</title><rect x="555.6" y="245" width="4.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="558.60" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::at (156,958 samples, 0.02%)</title><rect x="173.4" y="453" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="176.43" y="463.5" ></text>
</g>
<g >
<title>ns3::Now (627,315 samples, 0.06%)</title><rect x="408.3" y="533" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="411.34" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_Rb_tree_iterator (125,563 samples, 0.01%)</title><rect x="86.3" y="437" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="89.31" y="447.5" ></text>
</g>
<g >
<title>operator new (277,002 samples, 0.03%)</title><rect x="649.1" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="652.06" y="495.5" ></text>
</g>
<g >
<title>unsigned short&amp; std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::emplace_back&lt;unsigned short&gt; (2,449,232 samples, 0.25%)</title><rect x="218.0" y="469" width="2.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="221.00" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::Object&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Object&gt; &gt; &gt;::~vector (234,790 samples, 0.02%)</title><rect x="775.0" y="277" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="777.96" y="287.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::~PacketTagList (155,483 samples, 0.02%)</title><rect x="774.6" y="181" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="777.56" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_get_node (475,198 samples, 0.05%)</title><rect x="626.5" y="453" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="629.46" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_M_range_check (156,928 samples, 0.02%)</title><rect x="510.8" y="533" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="513.78" y="543.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Add (1,307,991 samples, 0.13%)</title><rect x="713.9" y="485" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="716.88" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (160,055 samples, 0.02%)</title><rect x="416.8" y="501" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="419.79" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::begin (339,771 samples, 0.04%)</title><rect x="317.6" y="389" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="320.63" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned int&gt;::_M_head (356,195 samples, 0.04%)</title><rect x="756.0" y="565" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="758.98" y="575.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (154,939 samples, 0.02%)</title><rect x="464.2" y="501" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="467.16" y="511.5" ></text>
</g>
<g >
<title> (356,060 samples, 0.04%)</title><rect x="75.0" y="501" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="78.03" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (158,373 samples, 0.02%)</title><rect x="203.4" y="341" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="206.35" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::at (386,249 samples, 0.04%)</title><rect x="205.7" y="485" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="208.73" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr&lt;ns3::SpectrumModel&gt; (168,069 samples, 0.02%)</title><rect x="56.1" y="485" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="59.14" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (352,600 samples, 0.04%)</title><rect x="237.1" y="405" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="240.07" y="415.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a1&lt;false, double const*, double*&gt; (238,145 samples, 0.02%)</title><rect x="325.0" y="373" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="328.04" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Rb_tree (326,142 samples, 0.03%)</title><rect x="88.2" y="485" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="91.19" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_erase_aux (5,384,995 samples, 0.56%)</title><rect x="762.5" y="677" width="4.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="765.53" y="687.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::NodeListPriv&gt;::operator= (238,924 samples, 0.02%)</title><rect x="36.6" y="613" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="39.64" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::vector (237,492 samples, 0.02%)</title><rect x="24.6" y="325" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="27.56" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_M_lower_bound (314,909 samples, 0.03%)</title><rect x="529.6" y="309" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="532.58" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, double&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, double&gt; &gt; &gt;::_M_begin (263,024 samples, 0.03%)</title><rect x="294.6" y="501" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="297.63" y="511.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Schedule (1,350,821 samples, 0.14%)</title><rect x="304.9" y="485" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="307.95" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::end (162,948 samples, 0.02%)</title><rect x="254.7" y="517" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="257.75" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; (266,588 samples, 0.03%)</title><rect x="193.3" y="405" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="196.34" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::find (148,308 samples, 0.02%)</title><rect x="121.8" y="517" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="124.79" y="527.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_valptr (431,355 samples, 0.04%)</title><rect x="22.4" y="293" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="25.41" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel&gt;::Ptr (284,534 samples, 0.03%)</title><rect x="67.0" y="501" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="70.04" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (161,021 samples, 0.02%)</title><rect x="454.7" y="213" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="457.70" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned int&gt; &gt;::deallocate (227,074 samples, 0.02%)</title><rect x="697.2" y="453" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="700.18" y="463.5" ></text>
</g>
<g >
<title>unsigned char* std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (698,551 samples, 0.07%)</title><rect x="214.0" y="469" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="217.05" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, double, ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (326,828 samples, 0.03%)</title><rect x="87.7" y="357" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="90.69" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_drop_node (197,031 samples, 0.02%)</title><rect x="776.6" y="389" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="779.63" y="399.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (489,748 samples, 0.05%)</title><rect x="639.6" y="453" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="642.61" y="463.5" ></text>
</g>
<g >
<title>ns3::Packet::AddByteTag (307,844 samples, 0.03%)</title><rect x="18.7" y="405" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="21.70" y="415.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::SpectrumSignalParameters, ns3::Empty, ns3::DefaultDeleter&lt;ns3::SpectrumSignalParameters&gt; &gt;::Unref (155,066 samples, 0.02%)</title><rect x="670.6" y="517" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="673.62" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, bool&gt; std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::emplace&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (157,520 samples, 0.02%)</title><rect x="115.8" y="485" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="118.82" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::find (452,741 samples, 0.05%)</title><rect x="135.5" y="469" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="138.48" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Copy&lt;ns3::SpectrumValue&gt; (759,296 samples, 0.08%)</title><rect x="78.2" y="517" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="81.15" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::_Vector_base (571,217 samples, 0.06%)</title><rect x="144.4" y="437" width="0.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="147.38" y="447.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::operator* (243,270 samples, 0.03%)</title><rect x="70.2" y="453" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="73.18" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (248,988 samples, 0.03%)</title><rect x="61.7" y="517" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="64.70" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (330,983 samples, 0.03%)</title><rect x="527.3" y="165" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="530.34" y="175.5" ></text>
</g>
<g >
<title>ns3::EventImpl::Invoke (238,924 samples, 0.02%)</title><rect x="36.6" y="741" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="39.64" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const*, std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt;, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*&gt; (338,383 samples, 0.03%)</title><rect x="204.9" y="357" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="207.86" y="367.5" ></text>
</g>
<g >
<title>[libm.so.6] (158,134 samples, 0.02%)</title><rect x="702.3" y="517" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="705.33" y="527.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s* std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::BuildDataListElement_s const*, std::vector&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt; &gt;, ns3::BuildDataListElement_s*&gt; (515,194 samples, 0.05%)</title><rect x="141.9" y="405" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="144.92" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::_M_drop_node (669,961 samples, 0.07%)</title><rect x="233.1" y="405" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="236.11" y="415.5" ></text>
</g>
<g >
<title>ns3::ObjectDeleter::Delete (4,998,634 samples, 0.52%)</title><rect x="377.4" y="389" width="4.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="380.39" y="399.5" ></text>
</g>
<g >
<title>ns3::MacCeListElement_s::operator= (1,023,273 samples, 0.11%)</title><rect x="685.7" y="485" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="688.72" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildBroadcastListElement_s, std::allocator&lt;ns3::BuildBroadcastListElement_s&gt; &gt;::~_Vector_base (193,710 samples, 0.02%)</title><rect x="145.1" y="437" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="148.13" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_S_maximum (160,901 samples, 0.02%)</title><rect x="59.1" y="453" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="62.08" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::map&lt;unsigned char, ns3::LteMacSapUser*, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt; &gt; &gt; &gt;::_M_end (157,738 samples, 0.02%)</title><rect x="433.5" y="293" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="436.45" y="303.5" ></text>
</g>
<g >
<title>ns3::NoOpComponentCarrierManager::DoNotifyTxOpportunity (10,110,654 samples, 1.04%)</title><rect x="150.8" y="437" width="8.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="153.82" y="447.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, unsigned short, double&gt;::operator (430,115 samples, 0.04%)</title><rect x="682.1" y="533" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="685.07" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt; ns3::Create&lt;ns3::SpectrumValue, ns3::Ptr&lt;ns3::SpectrumModel const&gt; &gt; (3,855,019 samples, 0.40%)</title><rect x="401.7" y="517" width="3.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="404.67" y="527.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (2,983,151 samples, 0.31%)</title><rect x="17.2" y="485" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="20.17" y="495.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::is_constructible&lt;std::pair&lt;int const, double&gt;, std::pair&lt;int, double&gt; &gt;::value, std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int const, double&gt; &gt;, bool&gt; &gt;::type std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::insert&lt;std::pair&lt;int, double&gt; &gt; (574,148 samples, 0.06%)</title><rect x="110.8" y="517" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="113.83" y="527.5" ></text>
</g>
<g >
<title>ns3::LtePhy::SetControlMessages (378,472 samples, 0.04%)</title><rect x="689.3" y="469" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="692.30" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (157,831 samples, 0.02%)</title><rect x="383.3" y="469" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="386.26" y="479.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::~SbMeasResult_s (859,795 samples, 0.09%)</title><rect x="255.0" y="373" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="258.00" y="383.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::NoOpComponentCarrierManager&gt;::TransmitPdu (1,327,529 samples, 0.14%)</title><rect x="11.4" y="405" width="1.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="14.43" y="415.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (661,742 samples, 0.07%)</title><rect x="63.1" y="485" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="66.05" y="495.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (1,023,427 samples, 0.11%)</title><rect x="306.1" y="469" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="309.12" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::_M_lower_bound (559,810 samples, 0.06%)</title><rect x="185.6" y="453" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="188.58" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::deallocate (158,232 samples, 0.02%)</title><rect x="501.2" y="469" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="504.20" y="479.5" ></text>
</g>
<g >
<title>int const* std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (127,383 samples, 0.01%)</title><rect x="574.0" y="261" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="577.04" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (163,045 samples, 0.02%)</title><rect x="707.3" y="389" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="710.34" y="399.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::SpectrumValue const&amp;&gt;::DoPeekImpl (161,766 samples, 0.02%)</title><rect x="467.5" y="501" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="470.54" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::empty (825,740 samples, 0.09%)</title><rect x="256.9" y="517" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="259.94" y="527.5" ></text>
</g>
<g >
<title>ns3::Object::Object (305,763 samples, 0.03%)</title><rect x="370.8" y="501" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="373.79" y="511.5" ></text>
</g>
<g >
<title>__log10_finite (314,933 samples, 0.03%)</title><rect x="681.4" y="517" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="684.42" y="527.5" ></text>
</g>
<g >
<title>ns3::IsotropicAntennaModel::GetGainDb (306,931 samples, 0.03%)</title><rect x="642.8" y="517" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="645.78" y="527.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::CqiListElement_s*, std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt; &gt;, ns3::CqiListElement_s*, ns3::CqiListElement_s&gt; (3,635,299 samples, 0.37%)</title><rect x="124.4" y="485" width="3.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="127.44" y="495.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (1,413,703 samples, 0.15%)</title><rect x="677.0" y="485" width="1.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="679.96" y="495.5" ></text>
</g>
<g >
<title>ns3::PacketMetadata::PacketMetadata (584,751 samples, 0.06%)</title><rect x="360.1" y="485" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="363.08" y="495.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::operator (160,403 samples, 0.02%)</title><rect x="744.9" y="533" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="747.94" y="543.5" ></text>
</g>
<g >
<title>ns3::AttributeConstructionList::AttributeConstructionList (757,136 samples, 0.08%)</title><rect x="630.0" y="501" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="633.00" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::at (156,928 samples, 0.02%)</title><rect x="510.8" y="549" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="513.78" y="559.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (414,048 samples, 0.04%)</title><rect x="64.0" y="453" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="67.01" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (420,658 samples, 0.04%)</title><rect x="81.8" y="469" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="84.81" y="479.5" ></text>
</g>
<g >
<title>ns3::Time::~Time (269,802 samples, 0.03%)</title><rect x="278.6" y="501" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="281.58" y="511.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::EventImpl, ns3::Empty, ns3::DefaultDeleter&lt;ns3::EventImpl&gt; &gt;::Unref (240,387 samples, 0.02%)</title><rect x="39.9" y="693" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="42.86" y="703.5" ></text>
</g>
<g >
<title>decltype  (252,039 samples, 0.03%)</title><rect x="101.6" y="421" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="104.59" y="431.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::GenerateDataCqiReport (10,863,791 samples, 1.12%)</title><rect x="472.7" y="341" width="8.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="475.69" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt;::pair (349,723 samples, 0.04%)</title><rect x="277.3" y="469" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="280.30" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::find (1,293,049 samples, 0.13%)</title><rect x="567.7" y="277" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="570.72" y="287.5" ></text>
</g>
<g >
<title>double* std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (303,198 samples, 0.03%)</title><rect x="654.7" y="421" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="657.68" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_S_key (154,486 samples, 0.02%)</title><rect x="659.3" y="453" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="662.28" y="463.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::~SpectrumValue (447,563 samples, 0.05%)</title><rect x="303.6" y="453" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="306.56" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::base (148,134 samples, 0.02%)</title><rect x="356.7" y="501" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="359.69" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_erase (270,414 samples, 0.03%)</title><rect x="341.4" y="437" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="344.36" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;*, void&gt; (228,797 samples, 0.02%)</title><rect x="354.5" y="533" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="357.49" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::lower_bound (238,325 samples, 0.02%)</title><rect x="332.8" y="485" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="335.80" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (891,010,862 samples, 91.88%)</title><rect x="41.6" y="677" width="716.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="44.56" y="687.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>std::_Function_handler&lt;void  (194,457 samples, 0.02%)</title><rect x="727.7" y="389" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="730.69" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;ns3::LteSpectrumPhy*&gt;::tuple&lt;ns3::LteSpectrumPhy*&amp;, true, true&gt; (451,930 samples, 0.05%)</title><rect x="638.6" y="453" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="641.63" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt;::allocate (124,601 samples, 0.01%)</title><rect x="611.2" y="453" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="614.25" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::~vector (447,401 samples, 0.05%)</title><rect x="473.3" y="293" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="476.25" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::ByteTagListData*, std::allocator&lt;ns3::ByteTagListData*&gt; &gt;::back (538,428 samples, 0.06%)</title><rect x="553.6" y="213" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="556.55" y="223.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Acquire (243,600 samples, 0.03%)</title><rect x="277.9" y="485" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="280.86" y="495.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::~LteSpectrumSignalParametersDlCtrlFrame (493,631 samples, 0.05%)</title><rect x="324.1" y="453" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="327.09" y="463.5" ></text>
</g>
<g >
<title>double* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;double const, double&gt; (157,987 samples, 0.02%)</title><rect x="325.1" y="341" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="328.10" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; &gt; &gt;::push_back (266,576 samples, 0.03%)</title><rect x="358.5" y="533" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="361.50" y="543.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;::_M_valptr (268,362 samples, 0.03%)</title><rect x="451.4" y="197" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="454.36" y="207.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, ns3::Callback&lt;void, ns3::UlInfoListElement_s&gt;::Callback&lt;void  (2,014,597 samples, 0.21%)</title><rect x="439.3" y="469" width="1.6" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="442.32" y="479.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (1,698,937 samples, 0.18%)</title><rect x="563.1" y="165" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="566.13" y="175.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s*, ns3::DlInfoListElement_s&gt; (886,663 samples, 0.09%)</title><rect x="132.4" y="485" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="135.37" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_ptr (239,221 samples, 0.02%)</title><rect x="663.5" y="357" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="666.54" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;void  (261,260 samples, 0.03%)</title><rect x="308.4" y="421" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="311.37" y="431.5" ></text>
</g>
<g >
<title>std::operator== (197,446 samples, 0.02%)</title><rect x="509.7" y="549" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="512.69" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::lower_bound (147,572 samples, 0.02%)</title><rect x="294.2" y="517" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="297.21" y="527.5" ></text>
</g>
<g >
<title>ns3::UlCqi_s::~UlCqi_s (502,449 samples, 0.05%)</title><rect x="472.9" y="293" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="475.85" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::PacketMetadata::Data*, std::allocator&lt;ns3::PacketMetadata::Data*&gt; &gt;::empty (674,989 samples, 0.07%)</title><rect x="14.8" y="341" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="17.82" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_deallocate (199,701 samples, 0.02%)</title><rect x="716.8" y="389" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="719.83" y="399.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (19,285,336 samples, 1.99%)</title><rect x="19.6" y="501" width="15.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="22.60" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (158,119 samples, 0.02%)</title><rect x="340.6" y="245" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="343.65" y="255.5" ></text>
</g>
<g >
<title>ns3::SimpleRefCount&lt;ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter&gt;::Unref (707,699 samples, 0.07%)</title><rect x="612.8" y="533" width="0.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="615.78" y="543.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters::~SchedUlCqiInfoReqParameters (949,850 samples, 0.10%)</title><rect x="472.9" y="309" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="475.85" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::RarLteControlMessage::Rar, std::allocator&lt;ns3::RarLteControlMessage::Rar&gt; &gt;::~list (430,365 samples, 0.04%)</title><rect x="167.1" y="373" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="170.12" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt;::operator+ (159,119 samples, 0.02%)</title><rect x="128.5" y="501" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="131.47" y="511.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (3,688,502 samples, 0.38%)</title><rect x="637.1" y="533" width="2.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="640.07" y="543.5" ></text>
</g>
<g >
<title>ns3::HarqProcessInfoElement_t* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HarqProcessInfoElement_t const*, std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt; &gt;, ns3::HarqProcessInfoElement_t*, ns3::HarqProcessInfoElement_t&gt; (1,566,463 samples, 0.16%)</title><rect x="512.4" y="533" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="515.43" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,321,712 samples, 0.55%)</title><rect x="11.2" y="693" width="4.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="14.17" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::~_Vector_base (168,609 samples, 0.02%)</title><rect x="521.7" y="325" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="524.72" y="335.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (443,816 samples, 0.05%)</title><rect x="68.9" y="405" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="71.93" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::BuildRarListElement_s, std::allocator&lt;ns3::BuildRarListElement_s&gt; &gt;::size (155,525 samples, 0.02%)</title><rect x="143.8" y="437" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="146.76" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_get_Tp_allocator (386,559 samples, 0.04%)</title><rect x="693.7" y="421" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="696.69" y="431.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*, ns3::HigherLayerSelected_s&gt; (151,182 samples, 0.02%)</title><rect x="92.3" y="341" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="95.31" y="351.5" ></text>
</g>
<g >
<title>ns3::LteRadioBearerTag::GetInstanceTypeId (266,218 samples, 0.03%)</title><rect x="21.1" y="325" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="24.08" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (333,368 samples, 0.03%)</title><rect x="125.3" y="261" width="0.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="128.29" y="271.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::DlInfoListElement_s*&gt; (1,227,211 samples, 0.13%)</title><rect x="256.0" y="469" width="0.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="258.95" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::RlcPduListElement_s const*, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt;::base (155,263 samples, 0.02%)</title><rect x="212.4" y="325" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="215.41" y="335.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::LteEnbMac&gt;::TransmitPdu (579,238 samples, 0.06%)</title><rect x="17.2" y="373" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="20.17" y="383.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Divide (438,578 samples, 0.05%)</title><rect x="484.5" y="501" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="487.49" y="511.5" ></text>
</g>
<g >
<title>double* std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (700,030 samples, 0.07%)</title><rect x="412.4" y="421" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="415.39" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::__normal_iterator (202,662 samples, 0.02%)</title><rect x="416.6" y="501" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="419.62" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node::operator (156,128 samples, 0.02%)</title><rect x="667.1" y="213" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="670.07" y="223.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteEnbPhySapUser::ReceiveLteControlMessage (20,400,169 samples, 2.10%)</title><rect x="445.5" y="357" width="16.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="448.46" y="367.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::SpectrumValue (361,724 samples, 0.04%)</title><rect x="71.6" y="421" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="74.62" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (7,196,969 samples, 0.74%)</title><rect x="771.4" y="645" width="5.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="774.44" y="655.5" ></text>
</g>
<g >
<title>double&amp; std::forward&lt;double&amp;&gt; (151,412 samples, 0.02%)</title><rect x="666.5" y="453" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="669.51" y="463.5" ></text>
</g>
<g >
<title>int* std::__copy_move_a1&lt;false, int const*, int*&gt; (394,757 samples, 0.04%)</title><rect x="698.8" y="453" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="701.83" y="463.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::emplace_back&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;&amp;&gt; (731,821 samples, 0.08%)</title><rect x="721.6" y="469" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="724.59" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_valptr (153,808 samples, 0.02%)</title><rect x="336.4" y="405" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="339.39" y="415.5" ></text>
</g>
<g >
<title>std::operator== (310,383 samples, 0.03%)</title><rect x="194.4" y="485" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="197.40" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (19,577,698 samples, 2.02%)</title><rect x="423.0" y="421" width="15.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="425.96" y="431.5" ></text>
</g>
<g >
<title> (275,175 samples, 0.03%)</title><rect x="292.6" y="517" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="295.56" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (977,631 samples, 0.10%)</title><rect x="774.0" y="309" width="0.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="777.02" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; const*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt;::__normal_iterator (156,097 samples, 0.02%)</title><rect x="292.1" y="501" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="295.14" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (191,013 samples, 0.02%)</title><rect x="53.4" y="485" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="56.38" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (1,422,790 samples, 0.15%)</title><rect x="83.0" y="421" width="1.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="86.02" y="431.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::CreateTxPowerSpectralDensityWithPowerAllocation (9,112,338 samples, 0.94%)</title><rect x="53.9" y="533" width="7.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="56.94" y="543.5" ></text>
</g>
<g >
<title>ns3::BsrLteControlMessage::SetBsr (1,023,273 samples, 0.11%)</title><rect x="685.7" y="501" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="688.72" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::operator= (234,084 samples, 0.02%)</title><rect x="419.3" y="325" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="422.30" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::_M_get_insert_unique_pos (344,616 samples, 0.04%)</title><rect x="504.5" y="485" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="507.45" y="495.5" ></text>
</g>
<g >
<title> (311,768 samples, 0.03%)</title><rect x="299.7" y="437" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="302.70" y="447.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (310,256 samples, 0.03%)</title><rect x="91.1" y="533" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="94.09" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;* std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::_Alloc_node&gt; (421,993 samples, 0.04%)</title><rect x="668.5" y="421" width="0.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="671.50" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::empty (163,295 samples, 0.02%)</title><rect x="589.4" y="261" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="592.42" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::BuildDataListElement_s, std::allocator&lt;ns3::BuildDataListElement_s&gt; &gt;::~_Vector_base (195,366 samples, 0.02%)</title><rect x="145.5" y="437" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="148.48" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::DlCqiLteControlMessage&gt; ns3::DynamicCast&lt;ns3::DlCqiLteControlMessage, ns3::LteControlMessage&gt; (201,818 samples, 0.02%)</title><rect x="462.1" y="357" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="465.10" y="367.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::ProcessOneEvent (920,121,348 samples, 94.88%)</title><rect x="37.2" y="741" width="740.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="40.22" y="751.5" >ns3::DefaultSimulatorImpl::ProcessOneEvent</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (200,664 samples, 0.02%)</title><rect x="64.8" y="389" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="67.77" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_S_key (325,721 samples, 0.03%)</title><rect x="507.7" y="501" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="510.74" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;unsigned char const*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::base (220,377 samples, 0.02%)</title><rect x="127.0" y="277" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="129.97" y="287.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumSignalParametersDlCtrlFrame::~LteSpectrumSignalParametersDlCtrlFrame (656,172 samples, 0.07%)</title><rect x="775.9" y="421" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="778.88" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_deallocate (190,332 samples, 0.02%)</title><rect x="674.2" y="421" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="677.16" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::at (243,145 samples, 0.03%)</title><rect x="594.1" y="293" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="597.10" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (1,030,409 samples, 0.11%)</title><rect x="239.2" y="277" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="242.15" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;int, double, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::find (922,442 samples, 0.10%)</title><rect x="57.8" y="501" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="60.77" y="511.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumPhy&gt;::operator bool (183,160 samples, 0.02%)</title><rect x="651.8" y="517" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="654.84" y="527.5" ></text>
</g>
<g >
<title>ns3::Seconds (2,151,776 samples, 0.22%)</title><rect x="682.5" y="549" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="685.48" y="559.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Ptr (165,554 samples, 0.02%)</title><rect x="62.3" y="469" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="65.27" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::LteSpectrumModelId, std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt;, std::_Select1st&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt;, std::less&lt;ns3::LteSpectrumModelId&gt;, std::allocator&lt;std::pair&lt;ns3::LteSpectrumModelId const, ns3::Ptr&lt;ns3::SpectrumModel&gt; &gt; &gt; &gt;::find (1,347,788 samples, 0.14%)</title><rect x="55.0" y="469" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="57.99" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;void  (601,990 samples, 0.06%)</title><rect x="471.1" y="373" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="474.05" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::SpectrumConverter, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::find (738,382 samples, 0.08%)</title><rect x="81.1" y="517" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="84.12" y="527.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_initialize_dispatch&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt; (267,551 samples, 0.03%)</title><rect x="464.2" y="517" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="467.16" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::Ptr&lt;ns3::UeManager&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::Ptr&lt;ns3::UeManager&gt; &gt; &gt; &gt;::find (225,392 samples, 0.02%)</title><rect x="18.5" y="325" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="21.49" y="335.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_allocate (308,272 samples, 0.03%)</title><rect x="198.0" y="437" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="201.01" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int, unsigned int&gt;::_Tuple_impl&lt;unsigned int&amp;, unsigned int&amp;, void&gt; (825,750 samples, 0.09%)</title><rect x="617.5" y="437" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="620.51" y="447.5" ></text>
</g>
<g >
<title>ns3::Packet::AddPacketTag (190,338 samples, 0.02%)</title><rect x="17.2" y="341" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="20.23" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned short&gt;::allocate (163,524 samples, 0.02%)</title><rect x="474.0" y="133" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="477.03" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;::pair&lt;unsigned short const&amp;&gt; (483,178 samples, 0.05%)</title><rect x="242.9" y="373" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="245.87" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::DlInfoListElement_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::find (353,675 samples, 0.04%)</title><rect x="508.8" y="549" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="511.84" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::_Vector_base (165,586 samples, 0.02%)</title><rect x="420.9" y="293" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="423.86" y="303.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmRrcSapUser&lt;ns3::LteEnbRrc&gt;::GetUeManager (2,186,317 samples, 0.23%)</title><rect x="27.4" y="373" width="1.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="30.44" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::deallocate (731,414 samples, 0.08%)</title><rect x="764.5" y="597" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="767.45" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_Rb_tree (934,328 samples, 0.10%)</title><rect x="189.9" y="469" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="192.89" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (128,267 samples, 0.01%)</title><rect x="564.4" y="149" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="567.40" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (502,296 samples, 0.05%)</title><rect x="767.6" y="661" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="770.55" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (1,986,872 samples, 0.20%)</title><rect x="403.1" y="485" width="1.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="406.14" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::end (1,104,797 samples, 0.11%)</title><rect x="761.4" y="709" width="0.9" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="764.38" y="719.5" ></text>
</g>
<g >
<title>void std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_realloc_insert&lt;unsigned char&gt; (975,393 samples, 0.10%)</title><rect x="214.9" y="453" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="217.95" y="463.5" ></text>
</g>
<g >
<title>ns3::RlcPduListElement_s* std::__relocate_a&lt;ns3::RlcPduListElement_s*, ns3::RlcPduListElement_s*, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; (319,205 samples, 0.03%)</title><rect x="209.9" y="437" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="212.91" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::allocate (155,343 samples, 0.02%)</title><rect x="331.7" y="389" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="334.66" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (665,489 samples, 0.07%)</title><rect x="719.1" y="453" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="722.09" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;4ul, ns3::Ptr&lt;ns3::SpectrumPhy&gt;, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt; &gt;::_Tuple_impl (263,591 samples, 0.03%)</title><rect x="667.7" y="325" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="670.74" y="335.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::Ptr&lt;ns3::Packet const&gt; &gt;::operator (797,898 samples, 0.08%)</title><rect x="494.1" y="549" width="0.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="497.13" y="559.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;::operator (148,217 samples, 0.02%)</title><rect x="186.9" y="421" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="189.92" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::size (234,068 samples, 0.02%)</title><rect x="701.2" y="517" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="704.18" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (738,134 samples, 0.08%)</title><rect x="572.7" y="325" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="575.66" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_impl::_Vector_impl (204,699 samples, 0.02%)</title><rect x="478.0" y="245" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="481.02" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (199,701 samples, 0.02%)</title><rect x="716.8" y="405" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="719.83" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Vector_base (1,034,686 samples, 0.11%)</title><rect x="519.9" y="325" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="522.86" y="335.5" ></text>
</g>
<g >
<title>ns3::Buffer::Initialize (1,901,878 samples, 0.20%)</title><rect x="31.2" y="373" width="1.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="34.17" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (231,358 samples, 0.02%)</title><rect x="530.3" y="309" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="533.27" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned short const&amp;&gt;::tuple&lt;true, true&gt; (148,271 samples, 0.02%)</title><rect x="244.4" y="469" width="0.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="247.35" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (367,412 samples, 0.04%)</title><rect x="697.7" y="549" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="700.67" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_addr (199,850 samples, 0.02%)</title><rect x="179.2" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="182.17" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::DlInfoListElement_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::DlInfoListElement_s&gt; &gt; &gt;::~map (349,670 samples, 0.04%)</title><rect x="509.4" y="549" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="512.41" y="559.5" ></text>
</g>
<g >
<title>ns3::LteEnbMac::DoSchedDlConfigInd (3,017,978 samples, 0.31%)</title><rect x="95.6" y="453" width="2.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="98.59" y="463.5" ></text>
</g>
<g >
<title>ns3::CqiListElement_s* std::uninitialized_copy&lt;std::move_iterator&lt;ns3::CqiListElement_s*&gt;, ns3::CqiListElement_s*&gt; (176,077 samples, 0.02%)</title><rect x="127.5" y="453" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="130.51" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator* (194,601 samples, 0.02%)</title><rect x="336.4" y="421" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="339.36" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::_M_allocate (190,161 samples, 0.02%)</title><rect x="212.9" y="373" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="215.85" y="383.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;unsigned short, unsigned short, double&gt;::operator (259,684 samples, 0.03%)</title><rect x="680.9" y="533" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="683.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::TbId_t, std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt;, std::_Select1st&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt;, std::less&lt;ns3::TbId_t&gt;, std::allocator&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::_Auto_node::_M_key (394,901 samples, 0.04%)</title><rect x="528.0" y="293" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="530.96" y="303.5" ></text>
</g>
<g >
<title>unsigned short&amp; std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::emplace_back&lt;unsigned short&gt; (376,292 samples, 0.04%)</title><rect x="102.2" y="453" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="105.17" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;::_M_ptr (313,712 samples, 0.03%)</title><rect x="24.0" y="309" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="27.00" y="319.5" ></text>
</g>
<g >
<title>ns3::Object::Object (225,956 samples, 0.02%)</title><rect x="118.8" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="121.84" y="479.5" ></text>
</g>
<g >
<title>ns3::TypeId::TypeId (145,703 samples, 0.02%)</title><rect x="632.4" y="453" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="635.44" y="463.5" ></text>
</g>
<g >
<title>ns3::Object::~Object (1,068,725 samples, 0.11%)</title><rect x="76.8" y="341" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="79.84" y="351.5" ></text>
</g>
<g >
<title>decltype  (443,190 samples, 0.05%)</title><rect x="661.3" y="341" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="664.26" y="351.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (5,295,295 samples, 0.55%)</title><rect x="280.5" y="533" width="4.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="283.50" y="543.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::EventImpl&gt;::Acquire (159,184 samples, 0.02%)</title><rect x="269.0" y="469" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="272.03" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::UlInfoListElement_s, std::allocator&lt;ns3::UlInfoListElement_s&gt; &gt;::~vector (390,357 samples, 0.04%)</title><rect x="133.9" y="501" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="136.93" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, double, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, double&gt; &gt; &gt;::find (2,045,789 samples, 0.21%)</title><rect x="294.5" y="533" width="1.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="297.51" y="543.5" ></text>
</g>
<g >
<title>all (969,771,633 samples, 100%)</title><rect x="10.0" y="869" width="780.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;signed char, std::allocator&lt;signed char&gt; &gt;::erase (696,549 samples, 0.07%)</title><rect x="532.3" y="341" width="0.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="535.28" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator= (196,986 samples, 0.02%)</title><rect x="326.0" y="501" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="328.98" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::SpectrumConverter&gt; &gt; &gt;::_S_key (330,075 samples, 0.03%)</title><rect x="81.3" y="469" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="84.29" y="479.5" ></text>
</g>
<g >
<title>signed char&amp;&amp; std::forward&lt;signed char&gt; (164,128 samples, 0.02%)</title><rect x="533.0" y="309" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="536.04" y="319.5" ></text>
</g>
<g >
<title>int* std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (730,011 samples, 0.08%)</title><rect x="398.8" y="517" width="0.6" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="401.81" y="527.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::operator* (201,247 samples, 0.02%)</title><rect x="409.0" y="533" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="412.01" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int, unsigned long&gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int, unsigned long&gt; &gt; &gt;::end (200,942 samples, 0.02%)</title><rect x="428.5" y="245" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="431.53" y="255.5" ></text>
</g>
<g >
<title>ns3::Time::IsPositive (216,700 samples, 0.02%)</title><rect x="278.4" y="501" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="281.40" y="511.5" ></text>
</g>
<g >
<title>decltype  (266,180 samples, 0.03%)</title><rect x="319.1" y="309" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="322.05" y="319.5" ></text>
</g>
<g >
<title>ns3::Time::GetTimeStep (201,200 samples, 0.02%)</title><rect x="278.2" y="501" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="281.24" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;::~map (220,721 samples, 0.02%)</title><rect x="666.3" y="325" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="669.34" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt;::base (193,728 samples, 0.02%)</title><rect x="207.6" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="210.63" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::_S_key (668,940 samples, 0.07%)</title><rect x="395.3" y="501" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="398.28" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (246,976 samples, 0.03%)</title><rect x="593.8" y="277" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="596.77" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (498,884 samples, 0.05%)</title><rect x="655.1" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="658.12" y="351.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_member_pointer_v&lt;void  (2,337,187 samples, 0.24%)</title><rect x="638.2" y="517" width="1.8" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="641.15" y="527.5" ></text>
</g>
<g >
<title>std::enable_if&lt;is_invocable_r_v&lt;void, ns3::Callback&lt;void, unsigned short, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt;::Callback&lt;void  (1,199,098 samples, 0.12%)</title><rect x="725.6" y="453" width="1.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="728.62" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::CqiListElement_s, std::allocator&lt;ns3::CqiListElement_s&gt; &gt;::_M_check_len (453,445 samples, 0.05%)</title><rect x="127.8" y="485" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="130.77" y="495.5" ></text>
</g>
<g >
<title>void std::_Construct&lt;ns3::HigherLayerSelected_s, ns3::HigherLayerSelected_s const&amp;&gt; (151,182 samples, 0.02%)</title><rect x="92.3" y="277" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="95.31" y="287.5" ></text>
</g>
<g >
<title>ns3::PacketTagList::RemoveWriter (241,075 samples, 0.02%)</title><rect x="431.0" y="277" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="434.05" y="287.5" ></text>
</g>
<g >
<title>ns3::Callback&lt;void, ns3::DlInfoListElement_s&gt;::operator (4,295,691 samples, 0.44%)</title><rect x="418.0" y="549" width="3.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="421.00" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (188,602 samples, 0.02%)</title><rect x="700.4" y="533" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="703.45" y="543.5" ></text>
</g>
<g >
<title>ns3::SbMeasResult_s::~SbMeasResult_s (209,574 samples, 0.02%)</title><rect x="585.1" y="277" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="588.12" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::VendorSpecificListElement_s, std::allocator&lt;ns3::VendorSpecificListElement_s&gt; &gt;::end (189,409 samples, 0.02%)</title><rect x="476.7" y="293" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="479.70" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (163,820 samples, 0.02%)</title><rect x="246.5" y="453" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="249.52" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; const*, std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt; &gt;::__normal_iterator (146,918 samples, 0.02%)</title><rect x="636.0" y="501" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="639.01" y="511.5" ></text>
</g>
<g >
<title>decltype  (395,364 samples, 0.04%)</title><rect x="253.1" y="373" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="256.13" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::~list (354,715 samples, 0.04%)</title><rect x="380.9" y="325" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="383.91" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_begin (190,458 samples, 0.02%)</title><rect x="663.1" y="405" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="666.06" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::_M_valptr (152,053 samples, 0.02%)</title><rect x="337.1" y="357" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="340.14" y="367.5" ></text>
</g>
<g >
<title>double* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (542,531 samples, 0.06%)</title><rect x="324.9" y="421" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="327.89" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::__copy_move_a&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (327,851 samples, 0.03%)</title><rect x="604.6" y="277" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="607.65" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_lower_bound (446,182 samples, 0.05%)</title><rect x="432.3" y="293" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="435.28" y="303.5" ></text>
</g>
<g >
<title> (206,181 samples, 0.02%)</title><rect x="69.4" y="437" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="72.45" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, ns3::SbMeasResult_s, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::SbMeasResult_s&gt; &gt; &gt;::find (452,741 samples, 0.05%)</title><rect x="135.5" y="485" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="138.48" y="495.5" ></text>
</g>
<g >
<title>ns3::Simulator::ScheduleWithContext (8,077,942 samples, 0.83%)</title><rect x="333.5" y="485" width="6.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="336.46" y="495.5" ></text>
</g>
<g >
<title>ns3::PfFfMacScheduler::UpdateDlRlcBufferInfo (1,587,094 samples, 0.16%)</title><rect x="181.2" y="485" width="1.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="184.23" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list (158,346 samples, 0.02%)</title><rect x="347.0" y="533" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="350.03" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::end (201,544 samples, 0.02%)</title><rect x="245.7" y="469" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="248.72" y="479.5" ></text>
</g>
<g >
<title>ns3::EventId ns3::Simulator::Schedule&lt;void  (22,013,376 samples, 2.27%)</title><rect x="267.1" y="549" width="17.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="270.05" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, unsigned short, std::_Identity&lt;unsigned short&gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;unsigned short&gt; &gt;::_M_lower_bound (1,198,361 samples, 0.12%)</title><rect x="395.2" y="517" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="398.24" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;5ul, std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;, false&gt;::_Head_base&lt;std::map&lt;unsigned int, ns3::Ptr&lt;ns3::SpectrumValue&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::Ptr&lt;ns3::SpectrumValue&gt; &gt; &gt; &gt;&amp;&gt; (236,989 samples, 0.02%)</title><rect x="340.6" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="343.59" y="319.5" ></text>
</g>
<g >
<title>ns3::MemberLteCcmMacSapUser&lt;ns3::NoOpComponentCarrierManager&gt;::NotifyTxOpportunity (538,351 samples, 0.06%)</title><rect x="96.2" y="437" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="99.20" y="447.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;::operator* (232,619 samples, 0.02%)</title><rect x="356.0" y="501" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="359.01" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::end (195,672 samples, 0.02%)</title><rect x="380.8" y="325" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="383.75" y="335.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::Copy (2,719,189 samples, 0.28%)</title><rect x="729.0" y="501" width="2.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="732.05" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;ns3::BuildDataListElement_s&gt;::allocate (158,386 samples, 0.02%)</title><rect x="202.5" y="421" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="205.48" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (489,793 samples, 0.05%)</title><rect x="92.5" y="373" width="0.4" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="95.54" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (281,814 samples, 0.03%)</title><rect x="700.7" y="533" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="703.65" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_destroy_node (1,051,072 samples, 0.11%)</title><rect x="763.3" y="645" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="766.26" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (162,051 samples, 0.02%)</title><rect x="574.9" y="341" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="577.92" y="351.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::PacketBurst&gt;::Ptr (314,646 samples, 0.03%)</title><rect x="543.8" y="293" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="546.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::back (217,631 samples, 0.02%)</title><rect x="636.3" y="501" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="639.25" y="511.5" ></text>
</g>
<g >
<title> (158,925 samples, 0.02%)</title><rect x="744.7" y="533" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="747.75" y="543.5" ></text>
</g>
<g >
<title>ns3::Packet::AddPacketTag (1,751,354 samples, 0.18%)</title><rect x="561.4" y="197" width="1.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="564.38" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; std::map&lt;ns3::Scheduler::EventKey, ns3::EventImpl*, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;ns3::Scheduler::EventKey, ns3::EventImpl*&gt; &gt; (2,897,473 samples, 0.30%)</title><rect x="334.0" y="421" width="2.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="337.03" y="431.5" ></text>
</g>
<g >
<title>ns3::EventImpl* ns3::PeekPointer&lt;ns3::EventImpl&gt; (357,408 samples, 0.04%)</title><rect x="268.7" y="469" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="271.75" y="479.5" ></text>
</g>
<g >
<title>ns3::FfMacSchedSapUser::SchedUlConfigIndParameters::SchedUlConfigIndParameters (2,391,271 samples, 0.25%)</title><rect x="227.4" y="469" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="230.38" y="479.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp; std::__pair_get&lt;1ul&gt;::__move_get&lt;unsigned int const&amp;, ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp;&gt; (161,945 samples, 0.02%)</title><rect x="333.1" y="469" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="336.14" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (158,922 samples, 0.02%)</title><rect x="573.8" y="277" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="576.81" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, ns3::pfsFlowPerf_t&gt; &gt; &gt;::_S_right (196,109 samples, 0.02%)</title><rect x="236.2" y="437" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="239.20" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (410,799 samples, 0.04%)</title><rect x="604.6" y="293" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="607.58" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_erase (690,702 samples, 0.07%)</title><rect x="193.1" y="453" width="0.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="196.12" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::at (487,190 samples, 0.05%)</title><rect x="678.2" y="485" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="681.22" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::vector (1,402,431 samples, 0.14%)</title><rect x="474.3" y="293" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="477.26" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned short const&amp;&gt;, std::tuple&lt;&gt; &gt; (229,116 samples, 0.02%)</title><rect x="99.5" y="421" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="102.47" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator-- (356,677 samples, 0.04%)</title><rect x="272.5" y="421" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="275.48" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocate (156,472 samples, 0.02%)</title><rect x="413.2" y="421" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="416.23" y="431.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::AntennaModel&gt;::Ptr (200,719 samples, 0.02%)</title><rect x="669.8" y="485" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="672.81" y="495.5" ></text>
</g>
<g >
<title>ns3::RngStream::RandU01 (646,005 samples, 0.07%)</title><rect x="495.4" y="517" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="498.41" y="527.5" ></text>
</g>
<g >
<title>ns3::DefaultDeleter&lt;ns3::EventImpl&gt;::Delete (9,050,608 samples, 0.93%)</title><rect x="770.0" y="709" width="7.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="773.01" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_valptr (354,218 samples, 0.04%)</title><rect x="180.6" y="405" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="183.62" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::DlInfoListElement_s::HarqStatus_e, std::allocator&lt;ns3::DlInfoListElement_s::HarqStatus_e&gt; &gt;::end (190,162 samples, 0.02%)</title><rect x="261.6" y="373" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="264.58" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; const*, std::vector&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;, std::allocator&lt;std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt; &gt; &gt; &gt;, std::vector&lt;ns3::RlcPduListElement_s, std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;*&gt; (262,535 samples, 0.03%)</title><rect x="204.9" y="341" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="207.92" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;::_M_ptr (194,523 samples, 0.02%)</title><rect x="184.0" y="453" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="186.98" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider*&gt; &gt; &gt;::find (1,655,067 samples, 0.17%)</title><rect x="565.5" y="213" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="568.49" y="223.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, unsigned char, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::find (152,374 samples, 0.02%)</title><rect x="94.3" y="469" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="97.28" y="479.5" ></text>
</g>
<g >
<title>ns3::LteUePowerControl::GetPuschTxPower (1,618,983 samples, 0.17%)</title><rect x="681.1" y="549" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="684.12" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;void  (4,103,031 samples, 0.42%)</title><rect x="418.1" y="517" width="3.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="421.09" y="527.5" ></text>
</g>
<g >
<title>ns3::MobilityModel::GetPosition (262,140 samples, 0.03%)</title><rect x="649.3" y="517" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="652.28" y="527.5" ></text>
</g>
<g >
<title>ns3::DefaultSimulatorImpl::Now (240,092 samples, 0.02%)</title><rect x="485.3" y="485" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="488.33" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt; std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;ns3::MacCeListElement_s*, std::vector&lt;ns3::MacCeListElement_s, std::allocator&lt;ns3::MacCeListElement_s&gt; &gt; &gt;, void&gt; (271,036 samples, 0.03%)</title><rect x="93.2" y="501" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="96.17" y="511.5" ></text>
</g>
<g >
<title>[libm.so.6] (281,723 samples, 0.03%)</title><rect x="477.0" y="309" width="0.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="480.05" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_Temporary_value::_M_ptr (155,817 samples, 0.02%)</title><rect x="251.5" y="437" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="254.52" y="447.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumModel const&gt;::Ptr (138,401 samples, 0.01%)</title><rect x="315.4" y="405" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="318.45" y="415.5" ></text>
</g>
<g >
<title>ns3::LteAmc::GetMcsFromCqi (160,208 samples, 0.02%)</title><rect x="232.0" y="485" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="234.97" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_right (316,628 samples, 0.03%)</title><rect x="274.7" y="421" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="277.65" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::end (197,575 samples, 0.02%)</title><rect x="419.7" y="325" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="422.68" y="335.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::_M_insert&lt;ns3::Ptr&lt;ns3::Packet&gt; const&amp;&gt; (1,745,012 samples, 0.18%)</title><rect x="22.2" y="325" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="25.19" y="335.5" ></text>
</g>
<g >
<title>ns3::LogComponent::IsEnabled (301,297 samples, 0.03%)</title><rect x="643.0" y="517" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="646.03" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::end (245,937 samples, 0.03%)</title><rect x="479.2" y="277" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="482.24" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;ns3::TbId_t const, ns3::tbInfo_t&gt; &gt; &gt;::allocate (264,767 samples, 0.03%)</title><rect x="384.5" y="405" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="387.48" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (1,527,153 samples, 0.16%)</title><rect x="126.1" y="389" width="1.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="129.10" y="399.5" ></text>
</g>
<g >
<title>ns3::BuildDataListElement_s::~BuildDataListElement_s (596,141 samples, 0.06%)</title><rect x="145.8" y="357" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="148.79" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (270,534 samples, 0.03%)</title><rect x="646.5" y="405" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="649.53" y="415.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;&amp; std::_Mu&lt;ns3::Ptr&lt;ns3::SpectrumValue&gt;, false, false&gt;::operator (158,589 samples, 0.02%)</title><rect x="50.1" y="597" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="53.11" y="607.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumValue&gt;::Acquire (152,792 samples, 0.02%)</title><rect x="304.0" y="501" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="307.04" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;::_M_ptr (164,987 samples, 0.02%)</title><rect x="568.9" y="293" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="571.88" y="303.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::SpectrumSignalParameters&gt;::operator (309,905 samples, 0.03%)</title><rect x="652.2" y="517" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="655.18" y="527.5" ></text>
</g>
<g >
<title>std::_List_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;* std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_create_node&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; const&amp;&gt; (271,484 samples, 0.03%)</title><rect x="96.0" y="357" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="98.95" y="367.5" ></text>
</g>
<g >
<title>ns3::MemberSchedSapProvider&lt;ns3::PfFfMacScheduler&gt;::SchedDlTriggerReq (19,285,336 samples, 1.99%)</title><rect x="19.6" y="549" width="15.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="22.60" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, ns3::TxSpectrumModelInfo&gt; &gt; &gt;::find (2,702,236 samples, 0.28%)</title><rect x="320.4" y="469" width="2.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="323.44" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::list&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (222,211 samples, 0.02%)</title><rect x="673.0" y="485" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="676.00" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_get_node (504,501 samples, 0.05%)</title><rect x="724.4" y="469" width="0.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="727.39" y="479.5" ></text>
</g>
<g >
<title>ns3::LteAmc::GetDlTbSizeFromMcs (517,023 samples, 0.05%)</title><rect x="174.9" y="485" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="177.88" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned short, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt;::find (186,790 samples, 0.02%)</title><rect x="102.7" y="469" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="105.72" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned short const, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (198,551 samples, 0.02%)</title><rect x="233.0" y="389" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="235.95" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;::operator (1,100,918 samples, 0.11%)</title><rect x="759.3" y="709" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="762.32" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_lower_bound (1,305,876 samples, 0.13%)</title><rect x="337.0" y="389" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="340.04" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_allocate (192,396 samples, 0.02%)</title><rect x="474.0" y="165" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="477.01" y="175.5" ></text>
</g>
<g >
<title>ns3::TracedCallback&lt;ns3::PhyTransmissionStatParameters&gt;::operator (297,993 samples, 0.03%)</title><rect x="535.2" y="357" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="538.16" y="367.5" ></text>
</g>
<g >
<title>ns3::Ptr&lt;ns3::MobilityModel const&gt;::Acquire (155,636 samples, 0.02%)</title><rect x="742.6" y="533" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="745.64" y="543.5" ></text>
</g>
<g >
<title>ns3::DlInfoListElement_s* std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::DlInfoListElement_s const*, std::vector&lt;ns3::DlInfoListElement_s, std::allocator&lt;ns3::DlInfoListElement_s&gt; &gt; &gt; &gt; (488,321 samples, 0.05%)</title><rect x="107.3" y="485" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="110.26" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::~_List_base (191,802 samples, 0.02%)</title><rect x="344.3" y="421" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="347.27" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (149,822 samples, 0.02%)</title><rect x="139.4" y="437" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="142.35" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_create_storage (423,769 samples, 0.04%)</title><rect x="300.5" y="421" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="303.48" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (251,714 samples, 0.03%)</title><rect x="574.5" y="309" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="577.48" y="319.5" ></text>
</g>
<g >
<title>ns3::operator/ (1,197,630 samples, 0.12%)</title><rect x="606.1" y="517" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="609.12" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapProvider::ReportBufferStatusParameters&gt; &gt; &gt;::empty (151,905 samples, 0.02%)</title><rect x="690.3" y="485" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="693.34" y="495.5" ></text>
</g>
<g >
<title>ns3::LteSpectrumValueHelper::GetSpectrumModel (2,046,878 samples, 0.21%)</title><rect x="297.1" y="485" width="1.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="300.07" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned short, std::pair&lt;unsigned short const, unsigned char&gt;, std::_Select1st&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt;, std::less&lt;unsigned short&gt;, std::allocator&lt;std::pair&lt;unsigned short const, unsigned char&gt; &gt; &gt;::find (848,294 samples, 0.09%)</title><rect x="176.7" y="453" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="179.75" y="463.5" ></text>
</g>
<g >
<title>ns3::NanoSeconds (241,154 samples, 0.02%)</title><rect x="424.7" y="213" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="427.72" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::clear (940,478 samples, 0.10%)</title><rect x="609.5" y="549" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="612.50" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (285,022 samples, 0.03%)</title><rect x="411.2" y="501" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="414.19" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned short const, std::vector&lt;ns3::DlDciListElement_s, std::allocator&lt;ns3::DlDciListElement_s&gt; &gt; &gt; &gt;::_M_valptr (194,523 samples, 0.02%)</title><rect x="184.0" y="469" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="186.98" y="479.5" ></text>
</g>
<g >
<title>operator new (168,940 samples, 0.02%)</title><rect x="78.5" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="81.52" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::_M_clear (154,447 samples, 0.02%)</title><rect x="622.3" y="373" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="625.28" y="383.5" ></text>
</g>
<g >
<title>unsigned char* std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (149,553 samples, 0.02%)</title><rect x="102.0" y="389" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="105.01" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned char, std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt;, std::_Select1st&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt;, std::less&lt;unsigned char&gt;, std::allocator&lt;std::pair&lt;unsigned char const, ns3::LteMacSapUser*&gt; &gt; &gt;::_M_begin (307,839 samples, 0.03%)</title><rect x="168.1" y="421" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="171.10" y="431.5" ></text>
</g>
<g >
<title>ns3::TypeId::GetParent (912,142 samples, 0.09%)</title><rect x="542.0" y="261" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="544.99" y="271.5" ></text>
</g>
<g >
<title>ns3::HigherLayerSelected_s* std::__do_uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;ns3::HigherLayerSelected_s const*, std::vector&lt;ns3::HigherLayerSelected_s, std::allocator&lt;ns3::HigherLayerSelected_s&gt; &gt; &gt;, ns3::HigherLayerSelected_s*&gt; (128,621 samples, 0.01%)</title><rect x="583.8" y="197" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="586.76" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_fill_insert (2,342,912 samples, 0.24%)</title><rect x="246.9" y="453" width="1.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="249.86" y="463.5" ></text>
</g>
<g >
<title>ns3::LteMacSapProvider::TransmitPduParameters::TransmitPduParameters (537,941 samples, 0.06%)</title><rect x="151.6" y="389" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="154.59" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::splice (536,019 samples, 0.06%)</title><rect x="673.2" y="469" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="676.20" y="479.5" ></text>
</g>
<g >
<title>decltype  (273,321 samples, 0.03%)</title><rect x="331.9" y="389" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="334.88" y="399.5" ></text>
</g>
<g >
<title>ns3::EnbMacMemberLteMacSapProvider&lt;ns3::LteEnbMac&gt;::TransmitPdu (5,428,262 samples, 0.56%)</title><rect x="19.6" y="389" width="4.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="22.60" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; std::__copy_move_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;*, std::vector&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt;, std::allocator&lt;std::__cxx11::list&lt;ns3::UlDciLteControlMessage, std::allocator&lt;ns3::UlDciLteControlMessage&gt; &gt; &gt; &gt; &gt; &gt; (253,831 samples, 0.03%)</title><rect x="110.5" y="469" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="113.50" y="479.5" ></text>
</g>
<g >
<title>ns3::IidManager::GetParent (351,090 samples, 0.04%)</title><rect x="632.1" y="453" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="635.09" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt;, std::allocator&lt;ns3::Callback&lt;void, unsigned short, unsigned char, unsigned int&gt; &gt; &gt;::end (164,697 samples, 0.02%)</title><rect x="567.3" y="245" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="570.26" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::Buffer::Data*, std::allocator&lt;ns3::Buffer::Data*&gt; &gt;::end (540,003 samples, 0.06%)</title><rect x="556.7" y="165" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="559.68" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_M_get_node (270,834 samples, 0.03%)</title><rect x="108.6" y="389" width="0.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="111.56" y="399.5" ></text>
</g>
<g >
<title>unsigned char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;unsigned char const, unsigned char&gt; (185,914 samples, 0.02%)</title><rect x="688.0" y="341" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="691.03" y="351.5" ></text>
</g>
<g >
<title>ns3::LteEnbPhy::SendControlChannels (6,963,923 samples, 0.72%)</title><rect x="111.4" y="533" width="5.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="114.35" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;ns3::Ptr&lt;ns3::Packet&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::Packet&gt; &gt; &gt;::clear (1,317,063 samples, 0.14%)</title><rect x="75.6" y="357" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="78.64" y="367.5" ></text>
</g>
<g >
<title>void std::_Destroy_aux&lt;true&gt;::__destroy&lt;ns3::DlInfoListElement_s::HarqStatus_e*&gt; (190,409 samples, 0.02%)</title><rect x="256.8" y="341" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="259.78" y="351.5" ></text>
</g>
<g >
<title>ns3::SpectrumValue::operator= (140,552 samples, 0.01%)</title><rect x="601.4" y="325" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="604.44" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;ns3::RlcPduListElement_s&gt; &gt;::allocate (190,161 samples, 0.02%)</title><rect x="212.9" y="357" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="215.85" y="367.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; std::__cxx11::list&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt; &gt;::insert&lt;std::_List_const_iterator&lt;ns3::Ptr&lt;ns3::LteControlMessage&gt; &gt;, void&gt; (704,280 samples, 0.07%)</title><rect x="346.4" y="485" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="349.44" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;ns3::Scheduler::EventKey, std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt;, std::_Select1st&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt;, std::less&lt;ns3::Scheduler::EventKey&gt;, std::allocator&lt;std::pair&lt;ns3::Scheduler::EventKey const, ns3::EventImpl*&gt; &gt; &gt;::_S_key (161,364 samples, 0.02%)</title><rect x="271.6" y="405" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="274.61" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;ns3::Ptr&lt;ns3::PacketBurst&gt;, std::allocator&lt;ns3::Ptr&lt;ns3::PacketBurst&gt; &gt; &gt;::_M_put_node (158,232 samples, 0.02%)</title><rect x="501.2" y="517" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="504.20" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, double&gt;, std::_Select1st&lt;std::pair&lt;int const, double&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, double&gt; &gt; &gt;::_M_erase (598,182 samples, 0.06%)</title><rect x="60.6" y="437" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="63.62" y="447.5" ></text>
</g>
<g >
<title>void std::_Destroy&lt;ns3::Ptr&lt;ns3::Object&gt;*, ns3::Ptr&lt;ns3::Object&gt; &gt; (154,688 samples, 0.02%)</title><rect x="635.4" y="293" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="638.37" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;ns3::HarqProcessInfoElement_t, std::allocator&lt;ns3::HarqProcessInfoElement_t&gt; &gt;::operator= (2,176,138 samples, 0.22%)</title><rect x="349.9" y="421" width="1.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="352.92" y="431.5" ></text>
</g>
</g>
</svg>
